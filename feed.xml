<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>InkCodes</title>
  <icon>https://inkcodes.com/img/myfavion.svg</icon>
  <subtitle>读书，学习，睡觉</subtitle>
  <link href="https://inkcodes.com/feed.xml" rel="self"/>
  <link href="https://pubsubhubbub.appspot.com/" rel="hub"/>
  <link href="https://inkcodes.com/"/>
  <updated>2024-12-07T13:12:21.000Z</updated>
  <id>https://inkcodes.com/</id>
  
  <author>
    <name>Specialhua</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基于Python的公司名分词比对</title>
    <link href="https://inkcodes.com/2024/12/07/%E5%9F%BA%E4%BA%8EPython%E7%9A%84%E5%85%AC%E5%8F%B8%E5%90%8D%E5%88%86%E8%AF%8D%E6%AF%94%E5%AF%B9/"/>
    <id>https://inkcodes.com/2024/12/07/%E5%9F%BA%E4%BA%8EPython%E7%9A%84%E5%85%AC%E5%8F%B8%E5%90%8D%E5%88%86%E8%AF%8D%E6%AF%94%E5%AF%B9/</id>
    <published>2024-12-07T13:12:47.000Z</published>
    <updated>2024-12-07T13:12:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>从事审计行业， 对于搞审计的人来说，sql可以说是大部分人都必会的知识了，<code>join</code>等语法应该都很熟悉。但面对被审计单位的许多非结构化数据，或者说从不同系统导出的数据，例如“重庆市渝北区丁义珍诊所”这样的机构名称，其又没有记录公司的税务识别号；或是基于手工记录的Excel文档、审计组下发回填上报的数据，没经过数据库的约束性校验，那么公司名就很有可能不是标准的，当我们想比对不同表间的公司名称时， 传统的sql语句就难以匹配到。像oracle等数据库提供的相似度函数<code>UTL_MATCH.EDIT_DISTANCE_SIMILARITY</code>、<code>UTL_MATCH.JARO_WINKLER_SIMILARITY</code>，仅基于一个<strong>相似度分数</strong>难以衡量分数大小，即便尝试不同的相似度分数，也难以对找到合适的值，所以本篇基于一次W项目提供一个解决思路</p><h3 id="companynameparser"><a href="#companynameparser" class="headerlink" title="companynameparser"></a>companynameparser</h3><hr><p>github项目地址：<a href="https://github.com/shibing624/companynameparser">company name parser</a><sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="中文公司名称分词工具，支持公司名称中的地名，品牌名（主词），行业词，公司名后缀提取，[companynameparser](https://github.com/shibing624/companynameparser)">[1]</span></a></sup><br>作者主页：<a href="https://github.com/shibing624">Ming Xu (徐明)</a><br>extract company name brand. 中文公司名称分词工具，支持公司名称中的地名，品牌名（主词），行业词，公司名后缀提取。</p><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><p>input:</p><div class="highlight-wrap" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> companynameparser<br><br>company_strs = [<br>    <span class="hljs-string">&quot;武汉海明智业电子商务有限公司&quot;</span>,<br>    <span class="hljs-string">&quot;泉州益念食品有限公司&quot;</span>,<br>    <span class="hljs-string">&quot;常州途畅互联网科技有限公司合肥分公司&quot;</span>,<br>    <span class="hljs-string">&quot;昆明享亚教育信息咨询有限公司&quot;</span>,<br>]<br><span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> company_strs:<br>    r = companynameparser.parse(name)<br>    <span class="hljs-built_in">print</span>(r)<br></code></pre></td></tr></table></figure></div><p>output:</p><div class="highlight-wrap" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">&#123;<span class="hljs-string">&#x27;place&#x27;</span>: <span class="hljs-string">&#x27;武汉&#x27;</span>, <span class="hljs-string">&#x27;brand&#x27;</span>: <span class="hljs-string">&#x27;海明智业&#x27;</span>, <span class="hljs-string">&#x27;trade&#x27;</span>: <span class="hljs-string">&#x27;电子商务&#x27;</span>, <span class="hljs-string">&#x27;suffix&#x27;</span>: <span class="hljs-string">&#x27;有限公司&#x27;</span>, <span class="hljs-string">&#x27;symbol&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>&#125;<br>&#123;<span class="hljs-string">&#x27;place&#x27;</span>: <span class="hljs-string">&#x27;泉州&#x27;</span>, <span class="hljs-string">&#x27;brand&#x27;</span>: <span class="hljs-string">&#x27;益念&#x27;</span>, <span class="hljs-string">&#x27;trade&#x27;</span>: <span class="hljs-string">&#x27;食品&#x27;</span>, <span class="hljs-string">&#x27;suffix&#x27;</span>: <span class="hljs-string">&#x27;有限公司&#x27;</span>, <span class="hljs-string">&#x27;symbol&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>&#125;<br>&#123;<span class="hljs-string">&#x27;place&#x27;</span>: <span class="hljs-string">&#x27;常州,合肥&#x27;</span>, <span class="hljs-string">&#x27;brand&#x27;</span>: <span class="hljs-string">&#x27;途畅&#x27;</span>, <span class="hljs-string">&#x27;trade&#x27;</span>: <span class="hljs-string">&#x27;互联网科技&#x27;</span>, <span class="hljs-string">&#x27;suffix&#x27;</span>: <span class="hljs-string">&#x27;有限公司,分公司&#x27;</span>, <span class="hljs-string">&#x27;symbol&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>&#125;<br>&#123;<span class="hljs-string">&#x27;place&#x27;</span>: <span class="hljs-string">&#x27;昆明&#x27;</span>, <span class="hljs-string">&#x27;brand&#x27;</span>: <span class="hljs-string">&#x27;享亚&#x27;</span>, <span class="hljs-string">&#x27;trade&#x27;</span>: <span class="hljs-string">&#x27;教育信息咨询&#x27;</span>, <span class="hljs-string">&#x27;suffix&#x27;</span>: <span class="hljs-string">&#x27;有限公司&#x27;</span>, <span class="hljs-string">&#x27;symbol&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>&#125;<br></code></pre></td></tr></table></figure></div><h4 id="基于"><a href="#基于" class="headerlink" title="基于"></a>基于</h4><p>该项目基于中文分词<a href="https://github.com/fxsjy/jieba">jieba</a><sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="“结巴”中文分词：做最好的 Python [中文分词组件](https://github.com/fxsjy/jieba)">[2]</span></a></sup></p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><ul><li>全自动安装：<code>pip install -U companynameparser</code></li><li>半自动安装：</li></ul><div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/shibing624/companynameparser.git<br><span class="hljs-built_in">cd</span> companynameparser<br>python setup.py install<br></code></pre></td></tr></table></figure></div><p>通过以上两种方法的任何一种完成安装都可以。如果不想安装，可以下载github源码包，安装依赖<a href="https://github.com/shibing624/companynameparser/blob/main/requirements.txt">requirements.txt</a>再使用。</p><ul><li>离线安装：使用网络被隔离的环境，可以在github下载companynameparser和jieba的包后，甩到本机Python环境的<code>site-packages</code>当中</li></ul><h3 id="项目场景"><a href="#项目场景" class="headerlink" title="项目场景"></a>项目场景</h3><hr><h4 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h4><p>审计手里有两张表，A表为机构信息表，从卫健部门系统导出，★标识的为关注的重点，表结构为：</p><table><thead><tr><th>序号</th><th>数据项</th><th>类型及长度</th><th>字段说明</th></tr></thead><tbody><tr><td>1</td><td>当前状态</td><td>String</td><td>“变更”、“注册”、“诊所备案”等</td></tr><tr><td>2</td><td>机构名称</td><td>String</td><td>导出机构名称★</td></tr><tr><td>3</td><td>床位数</td><td>Int</td><td>本例中不重要</td></tr><tr><td>4</td><td>牙椅数</td><td>Int</td><td>本例中不重要</td></tr></tbody></table><p>B表为医废运输信息表，从企业取得，部分表结构如下：</p><table><thead><tr><th>序号</th><th>数据项</th><th>类型及长度</th><th>字段说明</th></tr></thead><tbody><tr><td>1</td><td>序号</td><td>String</td><td>“变更”、“注册”、“诊所备案”等</td></tr><tr><td>2</td><td>联单编号</td><td>String</td><td>主键</td></tr><tr><td>3</td><td>联单类型</td><td>Int</td><td>如“医废转移联单”等</td></tr><tr><td>4</td><td>联单状态</td><td>Int</td><td>“已办结”、“未办结”等</td></tr><tr><td>5</td><td>产废单位</td><td>String</td><td>机构名称★</td></tr><tr><td>6</td><td>运输单位</td><td>String</td><td>运输医废的单位</td></tr><tr><td>7</td><td>转移量(kg)</td><td>float</td><td>数量</td></tr><tr><td>…</td><td>……</td><td>……</td><td>……</td></tr></tbody></table><h4 id="To-do"><a href="#To-do" class="headerlink" title="To do"></a>To do</h4><p>关注<strong>诊所类</strong>机构，如A表中（名称为虚构），机构名称为“重庆市渝北区丁义珍诊所”，B表中，机构名称为“重庆渝北解放路丁义珍西医诊所”，两者实为同一机构，现需要查找在A表机构名称中有（诊所均需向卫健部门登记），而在B表产废单位中没有（诊所未将医废交由医废企业处理）的疑点</p><h4 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h4><h5 id="1-自定义用户词典"><a href="#1-自定义用户词典" class="headerlink" title="1.自定义用户词典"></a>1.自定义用户词典</h5><p>由于jieba所使用的中文分词词典（位于jiaba包内<a href="https://github.com/fxsjy/jieba/blob/master/jieba/dict.txt">dict.txt</a>）缺失部分地点、人名，例如重庆市“永川区”在jieba分词词典中仍为“永川市”，又如“大足区”、“合川区”也未在词典中，再加之场景下，部分个独企业诊所多数以“人名”来命名，部分人名无法正确分词，因此需要添加自定义词典以保证分词准确。</p><div class="note note-info">            <p>注意，自定义用户词典，应当根据程序运行的结果不断调整，例如某些地名无法被正确分词至“place”分组，那么应当更新用户自定义词典</p>          </div><p>这是一个示例的用户自定义词典：<br>格式为<code> &#123;词&#125; &#123;词频&#125; &#123;词性&#125;</code></p><div class="highlight-wrap" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs text">永川 3 ns<br>永川区 9 ns<br>合川 3 ns<br>合川区 9 ns<br>大足 3 ns<br>大足区 9 ns<br>史建宁 3 nr<br>康太平 3 nr<br>刘新建 3 nr<br></code></pre></td></tr></table></figure></div><p>以下是<code>jieba.Tokenizer</code> 分词器词性标注的解释<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="词性标注，tokenizer参数可指定内部使用的 jieba.Tokenizer分词器[使用示例](https://github.com/fxsjy/jieba#%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B)">[3]</span></a></sup>。</p><table><thead><tr><th>标签</th><th>含义</th><th>标签</th><th>含义</th><th>标签</th><th>含义</th><th>标签</th><th>含义</th></tr></thead><tbody><tr><td>n</td><td>普通名词</td><td>f</td><td>方位名词</td><td>s</td><td>处所名词</td><td>t</td><td>时间</td></tr><tr><td>nr</td><td>人名</td><td>ns</td><td>地名</td><td>nt</td><td>机构名</td><td>nw</td><td>作品名</td></tr><tr><td>nz</td><td>其他专名</td><td>v</td><td>普通动词</td><td>vd</td><td>动副词</td><td>vn</td><td>名动词</td></tr><tr><td>a</td><td>形容词</td><td>ad</td><td>副形词</td><td>an</td><td>名形词</td><td>d</td><td>副词</td></tr><tr><td>m</td><td>数量词</td><td>q</td><td>量词</td><td>r</td><td>代词</td><td>p</td><td>介词</td></tr><tr><td>c</td><td>连词</td><td>u</td><td>助词</td><td>xc</td><td>其他虚词</td><td>w</td><td>标点符号</td></tr><tr><td>PER</td><td>人名</td><td>LOC</td><td>地名</td><td>ORG</td><td>机构名</td><td>TIME</td><td>时间</td></tr></tbody></table><h5 id="2-修改companynameparser-data中的行业、后缀"><a href="#2-修改companynameparser-data中的行业、后缀" class="headerlink" title="2.修改companynameparser&#x2F;data中的行业、后缀"></a>2.修改companynameparser&#x2F;data中的行业、后缀</h5><p>由于companynameparser主要是针对公司名称，如<code>“武汉海明智业电子商务有限公司”</code>这样的公司名来分词，对医疗机构来说，如“诊所”这样的词默认还是会被分到<code>brand</code>里，我们不想让其作为干扰项，那么就修改<code>/data/trade.txt</code>，在末尾添加“诊所”。<br>对于诊所前的“修饰”，如中医诊所、西医诊所、中西医诊所，修改<code>data/suffix.txt</code>，在末尾添加如下内容：</p><div class="note note-info">            <p>应当根据程序运行的结果不断调整</p>          </div><div class="highlight-wrap" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs text">中医<br>西医<br>中西医<br>结合<br>（综合）<br>口腔诊所<br>儿科<br>妇科<br>医学美容<br>眼科<br></code></pre></td></tr></table></figure></div><h5 id="python实现"><a href="#python实现" class="headerlink" title="python实现"></a>python实现</h5><p>由于使用了作者提供的包，建议在构建项目时，创建<code>CITATION</code>文件，并输入以下内容：</p><div class="highlight-wrap" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bibtex">@software&#123;companynameparser,<br>  author = &#123;Xu Ming&#125;,<br>  title = &#123;companynameparser: Company Name parser Tool&#125;,<br>  year = &#123;2021&#125;,<br>  url = &#123;https://github.com/shibing624/companynameparser&#125;,<br>&#125;<br></code></pre></td></tr></table></figure></div><p>以下是python实现，常量部分仅供阅读参考</p><div class="highlight-wrap" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> typing <span class="hljs-keyword">import</span> <span class="hljs-type">List</span><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> companynameparser <span class="hljs-keyword">as</span> cp<br><span class="hljs-keyword">import</span> jieba<br><span class="hljs-keyword">from</span> pathlib <span class="hljs-keyword">import</span> Path<br><br><span class="hljs-comment"># 定义常量</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Paths</span>:<br>    CONCAT_PATH = Path(<span class="hljs-string">&#x27;/tmp/医废联单&#x27;</span>)<br>    STD_CLINIC_FILE = Path(<span class="hljs-string">&#x27;/tmp/导出机构信息.xlsx&#x27;</span>)<br>    CUSTOM_DICT_PATH = Path(<span class="hljs-string">&#x27;/tmp/custom_dict.txt&#x27;</span>)<br>    RESULT_FILE = Path(<span class="hljs-string">&#x27;/tmp/未交医废企业处置诊所疑点表.xlsx&#x27;</span>)<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ColumnNames</span>:<br>    UNIT_NAME_A = <span class="hljs-string">&quot;机构名称&quot;</span>  <span class="hljs-comment"># 机构信息表中，单位名称列名</span><br>    UNIT_NAME_B = <span class="hljs-string">&quot;产废单位&quot;</span>  <span class="hljs-comment"># 医废联单中，单位名称列名</span><br>    FILTER_WORD = <span class="hljs-string">&quot;诊所&quot;</span>     <span class="hljs-comment"># 筛选机构关键词</span><br>    UNION_NAME = <span class="hljs-string">&quot;简化名&quot;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">init_jieba</span>():<br>    <span class="hljs-string">&quot;&quot;&quot;初始化结巴分词用户词典&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> Paths.CUSTOM_DICT_PATH.exists():<br>        <span class="hljs-keyword">raise</span> FileNotFoundError(<span class="hljs-string">f&quot;用户词典文件不存在: <span class="hljs-subst">&#123;Paths.CUSTOM_DICT_PATH&#125;</span>&quot;</span>)<br>    jieba.load_userdict(<span class="hljs-built_in">str</span>(Paths.CUSTOM_DICT_PATH))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_filelist</span>(<span class="hljs-params">path: Path</span>) -&gt; <span class="hljs-type">List</span>[Path]:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    获取传入路径内含子文件夹所有文件的绝对路径</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Args:</span><br><span class="hljs-string">        path: 指定路径</span><br><span class="hljs-string">    Returns:</span><br><span class="hljs-string">        包含所有文件绝对路径的列表</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> path.exists():<br>        <span class="hljs-keyword">raise</span> FileNotFoundError(<span class="hljs-string">f&quot;指定路径不存在: <span class="hljs-subst">&#123;path&#125;</span>&quot;</span>)<br>    <br>    <span class="hljs-keyword">return</span> [Path(os.path.join(root, file)) <br>            <span class="hljs-keyword">for</span> root, _, files <span class="hljs-keyword">in</span> os.walk(path) <br>            <span class="hljs-keyword">for</span> file <span class="hljs-keyword">in</span> files]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_brand</span>(<span class="hljs-params">column_name: <span class="hljs-built_in">str</span>, row: pd.Series</span>) -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    获取DataFrame某一列根据companynameparser分词的结果</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Args:</span><br><span class="hljs-string">        column_name: 列名</span><br><span class="hljs-string">        row: DataFrame的行数据</span><br><span class="hljs-string">    Returns:</span><br><span class="hljs-string">        分词后的品牌名</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">try</span>:<br>        listbrand = cp.parse(row[column_name])[<span class="hljs-string">&#x27;brand&#x27;</span>].split(<span class="hljs-string">&quot;,&quot;</span>)<br>        <span class="hljs-keyword">return</span> listbrand[<span class="hljs-number">0</span>] <span class="hljs-keyword">if</span> listbrand <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;处理行数据时出错: <span class="hljs-subst">&#123;row[column_name]&#125;</span>, 错误: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_dup_table</span>(<span class="hljs-params">unit_name: <span class="hljs-built_in">str</span>, df: pd.DataFrame</span>) -&gt; pd.DataFrame:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    获得单位名称与提取到的brand去重后的DataFrame</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Args:</span><br><span class="hljs-string">        unit_name: 单位名称</span><br><span class="hljs-string">        df: 要去重的DataFrame</span><br><span class="hljs-string">    Returns:</span><br><span class="hljs-string">        去重后的DataFrame</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">return</span> df[[unit_name, ColumnNames.UNION_NAME]].drop_duplicates()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    <span class="hljs-string">&quot;&quot;&quot;主函数入口&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">try</span>:<br>        init_jieba()<br>        <br>        <span class="hljs-comment"># 读取并合并医废联单数据</span><br>        dfs = []<br>        <span class="hljs-keyword">for</span> file <span class="hljs-keyword">in</span> get_filelist(Paths.CONCAT_PATH):<br>            <span class="hljs-keyword">if</span> file.suffix == <span class="hljs-string">&#x27;.xls&#x27;</span>:<br>                <span class="hljs-keyword">try</span>:<br>                    df = pd.read_excel(file, engine=<span class="hljs-string">&#x27;xlrd&#x27;</span>, skiprows=<span class="hljs-number">1</span>)<br>                    dfs.append(df)<br>                <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>                    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;读取文件失败 <span class="hljs-subst">&#123;file&#125;</span>: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>        <br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> dfs:<br>            <span class="hljs-keyword">raise</span> ValueError(<span class="hljs-string">&quot;没有找到可用的数据文件&quot;</span>)<br>            <br>        df_all = pd.concat(dfs)<br>        <br>        <span class="hljs-comment"># 处理医废联单数据</span><br>        df_filtered = df_all[df_all[ColumnNames.UNIT_NAME_B].<span class="hljs-built_in">str</span>.contains(<br>            ColumnNames.FILTER_WORD, na=<span class="hljs-literal">False</span>)].copy()<br>        df_filtered[ColumnNames.UNION_NAME] = df_filtered.apply(<br>            <span class="hljs-keyword">lambda</span> row: get_brand(ColumnNames.UNIT_NAME_B, row), axis=<span class="hljs-number">1</span>)<br>        result_df_b = get_dup_table(ColumnNames.UNIT_NAME_B, df_filtered)<br>        <br>        <span class="hljs-comment"># 处理标准机构表</span><br>        df_std = pd.read_excel(Paths.STD_CLINIC_FILE)<br>        df_std_filtered = df_std[df_std[ColumnNames.UNIT_NAME_A].<span class="hljs-built_in">str</span>.contains(<br>            ColumnNames.FILTER_WORD, na=<span class="hljs-literal">False</span>)].copy()<br>        df_std_filtered[ColumnNames.UNION_NAME] = df_std_filtered.apply(<br>            <span class="hljs-keyword">lambda</span> row: get_brand(ColumnNames.UNIT_NAME_A, row), axis=<span class="hljs-number">1</span>)<br>        result_df_a = get_dup_table(ColumnNames.UNIT_NAME_A, df_std_filtered)<br>        <br>        <span class="hljs-comment"># 合并结果并输出</span><br>        df_merged = pd.merge(result_df_a, result_df_b, <br>                           on=ColumnNames.UNION_NAME, how=<span class="hljs-string">&#x27;left&#x27;</span>)<br>        unmatched = df_merged[df_merged[ColumnNames.UNIT_NAME_B].isna()]<br>        unmatched.to_excel(Paths.RESULT_FILE, index=<span class="hljs-literal">False</span>)<br>        <br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;程序执行出错: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    main()<br></code></pre></td></tr></table></figure></div><h3 id="结果示例"><a href="#结果示例" class="headerlink" title="结果示例"></a>结果示例</h3><hr><p>以下为部分结果示例：</p><table><thead><tr><th>机构名称</th><th>简化名</th><th>产废单位</th></tr></thead><tbody><tr><td>重庆渝北解放路丁义珍西医诊所</td><td>丁义珍</td><td>重庆市渝北区丁义珍诊所</td></tr><tr><td>重庆市大足区丁真中西医结合诊所</td><td>丁真</td><td>大足丁真中西医结合诊所人民路分店</td></tr><tr><td>重庆市合川区宝宝巴士眼科诊所</td><td>宝宝巴士</td><td></td></tr><tr><td>重庆市北碚区张三口腔诊所</td><td>张三</td><td></td></tr></tbody></table><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><hr><p>仅提供一个思路， 且有很多不完善的地方，例如，未对<code>brand</code>分词结果为多个的情况继续细分，默认A表B表中同一个诊所机构在分词秩序上，即便是多个品牌词的情况，第一个都是相同的（从结果上看也基本符合），又如，万一有关键词重名，但一个是“中医诊所”，一个是“西医诊所”的情况也未考虑，但案例确为真实且有成效的，仅用于审计疑点的初筛已足够，就没有继续往下追。<br>如对你审计工作有一点帮助或启发，就足够了。如有不足，请多包含指正。</p><hr><section class="footnotes"><h3>参考</h3><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>中文公司名称分词工具，支持公司名称中的地名，品牌名（主词），行业词，公司名后缀提取，<a href="https://github.com/shibing624/companynameparser">companynameparser</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>“结巴”中文分词：做最好的 Python <a href="https://github.com/fxsjy/jieba">中文分词组件</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span>词性标注，tokenizer参数可指定内部使用的 jieba.Tokenizer分词器<a href="https://github.com/fxsjy/jieba#%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B">使用示例</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;从事审计行业， 对于搞审计的人来说，sql可以说是大部分人都必会的知识了，&lt;code&gt;join&lt;/code&gt;等语法应该都很熟悉。但面对被审计单位的许多非结构化数据，或者说从不同系统导出的数据，例如“重庆市渝北区丁义珍诊所”这样的机构名称，其又没有记录公司的税务识别号；或是基</summary>
      
    
    
    
    <category term="技术" scheme="https://inkcodes.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="python" scheme="https://inkcodes.com/tags/python/"/>
    
    <category term="审计" scheme="https://inkcodes.com/tags/%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>给Hexo博客添加贪吃蛇热力图</title>
    <link href="https://inkcodes.com/2024/12/04/%E7%BB%99Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%B4%AA%E5%90%83%E8%9B%87%E7%83%AD%E5%8A%9B%E5%9B%BE/"/>
    <id>https://inkcodes.com/2024/12/04/%E7%BB%99Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%B4%AA%E5%90%83%E8%9B%87%E7%83%AD%E5%8A%9B%E5%9B%BE/</id>
    <published>2024-12-03T23:12:33.000Z</published>
    <updated>2024-12-03T23:12:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近在瞎逛的时候，偶然看到老何的<a href="https://www.mrhe.net/about">博客</a>有一个贪吃蛇的热力图，展示了其posts文章在时间上的分布，并且以一个贪吃蛇的小动画来吃掉一个一个小点，感觉很有趣，看着自己的提交空白一片，仅有的几个还被“小蛇”吃了也蛮有意思，于是想着也在自己的博客上实现一个，因为博客部署在github page上，自己发布的文章在github仓库里本来就是有热力数据的，很契合。</p><h3 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h3><h4 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h4><p>依赖于github项目<a href="https://github.com/Platane/snk">Platane&#x2F;snk</a>，感谢开源的代码</p><h4 id="热力图-Heatmap"><a href="#热力图-Heatmap" class="headerlink" title="热力图 - Heatmap"></a>热力图 - Heatmap</h4><p>热力图，是一种通过对色块着色来显示数据的统计图表。绘图时，需指定颜色映射的规则。例如，较大的值由较深的颜色表示，较小的值由较浅的颜色表示；较大的值由偏暖的颜色表示，较小的值由较冷的颜色表示，等等。</p><p>从数据结构来划分，热力图一般分为两种。第一，表格型热力图，也称色块图。它需要2个分类字段+1个数值字段，分类字段确定x、y轴，将图表划分为规整的矩形块。数值字段决定了矩形块的颜色。第二，非表格型热力图，或曰平滑的热力图，它需要3个数值字段，可绘制在平行坐标系中（2个数值字段分别确定x、y轴，1个数值字段确定着色）。</p><p>我们要生成的就是横轴为月份，纵轴为星期的表格型热力图（浅色下，颜色越深代表的当天contribution越多，反过来，深色主题下颜色越亮代表contribution越多）及对应的随时间的进度条<br><img src="https://cdn.specialhua.top/hexo_img/Screenshot_04-12%E6%9C%88_08-19-59_2757.png-pic" srcset="/img/loading.gif" lazyload alt="热力图案例"></p><h4 id="Markdown-内嵌-HTML-标签"><a href="#Markdown-内嵌-HTML-标签" class="headerlink" title="Markdown 内嵌 HTML 标签"></a>Markdown 内嵌 HTML 标签</h4><p>戳<a href="https://markdown.com.cn/basic-syntax/htmls.html">Markdown官方教程</a>这里有一些说明，关于markdown内嵌标签的一些示例，总之</p><blockquote><p>对于 Markdown 涵盖范围之外的标签，都可以直接在文件里面用 HTML 本身。如需使用 HTML，不需要额外标注这是 HTML 或是 Markdown，只需 HTML 标签添加到 Markdown 文本中即可。</p></blockquote><h4 id="Fluid支持自定义CSS"><a href="#Fluid支持自定义CSS" class="headerlink" title="Fluid支持自定义CSS"></a>Fluid支持自定义CSS</h4><p>使用Fluid主题是支持自定义css、js等的，贪吃蛇热力图不过就是两张透明svg图片，我们用Markdown内嵌html标签，插入日间、夜间主题对应的两张图片，然后通过<a href="https://hexo.fluid-dev.com/docs/guide/#%E8%87%AA%E5%AE%9A%E4%B9%89-js-css-html">自定义CSS</a>来控制切换日夜主题时显示的svg即可<br>如果你使用的是其他Hexo主题，大部分应当都支持一些自定义的方式，请查阅主题配置相关文档</p><blockquote><p><code>指定自定义 css 文件路径，路径是相对 source 目录</code><br><code>custom_css: /css/custom.css</code></p></blockquote><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><h4 id="github-to-do"><a href="#github-to-do" class="headerlink" title="github to do"></a>github to do</h4><h5 id="新建一个仓库"><a href="#新建一个仓库" class="headerlink" title="新建一个仓库"></a>新建一个仓库</h5><p><img src="https://cdn.specialhua.top/hexo_img/Screenshot_05-12%E6%9C%88_00-29-17_12461.png-pic" srcset="/img/loading.gif" lazyload alt="新建仓库"></p><p><img src="https://cdn.specialhua.top/hexo_img/Screenshot_05-12%E6%9C%88_00-31-01_2721.png-pic" srcset="/img/loading.gif" lazyload alt="仓库命名"></p><h5 id="新建一个Action"><a href="#新建一个Action" class="headerlink" title="新建一个Action"></a>新建一个Action</h5><p>在github上，<code>New repository</code>，然后如图，Repository名称随意</p><p><img src="https://cdn.specialhua.top/hexo_img/Screenshot_05-12%E6%9C%88_00-34-54_31638.png-pic" srcset="/img/loading.gif" lazyload alt="Screenshot_05-12月_00-34-54_31638.png"></p><p>点击<code>Actions</code> ，再点击”set up a workfllow yourself”，填入以下内容，然后<code>Commit Changes</code>：</p><div class="note note-info">            <p>记得替换<code>$ github.repository_owner </code>为你的github用户名<br>形如：</p><div class="highlight-wrap" data-rel="Dts"><figure class="iseeu highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">with:</span><br><span class="hljs-symbol">  github_user_name:</span> specialhua<br></code></pre></td></tr></table></figure></div>          </div><div class="highlight-wrap" data-rel="Yml"><figure class="iseeu highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">name:</span> <span class="hljs-string">generate</span> <span class="hljs-string">animation</span><br><br><span class="hljs-attr">on:</span><br>  <span class="hljs-comment"># run automatically every 6 hours</span><br>  <span class="hljs-attr">schedule:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">cron:</span> <span class="hljs-string">&quot;0 */6 * * *&quot;</span>  <span class="hljs-comment"># 每6小时运行一次 </span><br>  <br>  <span class="hljs-comment"># allows to manually run the job at any time</span><br>  <span class="hljs-attr">workflow_dispatch:</span><br>  <br>  <span class="hljs-comment"># run on every push on the master branch</span><br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">branches:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">master</span><br>    <br>  <br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">generate:</span><br>    <span class="hljs-attr">permissions:</span> <br>      <span class="hljs-attr">contents:</span> <span class="hljs-string">write</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">timeout-minutes:</span> <span class="hljs-number">5</span><br>    <br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-comment"># generates a snake game from a github user (&lt;github_user_name&gt;) contributions graph, output a svg animation at &lt;svg_out_path&gt;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">generate</span> <span class="hljs-string">github-contribution-grid-snake.svg</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">Platane/snk/svg-only@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">github_user_name:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">github.repository_owner</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">outputs:</span> <span class="hljs-string">|</span><br><span class="hljs-string">            dist/github-contribution-grid-snake.svg</span><br><span class="hljs-string">            dist/github-contribution-grid-snake-dark.svg?palette=github-dark</span><br><span class="hljs-string"></span>          <br>          <br>      <span class="hljs-comment"># push the content of &lt;build_dir&gt; to a branch</span><br>      <span class="hljs-comment"># the content will be available at https://raw.githubusercontent.com/&lt;github_user&gt;/&lt;repository&gt;/&lt;target_branch&gt;/&lt;file&gt; , or as github page</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">push</span> <span class="hljs-string">github-contribution-grid-snake.svg</span> <span class="hljs-string">to</span> <span class="hljs-string">the</span> <span class="hljs-string">output</span> <span class="hljs-string">branch</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">crazy-max/ghaction-github-pages@v3.1.0</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">target_branch:</span> <span class="hljs-string">output</span><br>          <span class="hljs-attr">build_dir:</span> <span class="hljs-string">dist</span><br>        <span class="hljs-attr">env:</span><br>          <span class="hljs-attr">GITHUB_TOKEN:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.GITHUB_TOKEN</span> <span class="hljs-string">&#125;&#125;</span><br></code></pre></td></tr></table></figure></div><h5 id="运行workflow"><a href="#运行workflow" class="headerlink" title="运行workflow"></a>运行workflow</h5><p><img src="https://cdn.specialhua.top/hexo_img/Screenshot_05-12%E6%9C%88_00-51-08_19703.png-pic" srcset="/img/loading.gif" lazyload alt="Screenshot_05-12月_00-51-08_19703.png"></p><h5 id="获得两张svg图片"><a href="#获得两张svg图片" class="headerlink" title="获得两张svg图片"></a>获得两张svg图片</h5><p>等待生成完毕，到<code>code</code>下，切换分支到<code>output</code>下，即可看到light和dark两张svg图片，保存两张图片的地址如：</p><blockquote><p><a href="https://github.com/specialhua/snk/blob/output/github-contribution-grid-snake-dark.svg">https://github.com/specialhua/snk/blob/output/github-contribution-grid-snake-dark.svg</a><br><a href="https://github.com/specialhua/snk/blob/output/github-contribution-grid-snake.svg">https://github.com/specialhua/snk/blob/output/github-contribution-grid-snake.svg</a></p></blockquote><h4 id="blog-to-do"><a href="#blog-to-do" class="headerlink" title="blog to do"></a>blog to do</h4><h5 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h5><p>在你想插入的页面，例如我是在关于页面，那就在关于页面的<code>index.md</code>下插入内容：</p><div class="note note-info">            <p>注意替换链接。这里为了让国内也访问，直接走的jsdelivr的cdn节点，仿照我的格式去替换就行。<br>也尝试使用其他mirror镜像，如cdn.jsmirror等，由于缓存机制可能在图片已经更新后还未更新到新版本<br>末尾的参数<code>?t=1</code>为强制带上时间戳刷新，以保证获取的图片为最新的</p>          </div><div class="highlight-wrap" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;snake-pic&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;snake-light&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/specialhua/snk@output/github-contribution-grid-snake.svg?t=1&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;GitHub Snake Light&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;snake-dark&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/specialhua/snk@output/github-contribution-grid-snake-dark.svg?t=1&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;GitHub Snake Dark&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure></div><h5 id="添加自定义css"><a href="#添加自定义css" class="headerlink" title="添加自定义css"></a>添加自定义css</h5><p>在<code>source/css/custom.css</code>（如无，自行添加，并在<code>_config.fluid.yml</code>中定义开启）中添加如下：</p><div class="note note-info">            <p>这里不用自定义CSS的话，夜间主题下图片总是不透明，因此做了一个强制透明</p>          </div><div class="highlight-wrap" data-rel="Css"><figure class="iseeu highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* Snake */</span><br><span class="hljs-selector-class">.snake-dark</span> &#123;<br>    <span class="hljs-attribute">display</span>: none;<br>&#125;<br><span class="hljs-selector-class">.snake-light</span> &#123;<br>    <span class="hljs-attribute">display</span>: block;<br>&#125;<br><br><span class="hljs-comment">/* 夜间模式：确保背景透明，显示 dark 图像 */</span><br><span class="hljs-selector-attr">[data-user-color-scheme=<span class="hljs-string">&#x27;dark&#x27;</span>]</span> <span class="hljs-selector-id">#snake-pic</span> &#123;<br>    <span class="hljs-attribute">background-color</span>: transparent; <span class="hljs-comment">/* 确保背景透明 */</span><br>&#125;<br><br><span class="hljs-selector-attr">[data-user-color-scheme=<span class="hljs-string">&#x27;dark&#x27;</span>]</span> <span class="hljs-selector-class">.snake-light</span> &#123;<br>    <span class="hljs-attribute">display</span>: none; <span class="hljs-comment">/* 隐藏 light 版本 */</span><br>&#125;<br><br><span class="hljs-selector-attr">[data-user-color-scheme=<span class="hljs-string">&#x27;dark&#x27;</span>]</span> <span class="hljs-selector-class">.snake-dark</span> &#123;<br>    <span class="hljs-attribute">display</span>: block; <span class="hljs-comment">/* 显示 dark 版本 */</span><br>&#125;<br><br><span class="hljs-comment">/* 确保图片本身背景透明 */</span><br><span class="hljs-selector-id">#snake-pic</span> <span class="hljs-selector-tag">img</span> &#123;<br><span class="hljs-attribute">background-color</span>: transparent;<br>&#125;<br></code></pre></td></tr></table></figure></div><h5 id="hexo-clean-hexo-d"><a href="#hexo-clean-hexo-d" class="headerlink" title="hexo clean &amp;&amp; hexo d"></a>hexo clean &amp;&amp; hexo d</h5><p>也可clean以后hexo s本地看看有没有问题</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近在瞎逛的时候，偶然看到老何的&lt;a href=&quot;https://www.mrhe.net/about&quot;&gt;博客&lt;/a&gt;有一个贪吃蛇的热力图，展示了其posts文章在时间上的分布，并且以一个贪吃蛇的小动画来吃掉一个一个小点，感觉很有趣，看着自己的提交空白一片，仅有的几个还被“</summary>
      
    
    
    
    <category term="乐趣" scheme="https://inkcodes.com/categories/%E4%B9%90%E8%B6%A3/"/>
    
    
    <category term="blog" scheme="https://inkcodes.com/tags/blog/"/>
    
    <category term="Fluid" scheme="https://inkcodes.com/tags/Fluid/"/>
    
    <category term="web" scheme="https://inkcodes.com/tags/web/"/>
    
    <category term="hexo" scheme="https://inkcodes.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>记一次qexo说说Error500崩溃</title>
    <link href="https://inkcodes.com/2024/11/28/%E8%AE%B0%E4%B8%80%E6%AC%A1qexo%E8%AF%B4%E8%AF%B4Error500%E5%B4%A9%E6%BA%83/"/>
    <id>https://inkcodes.com/2024/11/28/%E8%AE%B0%E4%B8%80%E6%AC%A1qexo%E8%AF%B4%E8%AF%B4Error500%E5%B4%A9%E6%BA%83/</id>
    <published>2024-11-27T18:11:57.000Z</published>
    <updated>2024-11-27T18:11:05.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="表现"><a href="#表现" class="headerlink" title="表现"></a>表现</h3><p>在一次用手机（IOS18.1 safari）更新说说的标签时，成功发布说说，但是qexo后台访问说说页面时直接报错Error 500，表现为页面<code>https://qexo地址/talks.html</code>页面报错如图，但是其他后台管理页面正常。尝试通过qexo配置手册里的修复、重新部署均无法恢复。<br><img src="https://cdn.specialhua.top/hexo_img/Screenshot_28-11%E6%9C%88_02-30-03_193.png-pic" srcset="/img/loading.gif" lazyload alt="崩溃页面"></p><h3 id="排查"><a href="#排查" class="headerlink" title="排查"></a>排查</h3><p>搜索qexo的issues，尝试查找<code>500</code>关键字，发现有关回答与数据库相关，于是想到可能是数据库字段内容出错导致炸了。</p><div class="note note-warning">            <p>我使用的是qexo一键部署至vercel，数据库使用的是neondb<br><strong>如果你使用的是其他部署方式，或自建服务器方式，请根据自己的情况查看数据库表格的存储位置</strong></p>          </div><p>打开vercel，进入到qexo项目，在<code>Storage</code>选项内，右边有<code>Open in Neon</code>按钮，点击后进入数据库后台，如图，在<code>BRANCH——Tables——hexoweb_talkmodel</code>中可以看到<strong>奇怪</strong>的一点：<br>time字段，测试崩溃的数据值为<code>NaN</code>，猜测是数据库没对time字段，或是qexo没对该字段进行约束导致，可能是手机在更新说说时，意外的在时间字段传入了<code>NaN</code>，导致qexo说说后台无法正常读取数据，从而报错。<br><img src="https://cdn.specialhua.top/hexo_img/Screenshot_28-11%E6%9C%88_02-38-35_5582.png-pic" srcset="/img/loading.gif" lazyload alt="Neondb后台"></p><h3 id="Bug复现"><a href="#Bug复现" class="headerlink" title="Bug复现"></a>Bug复现</h3><p>正如上图，在qexo后台说说管理页面，随便新建一条说说，将<code>更新于：</code>(yyyy-mm-dd hh:mi:ss格式)，直接写上NAN（删除时间留空是可以的，会自动捕获当前时间并转换为Unix时间戳），能够正常提交说说，但是当再次进入说说管理页面时，就报错了</p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>进入neondb后台管理，将<code>time</code>字段的值改为正常的Unix时间戳，可以用<a href="https://tool.chinaz.com/tools/unixtime.aspx">时间戳转换器</a>进行转换，或者嫌麻烦，直接填写上下类似的值，并<code>Save change</code>即可。等待数据库update数据之后，再次进入说说页面就正常了<br><img src="https://cdn.specialhua.top/hexo_img/Screenshot_28-11%E6%9C%88_02-46-03_9311.png-pic" srcset="/img/loading.gif" lazyload alt="Screenshot_28-11月_02-46-03_9311.png"></p><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>已同步提交此bug至<a href="https://github.com/Qexo/Qexo/issues/592">qexo issues</a>，向作者反馈问题，后续如有更新可能会修复bug</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;表现&quot;&gt;&lt;a href=&quot;#表现&quot; class=&quot;headerlink&quot; title=&quot;表现&quot;&gt;&lt;/a&gt;表现&lt;/h3&gt;&lt;p&gt;在一次用手机（IOS18.1 safari）更新说说的标签时，成功发布说说，但是qexo后台访问说说页面时直接报错Error 500，表现为</summary>
      
    
    
    
    <category term="技术" scheme="https://inkcodes.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="blog" scheme="https://inkcodes.com/tags/blog/"/>
    
    <category term="qexo" scheme="https://inkcodes.com/tags/qexo/"/>
    
    <category term="error" scheme="https://inkcodes.com/tags/error/"/>
    
  </entry>
  
  <entry>
    <title>为hexo博客Fluid主题添加书单</title>
    <link href="https://inkcodes.com/2024/11/27/%E4%B8%BAhexo%E5%8D%9A%E5%AE%A2Fluid%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E4%B9%A6%E5%8D%95/"/>
    <id>https://inkcodes.com/2024/11/27/%E4%B8%BAhexo%E5%8D%9A%E5%AE%A2Fluid%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E4%B9%A6%E5%8D%95/</id>
    <published>2024-11-27T03:11:58.000Z</published>
    <updated>2024-11-27T03:11:46.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p>感谢<a href="https://www.mz-zone.cn/2021/11/12/20211112001/">北 辰の小 栈</a>提供的代码及CSS样式，以及其文末提供的源码作者博客链接（链接已无法访问了）<a href="https://wenchong.space/">雨中的博客</a>，尽管搜索了作者的名字等，似乎也只找到了博客园有作者相关信息（<del>不确定</del>）。总之，感谢。</p><h3 id="改动及思路"><a href="#改动及思路" class="headerlink" title="改动及思路"></a>改动及思路</h3><p>因为北辰使用的是Volantis主题，其主要在layout目录下创建<code>book.ejs</code>来应用CSS样式，但Fluid主题是很好的支持自定义css的。因此可以将全部CSS放到<code>/soucre/css/custom.css</code>中，直接在主题的<code>_config.fluid.yml</code>中在自定义CSS处引用即可</p><h3 id="Step1-创建自定义页面"><a href="#Step1-创建自定义页面" class="headerlink" title="Step1.创建自定义页面"></a>Step1.创建自定义页面</h3><p>终端中，进入博客目录后</p><div class="highlight-wrap" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo new page books<br></code></pre></td></tr></table></figure></div><p>这会在你博客的<code>/source</code>下自动创建一个books文件夹，并在<code>/source/books</code>下自动创建<code>index.md</code>文件</p><h3 id="Step2-自定义CSS"><a href="#Step2-自定义CSS" class="headerlink" title="Step2.自定义CSS"></a>Step2.自定义CSS</h3><p>在你的博客<code>/soucre/css/custom.css</code>（如没有，自行创建）中填入以下内容：</p><div class="highlight-wrap" data-rel="Css"><figure class="iseeu highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br></pre></td><td class="code"><pre><code class="hljs CSS"><span class="hljs-comment">/* 将以下内容添加到 source/css/custom.css */</span><br><br><span class="hljs-comment">/* 书籍列表容器样式 */</span><br><span class="hljs-selector-id">#book</span> &#123;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>&#125;<br><br><span class="hljs-selector-id">#book</span> <span class="hljs-selector-class">.page</span> &#123;<br><span class="hljs-attribute">overflow</span>: hidden;<br><span class="hljs-attribute">border-radius</span>: <span class="hljs-number">3px</span>;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>&#125;<br><br><span class="hljs-selector-id">#book</span> <span class="hljs-selector-class">.content</span> &#123;<br><span class="hljs-attribute">display</span>: flex;<br><span class="hljs-attribute">align-items</span>: center;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br><span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br><span class="hljs-attribute">justify-content</span>: space-between;<br><span class="hljs-attribute">flex-wrap</span>: wrap;<br><span class="hljs-attribute">padding</span>: <span class="hljs-number">16px</span>;<br><span class="hljs-attribute">text-align</span>: justify;<br>&#125;<br><br><span class="hljs-comment">/* 响应式布局 */</span><br><span class="hljs-keyword">@media</span> screen <span class="hljs-keyword">and</span> (<span class="hljs-attribute">max-width</span>: <span class="hljs-number">877px</span>) &#123;<br>    <span class="hljs-selector-id">#book</span> <span class="hljs-selector-class">.page</span> <span class="hljs-selector-class">.content</span> &#123;<br>    <span class="hljs-attribute">flex-direction</span>: column;<br>    <span class="hljs-attribute">align-items</span>: center;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/* 书籍卡片样式 */</span><br><span class="hljs-selector-id">#book</span> <span class="hljs-selector-class">.content</span> <span class="hljs-selector-tag">li</span> &#123;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">380px</span>;<br><span class="hljs-attribute">list-style</span>: none;<br><span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">16px</span>;<br><span class="hljs-attribute">border-radius</span>: <span class="hljs-number">8px</span>;<br><span class="hljs-attribute">transition</span>: all .<span class="hljs-number">3s</span> ease <span class="hljs-number">0s</span>, transform .<span class="hljs-number">6s</span> <span class="hljs-built_in">cubic-bezier</span>(.<span class="hljs-number">6</span>, .<span class="hljs-number">2</span>, .<span class="hljs-number">1</span>, <span class="hljs-number">1</span>) <span class="hljs-number">0s</span>;<br>&#125;<br><br><span class="hljs-selector-id">#book</span> <span class="hljs-selector-class">.content</span> <span class="hljs-selector-tag">li</span> <span class="hljs-selector-class">.info</span> &#123;<br><span class="hljs-attribute">border-radius</span>: <span class="hljs-number">8px</span>;<br><span class="hljs-attribute">display</span>: flex;<br><span class="hljs-attribute">justify-content</span>: flex-start;<br><span class="hljs-attribute">padding</span>: <span class="hljs-number">16px</span> <span class="hljs-number">12px</span>;<br><span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.7</span>;<br><span class="hljs-attribute">list-style</span>: none;<br>&#125;<br><br><span class="hljs-comment">/* 书籍封面3D效果 */</span><br><span class="hljs-selector-class">.book-container</span> &#123;<br>    <span class="hljs-attribute">display</span>: flex;<br>    <span class="hljs-attribute">align-items</span>: center;<br>    <span class="hljs-attribute">justify-content</span>: center;<br>    <span class="hljs-attribute">perspective</span>: <span class="hljs-number">600px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.book</span> &#123;<br>    <span class="hljs-attribute">position</span>: relative;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">150px</span>;<br>    <span class="hljs-attribute">transform-style</span>: preserve-<span class="hljs-number">3</span>d;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotateY</span>(-<span class="hljs-number">30deg</span>);<br>    <span class="hljs-attribute">transition</span>: <span class="hljs-number">1s</span> ease;<br>    <span class="hljs-attribute">list-style</span>: none;<br>&#125;<br><br><span class="hljs-selector-class">.book</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>    <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot; &quot;</span>;<br>    <span class="hljs-attribute">position</span>: absolute;<br>    <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">top</span>: <span class="hljs-number">2px</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">23px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">146px</span>;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateX</span>(<span class="hljs-number">84.5px</span>) <span class="hljs-built_in">rotateY</span>(<span class="hljs-number">90deg</span>);<br>    <span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-number">90deg</span>, <span class="hljs-number">#fff</span>, <span class="hljs-number">#f9f9f9</span> <span class="hljs-number">5%</span>, <span class="hljs-number">#fff</span> <span class="hljs-number">10%</span>, <span class="hljs-number">#f9f9f9</span> <span class="hljs-number">15%</span>, <span class="hljs-number">#fff</span> <span class="hljs-number">20%</span>, <span class="hljs-number">#f9f9f9</span> <span class="hljs-number">25%</span>, <span class="hljs-number">#fff</span> <span class="hljs-number">30%</span>, <span class="hljs-number">#f9f9f9</span> <span class="hljs-number">35%</span>, <span class="hljs-number">#fff</span> <span class="hljs-number">40%</span>, <span class="hljs-number">#f9f9f9</span> <span class="hljs-number">45%</span>, <span class="hljs-number">#fff</span> <span class="hljs-number">50%</span>, <span class="hljs-number">#f9f9f9</span> <span class="hljs-number">55%</span>, <span class="hljs-number">#fff</span> <span class="hljs-number">60%</span>, <span class="hljs-number">#f9f9f9</span> <span class="hljs-number">65%</span>, <span class="hljs-number">#fff</span> <span class="hljs-number">70%</span>, <span class="hljs-number">#f9f9f9</span> <span class="hljs-number">75%</span>, <span class="hljs-number">#fff</span> <span class="hljs-number">80%</span>, <span class="hljs-number">#f9f9f9</span> <span class="hljs-number">85%</span>, <span class="hljs-number">#fff</span> <span class="hljs-number">90%</span>, <span class="hljs-number">#f9f9f9</span> <span class="hljs-number">95%</span>, <span class="hljs-number">#fff</span>);<br>&#125;<br><br><span class="hljs-selector-class">.book</span> &gt; <span class="hljs-selector-pseudo">:first-child</span> &#123;<br>    <span class="hljs-attribute">position</span>: absolute;<br>    <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">150px</span>;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateZ</span>(<span class="hljs-number">12.5px</span>);<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">0</span> <span class="hljs-number">2px</span> <span class="hljs-number">2px</span> <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">5px</span> <span class="hljs-number">5px</span> <span class="hljs-number">20px</span> <span class="hljs-number">#666</span>;<br>&#125;<br><br><span class="hljs-selector-class">.book</span><span class="hljs-selector-pseudo">:after</span> &#123;<br>    <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot; &quot;</span>;<br>    <span class="hljs-attribute">position</span>: absolute;<br>    <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">150px</span>;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateZ</span>(-<span class="hljs-number">12.5px</span>);<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#555</span>;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">0</span> <span class="hljs-number">2px</span> <span class="hljs-number">2px</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-comment">/* 书籍信息卡片样式 */</span><br><span class="hljs-selector-id">#book</span> <span class="hljs-selector-class">.content</span> <span class="hljs-selector-tag">li</span> <span class="hljs-selector-class">.info</span> &gt; <span class="hljs-selector-tag">div</span> &#123;<br><span class="hljs-attribute">margin-left</span>: <span class="hljs-number">26px</span>;<br>&#125;<br><br><span class="hljs-selector-id">#book</span> <span class="hljs-selector-class">.content</span> <span class="hljs-selector-tag">li</span> <span class="hljs-selector-class">.info</span> <span class="hljs-selector-tag">h3</span> &#123;<br><span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;<br><span class="hljs-attribute">position</span>: unset;<br><span class="hljs-attribute">background</span>: none;<br><span class="hljs-attribute">display</span>: block;<br><span class="hljs-attribute">text-overflow</span>: ellipsis;<br><span class="hljs-attribute">overflow</span>: hidden;<br><span class="hljs-attribute">white-space</span>: nowrap;<br>&#125;<br><br><span class="hljs-selector-id">#book</span> <span class="hljs-selector-class">.content</span> <span class="hljs-selector-tag">li</span> <span class="hljs-selector-class">.info</span> <span class="hljs-selector-tag">h3</span><span class="hljs-selector-pseudo">:before</span> &#123;<br><span class="hljs-attribute">display</span>: none;<br>&#125;<br><br><span class="hljs-selector-id">#book</span> <span class="hljs-selector-class">.content</span> <span class="hljs-selector-tag">li</span> <span class="hljs-selector-class">.info</span> <span class="hljs-selector-tag">p</span> &#123;<br><span class="hljs-attribute">font-size</span>: <span class="hljs-number">14px</span>;<br><span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.7</span>;<br>&#125;<br><br><span class="hljs-comment">/* 悬浮效果 */</span><br><span class="hljs-selector-id">#book</span> <span class="hljs-selector-class">.content</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-class">.book</span> &#123;<br><span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotateY</span>(<span class="hljs-number">0deg</span>);<br>&#125;<br><br><span class="hljs-comment">/* 书籍简介弹出层 */</span><br><span class="hljs-selector-id">#book</span> <span class="hljs-selector-class">.info</span> <span class="hljs-selector-class">.info-card</span> &#123;<br><span class="hljs-attribute">position</span>: relative;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">250px</span>;<br><span class="hljs-attribute">overflow</span>: hidden;<br><span class="hljs-attribute">transition</span>: .<span class="hljs-number">3s</span>;<br>&#125;<br><br><span class="hljs-selector-id">#book</span> <span class="hljs-selector-class">.info</span> <span class="hljs-selector-class">.info-card</span> <span class="hljs-selector-class">.hidden-content</span> &#123;<br><span class="hljs-attribute">position</span>: absolute;<br><span class="hljs-attribute">display</span>: flex;<br><span class="hljs-attribute">justify-content</span>: center;<br><span class="hljs-attribute">align-items</span>: center;<br><span class="hljs-attribute">top</span>: <span class="hljs-number">50%</span>;<br><span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span>;<br><span class="hljs-attribute">height</span>: <span class="hljs-number">0%</span>;<br><span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate</span>(-<span class="hljs-number">50%</span>, -<span class="hljs-number">50%</span>);<br><span class="hljs-attribute">filter</span>: <span class="hljs-built_in">blur</span>(<span class="hljs-number">12px</span>);<br><span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;<br><span class="hljs-attribute">background</span>: <span class="hljs-number">#fff</span>;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br><span class="hljs-attribute">transition</span>: .<span class="hljs-number">5s</span>;<br>&#125;<br><br><span class="hljs-selector-id">#book</span> <span class="hljs-selector-class">.info</span> <span class="hljs-selector-class">.info-card</span> <span class="hljs-selector-class">.hidden-content</span> <span class="hljs-selector-class">.text</span> &#123;<br><span class="hljs-attribute">height</span>: <span class="hljs-number">80%</span>;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">80%</span>;<br><span class="hljs-attribute">padding</span>: <span class="hljs-number">5px</span>;<br><span class="hljs-attribute">overflow</span>: hidden;<br><span class="hljs-attribute">text-overflow</span>: ellipsis;<br><span class="hljs-attribute">font-size</span>: <span class="hljs-number">14px</span>;<br><span class="hljs-attribute">color</span>: <span class="hljs-number">#676767</span>;<br><span class="hljs-attribute">float</span>: left;<br><span class="hljs-attribute">clear</span>: both;<br><span class="hljs-attribute">text-align</span>: justify;<br>&#125;<br><br><span class="hljs-selector-id">#book</span> <span class="hljs-selector-class">.info</span> <span class="hljs-selector-class">.info-card</span> <span class="hljs-selector-class">.hidden-content</span> <span class="hljs-selector-class">.text</span><span class="hljs-selector-pseudo">::first-letter</span> &#123;<br><span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;<br><span class="hljs-attribute">float</span>: left;<br><span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> .<span class="hljs-number">2em</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-id">#book</span> <span class="hljs-selector-class">.info</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span> + <span class="hljs-selector-class">.info-card</span> <span class="hljs-selector-class">.hidden-content</span> &#123;<br><span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;<br><span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br><span class="hljs-attribute">filter</span>: unset;<br>&#125;<br><br><span class="hljs-selector-id">#book</span> <span class="hljs-selector-class">.content</span> <span class="hljs-selector-tag">li</span> <span class="hljs-selector-class">.info</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-attr">[target=<span class="hljs-string">&quot;_blank&quot;</span>]</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br><span class="hljs-attribute">color</span>: <span class="hljs-number">#0056b3</span>;<br><span class="hljs-attribute">text-decoration</span>: underline;<br>&#125;<br><br><span class="hljs-selector-id">#book</span> <span class="hljs-selector-class">.content</span> <span class="hljs-selector-tag">li</span> <span class="hljs-selector-class">.info</span> <span class="hljs-selector-class">.pwd-text</span> &#123;<br><span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;<br><span class="hljs-attribute">color</span>: <span class="hljs-number">#666</span>;<br><span class="hljs-attribute">margin-top</span>: <span class="hljs-number">3px</span>;<br>&#125;<br></code></pre></td></tr></table></figure></div><h3 id="Step3-修改index-md"><a href="#Step3-修改index-md" class="headerlink" title="Step3.修改index.md"></a>Step3.修改index.md</h3><p>在上述所说的<code>/source/books/index.md</code>中，修改为以下内容：<br><code>title</code>、<code>banner_img</code>等可以自定义，此处不再缀述<br>html中的链接请自行替换，要增加书籍复制<code>&lt;!-- 书籍示例 --&gt;</code>下面的两个<code>&lt;li&gt;</code>标签之间的内容，然后更换后继续往后粘贴就是</p><div class="highlight-wrap" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br>......<br><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br></code></pre></td></tr></table></figure></div><p>以下为<code>index.md</code>内容</p><div class="highlight-wrap" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs html">---<br>title: 书单<br>date: 2024-11-27 10:33:03<br>banner_img: <br>---<br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;book&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;page&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br>            <span class="hljs-comment">&lt;!-- 书籍示例 --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;info&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;可以填豆瓣链接&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;noopener noreferrer&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;book-container&quot;</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;book&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;我与地坛&quot;</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.specialhua.top/hexo_img/我与地坛.webp&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;我与地坛&quot;</span>&gt;</span><br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;info-card&quot;</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hidden-content&quot;</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text&quot;</span>&gt;</span>书籍简介<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>《书名》<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>作者：<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>出版时间：<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;可以填书籍下载链接&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;noopener noreferrer&quot;</span>&gt;</span>📥 下载<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;pwd-text&quot;</span>&gt;</span><br>                            提取码：xxxx<br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-comment">&lt;!-- 书籍示例2 --&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br></code></pre></td></tr></table></figure></div><h3 id="Step4-编辑-config-fluid-yml"><a href="#Step4-编辑-config-fluid-yml" class="headerlink" title="Step4.编辑_config.fluid.yml"></a>Step4.编辑<code>_config.fluid.yml</code></h3><p>在fluid主题配置中，加入导航栏按钮：</p><div class="highlight-wrap" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">navbar:</span><br>  <span class="hljs-attr">menu:</span><br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&quot;书单&quot;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;/books/&quot;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&quot;iconfont icon-book&quot;</span>&#125;<br></code></pre></td></tr></table></figure></div><p><code>link:</code>对应上述<code>hexo new page books</code>创建的页面，如果不是自行修改。<code>icon:</code>参考fluid主题配置文档，默认已提供一些icon图标</p><h3 id="Step5-不用多说"><a href="#Step5-不用多说" class="headerlink" title="Step5.不用多说"></a>Step5.不用多说</h3><div class="highlight-wrap" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo clean &amp;&amp; hexo g<br><br>hexo s<br><br>hexo d<br></code></pre></td></tr></table></figure></div><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="https://cdn.specialhua.top/hexo_img/Screenshot_27-11%E6%9C%88_16-27-00_16913.webp" srcset="/img/loading.gif" lazyload alt="3D书籍效果"></p><p><img src="https://cdn.specialhua.top/hexo_img/Screenshot_27-11%E6%9C%88_16-29-41_17402.webp" srcset="/img/loading.gif" lazyload alt="鼠标悬浮后转2D及显示简介"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;p&gt;感谢&lt;a href=&quot;https://www.mz-zone.cn/2021/11/12/20211112001/&quot;&gt;北 辰の小 栈&lt;/a&gt;</summary>
      
    
    
    
    <category term="技术" scheme="https://inkcodes.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="blog" scheme="https://inkcodes.com/tags/blog/"/>
    
    <category term="书单" scheme="https://inkcodes.com/tags/%E4%B9%A6%E5%8D%95/"/>
    
    <category term="Fluid" scheme="https://inkcodes.com/tags/Fluid/"/>
    
  </entry>
  
  <entry>
    <title>修改fluid主题网站标题为图片</title>
    <link href="https://inkcodes.com/2024/11/20/%E4%BF%AE%E6%94%B9fluid%E4%B8%BB%E9%A2%98%E7%BD%91%E7%AB%99%E6%A0%87%E9%A2%98%E4%B8%BA%E5%9B%BE%E7%89%87/"/>
    <id>https://inkcodes.com/2024/11/20/%E4%BF%AE%E6%94%B9fluid%E4%B8%BB%E9%A2%98%E7%BD%91%E7%AB%99%E6%A0%87%E9%A2%98%E4%B8%BA%E5%9B%BE%E7%89%87/</id>
    <published>2024-11-19T17:11:12.000Z</published>
    <updated>2024-11-19T17:11:39.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p>正如我的博客这样，左上角的网站标题被修改成了logo，你应当准备一张透明的图片，并且细心的你会发现fluid主题在日间或夜间导航栏都为深色，所以你可以像我这样偷个懒，只需要准备一张透明底色、logo内容为浅色的图片就行。</p><h3 id="能从主题配置中修改吗？"><a href="#能从主题配置中修改吗？" class="headerlink" title="能从主题配置中修改吗？"></a>能从主题配置中修改吗？</h3><p>hexo博客fluid主题的<code>_config.fluid.yml</code>主题配置文件能够很方便的修改网站标题，但是<a href="https://hexo.fluid-dev.com/docs/guide/#%E9%A1%B5%E9%9D%A2%E9%A1%B6%E9%83%A8%E5%A4%A7%E5%9B%BE">fluid配置指南——博客标题</a>中也说明如下：</p><blockquote><p>博客标题</p><p>页面左上角的博客标题，默认使用<strong>站点配置</strong>中的 <code>title</code>，这个配置同时控制着网页在浏览器标签中的标题。<br>如需单独区别设置，可在<strong>主题配置</strong>中设置：</p></blockquote><p>navbar:<br>  blog_title: 博客标题</p><blockquote></blockquote><p>我想尝试着在blog_title后直接引如本地资源如 &#x2F;img&#x2F;logo.png，或使用图床、网络链接直接引入，但<code>hexo d</code> 之后，博客的标题原引了网址链接。因此在config.yml中修改是不行的</p><h3 id="修改主题源码"><a href="#修改主题源码" class="headerlink" title="修改主题源码"></a>修改主题源码</h3><p>因为改动的地方不大，在GPT的帮助下， 其实很快就能找到修改的方式：<br>修改主题的<code>~/node_modules/hexo-theme-fluid/layout/_partials/header/</code>下的<code>navigation.ejs</code>文件即可。</p><div class="highlight-wrap" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;navbar-brand&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&lt;%= url_for() %&gt;&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/img/YOUR_LOGO_NAME.png&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;&lt;%= config.title %&gt;&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;navbar-logo&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure></div><p>如图：<br><img src="https://cdn.specialhua.top/hexo_img/Screenshot_20-11%E6%9C%88_02-10-33_2098.webp" srcset="/img/loading.gif" lazyload alt="要修改的地方"></p><p>这里css样式我也贴在这里，主要是对logo做了一些控制，及一些动画，你可以复制下来放到<code>你的博客目录/source/css/</code>下，并把文件名称命名为<code>custom.css</code>，同时在fluid主题的<code>_config.fluid.yml</code>配置文件下，启用custom css设置。</p><div class="highlight-wrap" data-rel="Css"><figure class="iseeu highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs CSS"><span class="hljs-comment">/* 导航栏 logo 样式 */</span><br><span class="hljs-selector-class">.navbar</span> &#123;<br>    <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">0.5rem</span>;<br>    <span class="hljs-attribute">padding-bottom</span>: <span class="hljs-number">0.5rem</span>;<br>    <span class="hljs-attribute">height</span>: auto;  <span class="hljs-comment">/* 允许导航栏高度自适应 */</span><br>&#125;<br><br><span class="hljs-comment">/* Logo 容器 */</span><br><span class="hljs-selector-class">.navbar-brand</span> &#123;<br>    <span class="hljs-attribute">display</span>: flex;<br>    <span class="hljs-attribute">align-items</span>: center;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">2rem</span>;  <span class="hljs-comment">/* 与右侧菜单保持一定距离 */</span><br>    <span class="hljs-attribute">min-height</span>: <span class="hljs-number">45px</span>; <span class="hljs-comment">/* 预留logo高度，防止抖动 */</span><br>&#125;<br><br><span class="hljs-comment">/* Logo 图片 */</span><br><span class="hljs-selector-class">.navbar-brand</span> <span class="hljs-selector-class">.navbar-logo</span> &#123;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">45px</span>;  <span class="hljs-comment">/* 增加高度 */</span><br>    <span class="hljs-attribute">width</span>: auto;   <span class="hljs-comment">/* 保持宽高比 */</span><br>    <span class="hljs-attribute">vertical-align</span>: middle;<br>    <span class="hljs-attribute">transition</span>: transform <span class="hljs-number">0.3s</span> ease;<br>    <span class="hljs-attribute">object-fit</span>: contain;  <span class="hljs-comment">/* 确保图片不变形 */</span><br>    <span class="hljs-attribute">max-width</span>: <span class="hljs-number">200px</span>;    <span class="hljs-comment">/* 限制最大宽度 */</span><br>    <span class="hljs-attribute">backface-visibility</span>: hidden; <span class="hljs-comment">/* 防止闪烁 */</span><br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateZ</span>(<span class="hljs-number">0</span>); <span class="hljs-comment">/* 开启硬件加速 */</span><br>    -webkit-<span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateZ</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-attribute">will-change</span>: transform; <span class="hljs-comment">/* 提示浏览器这个元素会变化 */</span><br>    <span class="hljs-comment">/* 添加缓存控制 */</span><br>    cache-control: max-age=<span class="hljs-number">31536000</span>; <span class="hljs-comment">/* 让浏览器缓存这个图片 */</span><br>&#125;<br><br><span class="hljs-comment">/* 添加logo加载动画 */</span><br><span class="hljs-keyword">@keyframes</span> fadeIn &#123;<br>    <span class="hljs-selector-tag">from</span> &#123; <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>; &#125;<br>    <span class="hljs-selector-tag">to</span> &#123; <span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>; &#125;<br>&#125;<br><br><span class="hljs-selector-class">.navbar-brand</span> <span class="hljs-selector-class">.navbar-logo</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">scale</span>(<span class="hljs-number">1.05</span>);<br>&#125;<br><br><span class="hljs-comment">/* 响应式设计 */</span><br><span class="hljs-keyword">@media</span> (<span class="hljs-attribute">max-width</span>: <span class="hljs-number">991.98px</span>) &#123;<br>    <span class="hljs-selector-class">.navbar-brand</span> <span class="hljs-selector-class">.navbar-logo</span> &#123;<br>        <span class="hljs-attribute">height</span>: <span class="hljs-number">40px</span>;  <span class="hljs-comment">/* 中等屏幕稍微小一点 */</span><br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">@media</span> (<span class="hljs-attribute">max-width</span>: <span class="hljs-number">767.98px</span>) &#123;<br>    <span class="hljs-selector-class">.navbar-brand</span> <span class="hljs-selector-class">.navbar-logo</span> &#123;<br>        <span class="hljs-attribute">height</span>: <span class="hljs-number">35px</span>;  <span class="hljs-comment">/* 小屏幕再小一点 */</span><br>        <span class="hljs-attribute">max-width</span>: <span class="hljs-number">150px</span>;  <span class="hljs-comment">/* 限制小屏幕下的最大宽度 */</span><br>    &#125;<br><br>    <span class="hljs-selector-class">.navbar</span> &#123;<br>        <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">0.3rem</span>;<br>        <span class="hljs-attribute">padding-bottom</span>: <span class="hljs-number">0.3rem</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/* 优化导航栏其他元素的位置 */</span><br><span class="hljs-selector-class">.navbar</span> <span class="hljs-selector-class">.navbar-nav</span> &#123;<br>    <span class="hljs-attribute">align-items</span>: center;  <span class="hljs-comment">/* 垂直居中对齐 */</span><br>&#125;<br><br><span class="hljs-selector-class">.navbar-logo</span> &#123;<br>    <span class="hljs-attribute">animation</span>: fadeIn <span class="hljs-number">0.2s</span> ease-in;<br>    <span class="hljs-comment">/* 缓存图片到内存 */</span><br>    -webkit-<span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate3d</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate3d</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>&#125;<br></code></pre></td></tr></table></figure></div><div class="note note-info">            <p>请注意文件路径，我采用npm安装fluid主题，如果你是采用安装指南中方式二安装的主题：<br>那么你的ejs文件应当在themes&#x2F;fluid文件夹下<br><img src="https://cdn.specialhua.top/hexo_img/Screenshot_20-11%E6%9C%88_02-04-13_23218.webp" srcset="/img/loading.gif" lazyload alt="安装方式"></p>          </div><p>完成以后，<code>hexo clean &amp;&amp; hexo g</code> 以后就可以预览试试了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;效果&quot;&gt;&lt;a href=&quot;#效果&quot; class=&quot;headerlink&quot; title=&quot;效果&quot;&gt;&lt;/a&gt;效果&lt;/h3&gt;&lt;p&gt;正如我的博客这样，左上角的网站标题被修改成了logo，你应当准备一张透明的图片，并且细心的你会发现fluid主题在日间或夜间导航栏都为深色，</summary>
      
    
    
    
    <category term="技术" scheme="https://inkcodes.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="blog" scheme="https://inkcodes.com/tags/blog/"/>
    
    <category term="web" scheme="https://inkcodes.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>运用开窗函数解决“连续”问题</title>
    <link href="https://inkcodes.com/2023/11/21/%E8%BF%90%E7%94%A8%E5%BC%80%E7%AA%97%E5%87%BD%E6%95%B0%E8%A7%A3%E5%86%B3%E2%80%9C%E8%BF%9E%E7%BB%AD%E2%80%9D%E9%97%AE%E9%A2%98/"/>
    <id>https://inkcodes.com/2023/11/21/%E8%BF%90%E7%94%A8%E5%BC%80%E7%AA%97%E5%87%BD%E6%95%B0%E8%A7%A3%E5%86%B3%E2%80%9C%E8%BF%9E%E7%BB%AD%E2%80%9D%E9%97%AE%E9%A2%98/</id>
    <published>2023-11-20T18:11:44.000Z</published>
    <updated>2024-11-12T18:11:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>学习数据库的过程中，练习题目的时候我们经常会遇到如下等问题：</p><blockquote><p>查询连续三个月都投稿的作者姓名？——期刊表练习题</p><p>查询同年连续三个月都有违法记录的当事人信息？——交通执法练习题</p><p>用户登录表中连续登录了三次及以上的用户？</p><p>查询产品号存在断号的情况、及断开的号码？</p></blockquote><p>可以看到，以上这些问题似乎都与“连续”相关，又各有不同，例如，第一问仅求解连续三个月有投稿记录，那么如下表格中，当我们把日期升序排序后，第1到3行是满足的，4到5行不满足：</p><table><thead><tr><th>时间</th><th>序号</th></tr></thead><tbody><tr><td>2023-01-03</td><td>1</td></tr><tr><td>2023-02-11</td><td>2</td></tr><tr><td>2023-03-22</td><td>3</td></tr><tr><td>2023-05-24</td><td>1</td></tr><tr><td>2023-06-10</td><td>2</td></tr></tbody></table><p>第二问在此基础上多加了一个“同年”，那么如下表格中只有第3行到5行是满足要求的，类似地，题目还可以换为“同一天连续n个小时”、“同一月连续n天”，甚至两个、三个条件联立，如“同一年同一月同一小时连续n秒”，这里仅以同年连续3个月举例，观察下表的序号与第一个表格有什么区别：</p><table><thead><tr><th>时间</th><th>序号</th></tr></thead><tbody><tr><td>2022-01-03</td><td>1</td></tr><tr><td>2022-02-04</td><td>2</td></tr><tr><td>2023-03-08</td><td>1</td></tr><tr><td>2023-04-02</td><td>2</td></tr><tr><td>2023-05-01</td><td>3</td></tr><tr><td>2023-07-09</td><td>1</td></tr></tbody></table><p>这就对我们产生了启发，我如果能使用教材上简单介绍的<code>row_number</code>(或<code>row_num</code>)，对时间序列进行排序、并新加一列表示排序的话，似乎我们把这个加了排序的新表用一个where条件进行筛选后（比方说，where 序号为1，2，3？）我们就能直观地得到我们想要的结果。那这个思路是否可行呢？</p><h3 id="开窗函数"><a href="#开窗函数" class="headerlink" title="开窗函数"></a>开窗函数</h3><p>关于开窗函数，百度或者谷歌查询后有很多介绍，在这里限于篇幅不作详细介绍，我以自己的理解作直白的解释：</p><h4 id="函数形式"><a href="#函数形式" class="headerlink" title="函数形式"></a>函数形式</h4><p>首先，开窗函数用在sql语句的select 与 from 之间，在我们应试时，能用到的就是：排序+聚合类函数（sum、max、min、avg、count）的升级版+偏移，用于<strong>查询出一列，且是新的一列（原表没有）</strong>，其基本的语法如下(以row_number()为例)：</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <br><span class="hljs-built_in">row_number</span> () <span class="hljs-keyword">over</span> (<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> xx <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> xx)<br><span class="hljs-keyword">from</span> <span class="hljs-keyword">table</span>(表名)<br></code></pre></td></tr></table></figure></div><p>我以表格的形式进行说明：</p><table><thead><tr><th>关键字</th><th>作用</th><th>是否可省略</th></tr></thead><tbody><tr><td>over</td><td>告诉数据库，要开窗查询</td><td>×</td></tr><tr><td>partition by</td><td>按…分组</td><td>√</td></tr><tr><td>order by</td><td>按…排序</td><td>聚合类√，排序类×，偏移类×</td></tr></tbody></table><p>这个<code>over</code>就是所谓的“开窗函数”的关键字，要开窗必须跟上这个关键字，<code>partition by</code>为“按…分组”的意思，可省略，具体看你的业务逻辑，因为不分组一样能求和、排序，<code>order by</code>为“按…排序”的意思。只需要记住这有哪些开窗函数（下面会作介绍），及这三个关键字我们就能使用开窗了。</p><blockquote><p>1.在原表的基础上新开一列</p><p>2.新列中，填充的值情况如下：</p><blockquote><p>(1)序号，标明这一行某个数据的排序情况。</p><p>(2)求和、最大、最小、平均值、计数，这一行中，某个值隶属于的“组”中，它们这一组的求和、最大、最小、平均值、计数（结合partition by），其中，sum求和能与order by连用，进行累加</p><p>(3)偏移，新开的一列为原来某一列数据向前偏移一行或多行，或者向后偏移一行或多行</p></blockquote><p>3.新开的列，全部是<strong>“伪列”</strong>，需要再套一层父查询，把查询结果“固定”下来。</p></blockquote><p>以上这些说明，看起来会比较抽象，下面举例的时候可以回来这里对照查看和理解</p><h4 id="开窗函数种类"><a href="#开窗函数种类" class="headerlink" title="开窗函数种类"></a>开窗函数种类</h4><p>Sql server或oracle中开窗函数种类很多，在此仅介绍常用的几个：</p><blockquote><p>以下5个，最常与partition by 连用：</p><p>sum() over()——开窗求和</p><p>max() over()——开窗求最大</p><p>min() over()——开窗求最小</p><p>avg() over()——开窗求平均</p><p>count() over()——开窗计数（注：不能使用distinct）</p></blockquote><hr><blockquote><p>以下3个，为排序函数，最常与partition by + order by 连用：</p><p>row_number() over()——开窗排序，值相同时序号不等</p><p>rank() over()——开窗排序，值相同时序号相等，且下一个值序号跳开</p><p>dense_rank() over()——开窗排序，值相同时序号相等，且下一个值序号连续</p></blockquote><hr><blockquote><p>以下2个，为偏移函数，常与order by 连用，加上partition by可实现组内偏移：</p><p>lag() over()——开窗向后偏移，默认值为lag(某一列,1)，即步长为1，向后偏移一行，即本行显示某一列的上一行值</p><p>lead() over()——开窗向前偏移，默认值为lead(某一列,1)，即步长为1，向前偏移一行，即本行显示某一列的下一行值</p></blockquote><p>例：自行创建表和插入以下数据，进行观察，demo表中第一列为id，第二列为数字num：</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> demo(<br>id INT4,<br>num INT4<br>);<br></code></pre></td></tr></table></figure></div><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> demo <span class="hljs-keyword">VALUES</span><br>(<span class="hljs-number">1</span>,<span class="hljs-number">3</span>),(<span class="hljs-number">2</span>,<span class="hljs-number">8</span>),(<span class="hljs-number">2</span>,<span class="hljs-number">3</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">4</span>),(<span class="hljs-number">2</span>,<span class="hljs-number">5</span>),(<span class="hljs-number">2</span>,<span class="hljs-number">7</span>),(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">3</span>),<br>(<span class="hljs-number">1</span>,<span class="hljs-number">5</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">5</span>),(<span class="hljs-number">2</span>,<span class="hljs-number">20</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">7</span>),(<span class="hljs-number">3</span>,<span class="hljs-number">7</span>),(<span class="hljs-number">2</span>,<span class="hljs-number">1</span>),(<span class="hljs-number">3</span>,<span class="hljs-number">7</span>),(<span class="hljs-number">3</span>,<span class="hljs-number">7</span>),(<span class="hljs-number">3</span>,<span class="hljs-number">9</span>);<br></code></pre></td></tr></table></figure></div><h5 id="以sum-over-为例"><a href="#以sum-over-为例" class="headerlink" title="以sum() over()为例"></a>以sum() over()为例</h5><p>聚合类，求和，partition by以及order by都可以跟，只跟partition by时居多，表示分组求和的意思。</p><p>以下语句、及结果：</p><p>可以完全省略partition by和order by，此时“降维”成普通sum函数，区别仅在于普通聚合函数最后只显示一行求和值。而开窗在每一行后面都添加一列，该列所有值都一样，都是对某列进行求和</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span>,<br><span class="hljs-built_in">SUM</span>(num) <span class="hljs-keyword">OVER</span>() sum_num<br><span class="hljs-keyword">FROM</span> DEMO;<br><br></code></pre></td></tr></table></figure></div><p><img src="https://cdn.specialhua.top/picgo/image-20231101191245161.png" srcset="/img/loading.gif" lazyload alt="image-20231101191245161"></p><p>以下语句、及结果：</p><p>加了partition by以后，可以看到，结果发生变化，按组求和，并把同一组放在一起给你显示，可以看到，<strong>每一行对应的这个开窗值，都是与该组的“属性”相关的，这个属性指的就是：它们之所以都一样，是因为它们同属于一个id，即同一个partition by</strong>，因此当使用下面第二个代码块的语句（使用distinct，使用内嵌视图）就会使结果和普通聚合一模一样。</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span>,<br><span class="hljs-built_in">SUM</span>(num) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> ID) sum_num<br><span class="hljs-keyword">FROM</span> DEMO;<br></code></pre></td></tr></table></figure></div><p><img src="https://cdn.specialhua.top/picgo/image-20231102071248700.png" srcset="/img/loading.gif" lazyload alt="image-20231102071248700"></p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">DISTINCT</span> ID,<br>sum_num<br><span class="hljs-keyword">FROM</span> (<br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span>,<br><span class="hljs-built_in">SUM</span>(num) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> ID) sum_num<br><span class="hljs-keyword">FROM</span> DEMO<br>);<br></code></pre></td></tr></table></figure></div><p><img src="https://cdn.specialhua.top/picgo/image-20231102071337708.png" srcset="/img/loading.gif" lazyload alt="image-20231102071337708"></p><p>请自行观察下列语句的执行结果(acc_num取名 accumulate的意思)：</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span>,<br><span class="hljs-built_in">SUM</span>(num) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> NUM) acc_num<br><span class="hljs-keyword">FROM</span> DEMO;<br></code></pre></td></tr></table></figure></div><h5 id="剩余几个开窗函数（聚合-排序）"><a href="#剩余几个开窗函数（聚合-排序）" class="headerlink" title="剩余几个开窗函数（聚合+排序）"></a>剩余几个开窗函数（聚合+排序）</h5><p>从该max开始，下面几个聚合类+排序我这里统一贴上一个语句，你可以单拿出一个，去试试看同时加分组排序，只要分组、排序中的一个、什么都不要，观察语句结果：</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span>,<br><span class="hljs-built_in">MAX</span>(num) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> ID) max_num,<br><span class="hljs-built_in">MIN</span>(num) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> ID) min_num,<br><span class="hljs-built_in">AVG</span>(NUM) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> ID) avg_num,<br><span class="hljs-built_in">COUNT</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> ID) cnt_num,<br><span class="hljs-built_in">ROW_NUMBER</span>() <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> ID <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> NUM) rn_num,<br><span class="hljs-built_in">DENSE_RANK</span>() <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> ID <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> NUM) drk_num,<br><span class="hljs-built_in">RANK</span>() <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> ID <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> NUM) rk_num<br><span class="hljs-keyword">FROM</span> DEMO;<br></code></pre></td></tr></table></figure></div><p><img src="https://cdn.specialhua.top/picgo/image-20231102075000825.png" srcset="/img/loading.gif" lazyload alt="image-20231102075000825"></p><h5 id="偏移"><a href="#偏移" class="headerlink" title="偏移"></a>偏移</h5><p>lag() over()及lead() over()单独做一个，因为刚才的语句分了组，虽然偏移也支持组内偏移，但可能看起来会不太清晰，观察以下语句的结果：</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span>,<br><span class="hljs-built_in">lag</span>(num) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> NUM) lag_num,<br><span class="hljs-built_in">lag</span>(num,<span class="hljs-number">2</span>) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> NUM) lag2_num, <br><span class="hljs-built_in">lead</span>(num) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> NUM) lead_num,<br><span class="hljs-built_in">lead</span>(num,<span class="hljs-number">2</span>) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> NUM) lead2_num<br><span class="hljs-keyword">FROM</span> DEMO;<br></code></pre></td></tr></table></figure></div><p><img src="https://cdn.specialhua.top/picgo/image-20231102080236851.png" srcset="/img/loading.gif" lazyload alt="image-20231102080236851"></p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span>,<br><span class="hljs-built_in">lag</span>(num) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> ID <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> NUM) ctlag_num,<br><span class="hljs-built_in">lag</span>(num,<span class="hljs-number">2</span>) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> ID <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> NUM) ctlag2_num, <br><span class="hljs-built_in">lead</span>(num) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> ID <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> NUM) ctlead_num,<br><span class="hljs-built_in">lead</span>(num,<span class="hljs-number">2</span>) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> ID <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> NUM) ctlead2_num<br><span class="hljs-keyword">FROM</span> DEMO;<br></code></pre></td></tr></table></figure></div><p><img src="https://cdn.specialhua.top/picgo/image-20231102080417481.png" srcset="/img/loading.gif" lazyload alt="image-20231102080417481"></p><p>可以看到，lag(num)或lead(num)只跟order by的时候，新开的这一列是把Num列往后或往前偏移了一行，因此上面第一个语句查询结果中第3列（lag）第1行、第5列（lead）最后一行出现了null值。lag(num,2)带第二个参数的时候，表示步长，就让num列往后偏移了2行，因此第4列前2行都是null值。</p><p>第二个语句中，lag(num)或lead(num)与partition by 和 order by 同时连用时，我们发现组内也可以进行偏移，于是出现了上图中按ID进行分组后的偏移</p><p>更大胆一点，我们可以让lag(num,x)中的步长x嵌套一个子查询：</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span>,<br><span class="hljs-built_in">lead</span>(num,(<span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">MAX</span>(ID) <span class="hljs-keyword">FROM</span> DEMO)) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> NUM) lead_numxx<br><span class="hljs-keyword">FROM</span> DEMO;<br></code></pre></td></tr></table></figure></div><h3 id="以题目学"><a href="#以题目学" class="headerlink" title="以题目学"></a>以题目学</h3><p>ok了解了开窗的基本概念之后，用题目来看下实际运用：</p><h4 id="1-投稿表题目"><a href="#1-投稿表题目" class="headerlink" title="1.投稿表题目"></a>1.投稿表题目</h4><p>建TGB表语句：（如有请忽略）</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> TGB<br>(<br>    ZZH <span class="hljs-type">character</span>(<span class="hljs-number">4</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>    QKH <span class="hljs-type">character</span>(<span class="hljs-number">4</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>    TGRQ <span class="hljs-type">timestamp</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>    WZMC <span class="hljs-type">varchar</span>(<span class="hljs-number">50</span>) ,<br>    SGJG <span class="hljs-type">varchar</span>(<span class="hljs-number">6</span>) , <br>    <span class="hljs-keyword">CONSTRAINT</span> PK_TGB <span class="hljs-keyword">PRIMARY</span> KEY (ZZH, QKH, TGRQ)<br>) ;<br></code></pre></td></tr></table></figure></div><p>插入数据:</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> TGB ( ZZH,QKH,TGRQ,WZMC,SGJG) <span class="hljs-keyword">VALUES</span> <br>(<span class="hljs-string">&#x27;zz01&#x27;</span>,<span class="hljs-string">&#x27;qk02&#x27;</span>,<span class="hljs-string">&#x27;2007-06-03 00:00:00&#x27;</span>,<span class="hljs-string">&#x27;信息安全的第二道防线——入侵检测系统&#x27;</span>,<span class="hljs-string">&#x27;通过&#x27;</span> ),<br>(<span class="hljs-string">&#x27;zz01&#x27;</span>,<span class="hljs-string">&#x27;qk02&#x27;</span>,<span class="hljs-string">&#x27;2018-11-02 11:24:00&#x27;</span>,<span class="hljs-string">&#x27;地铁界限系统的研究&#x27;</span>,<span class="hljs-string">&#x27;未通过&#x27;</span> ), <br>(<span class="hljs-string">&#x27;zz01&#x27;</span>,<span class="hljs-string">&#x27;qk03&#x27;</span>,<span class="hljs-string">&#x27;2007-07-08 00:00:00&#x27;</span>,<span class="hljs-string">&#x27;浅论教育和谐下的师德建设&#x27;</span>,<span class="hljs-string">&#x27;未通过&#x27;</span> ), <br>(<span class="hljs-string">&#x27;zz01&#x27;</span>,<span class="hljs-string">&#x27;qk04&#x27;</span>,<span class="hljs-string">&#x27;2006-03-04 00:00:00&#x27;</span>,<span class="hljs-string">&#x27;对全球化的一种全体化思考&#x27;</span>,<span class="hljs-string">&#x27;通过&#x27;</span> ), <br>(<span class="hljs-string">&#x27;zz02&#x27;</span>,<span class="hljs-string">&#x27;qk01&#x27;</span>,<span class="hljs-string">&#x27;2006-03-01 00:00:00&#x27;</span>,<span class="hljs-string">&#x27;基于VC与Ansys的参数化有限元分析&#x27;</span>,<span class="hljs-string">&#x27;未通过&#x27;</span> ), <br>(<span class="hljs-string">&#x27;zz02&#x27;</span>,<span class="hljs-string">&#x27;qk02&#x27;</span>,<span class="hljs-string">&#x27;2008-06-09 00:00:00&#x27;</span>,<span class="hljs-string">&#x27;一种基于移动agent技术的分布式数据检索系统的实现&#x27;</span>,<span class="hljs-string">&#x27;通过&#x27;</span> ), <br>(<span class="hljs-string">&#x27;zz03&#x27;</span>,<span class="hljs-string">&#x27;qk02&#x27;</span>,<span class="hljs-string">&#x27;2007-08-29 00:00:00&#x27;</span>,<span class="hljs-string">&#x27;无线传感器网络的研究&#x27;</span>,<span class="hljs-string">&#x27;通过&#x27;</span> ), <br>(<span class="hljs-string">&#x27;zz03&#x27;</span>,<span class="hljs-string">&#x27;qk02&#x27;</span>,<span class="hljs-string">&#x27;2008-02-01 00:00:00&#x27;</span>,<span class="hljs-string">&#x27;基于Web的考试系统新方案&#x27;</span>,<span class="hljs-string">&#x27;通过&#x27;</span> ), <br>(<span class="hljs-string">&#x27;zz03&#x27;</span>,<span class="hljs-string">&#x27;qk03&#x27;</span>,<span class="hljs-string">&#x27;2007-06-05 00:00:00&#x27;</span>,<span class="hljs-string">&#x27;论高效青年教师师德建设&#x27;</span>,<span class="hljs-string">&#x27;通过&#x27;</span> ), <br>(<span class="hljs-string">&#x27;zz04&#x27;</span>,<span class="hljs-string">&#x27;qk02&#x27;</span>,<span class="hljs-string">&#x27;2008-03-09 00:00:00&#x27;</span>,<span class="hljs-string">&#x27;基于J2EE的分布式事务研究&#x27;</span>,<span class="hljs-string">&#x27;通过&#x27;</span> ), <br>(<span class="hljs-string">&#x27;zz04&#x27;</span>,<span class="hljs-string">&#x27;qk05&#x27;</span>,<span class="hljs-string">&#x27;2008-02-05 00:00:00&#x27;</span>,<span class="hljs-string">&#x27;刍议医话&#x27;</span>,<span class="hljs-string">&#x27;未通过&#x27;</span> ), <br>(<span class="hljs-string">&#x27;zz06&#x27;</span>,<span class="hljs-string">&#x27;qk01&#x27;</span>,<span class="hljs-string">&#x27;2007-07-08 00:00:00&#x27;</span>,<span class="hljs-string">&#x27;CORBA和Java的结合使用&#x27;</span>,<span class="hljs-string">&#x27;未通过&#x27;</span> ), <br>(<span class="hljs-string">&#x27;zz06&#x27;</span>,<span class="hljs-string">&#x27;qk01&#x27;</span>,<span class="hljs-string">&#x27;2008-01-03 00:00:00&#x27;</span>,<span class="hljs-string">&#x27;高速公路通信系统的整合利用初探&#x27;</span>,<span class="hljs-string">&#x27;未通过&#x27;</span> ), <br>(<span class="hljs-string">&#x27;zz06&#x27;</span>,<span class="hljs-string">&#x27;qk02&#x27;</span>,<span class="hljs-string">&#x27;2006-01-26 00:00:00&#x27;</span>,<span class="hljs-string">&#x27;个性化协同学习环境本体的研究&#x27;</span>,<span class="hljs-string">&#x27;通过&#x27;</span> ); <br></code></pre></td></tr></table></figure></div><p>问：<strong>找出投稿表中同一年连续两个月都有投稿记录的作者信息？</strong></p><p>最终要的是“作者信息”，因为原题考了连接查询，即还存在另一个ZZB（作者表），这里就不给了，因为本表中已有了zzh（作者号）的信息，我们能在本表里筛选出来满足条件的结果，那么用一个join就能把另一个表的信息连进来，因此连接查询不是关键，而在于解决连续的问题。</p><p>那我们不管三七二十一，先把窗开一下看看，<code>partition by</code>采用zzh、和year(tgrq)，即要根据同一作者、同一年份去分组，order by采用tgrq升序排列：</p><p>Step 1——</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span>,<br>    <span class="hljs-built_in">ROW_NUMBER</span>() <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> zzh,<span class="hljs-keyword">YEAR</span>(TGRQ) <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> TGRQ) rn<br><span class="hljs-keyword">FROM</span> TGB<br></code></pre></td></tr></table></figure></div><p><img src="https://cdn.specialhua.top/picgo/image-20231102152006206.png" srcset="/img/loading.gif" lazyload alt="image-20231102152006206"></p><p>可以看到，rn一列，已经按我们指定的同一人、同一年、日期升序进行排列，观察一下，可看到zz01在2007年在6月，7月是投过稿的，因此序号标出了1和2、zz03在2007年6月和8月投过稿，也标出了1和2、zz04在2008年2月和3月投过稿，标出了1和2。其他地方如果年份上出现了断开，因此不会出现2。</p><p>现在似乎我们已经知道结果了，是zz01、zz03、zz04么？</p><p>zz03不是，他的6月和8月没连上，但rn依然给到了他1和2。为什么？因为rn只根据日期升序进行了排序，其他全为1的那些“行”，是因为他们根本没有“同年”多次投稿的记录，所以rn只给到了1</p><p>Step 2——</p><p><strong>核心思想</strong>的一步，把投稿日期（TGRQ）在<strong>月份</strong>上<strong>减去</strong>rn，<strong>这一点是运用开窗函数解决连续的核心思想，关键所在</strong></p><p>这里代码块我做了缩进，以美观些，内嵌视图的这个“子查询”其实就是上一步的结果，只不过是把Step 1的结果表作为了from后面的一坨，相当于在上一步基础上又新开出了一列，这一列命名为delta。观察结果：</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span>,<br>    dateadd(<span class="hljs-string">&#x27;month&#x27;</span>,tgrq,<span class="hljs-operator">-</span>rn) delta<br><span class="hljs-keyword">FROM</span> (<br>    <span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span>,<br>        <span class="hljs-built_in">ROW_NUMBER</span>() <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> zzh,<span class="hljs-keyword">YEAR</span>(TGRQ) <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> TGRQ) rn<br>    <span class="hljs-keyword">FROM</span> TGB<br>)<br></code></pre></td></tr></table></figure></div><p><img src="https://cdn.specialhua.top/picgo/image-20231102170713914.png" srcset="/img/loading.gif" lazyload alt="image-20231102170713914"></p><p>再来关注delta列的情况：</p><blockquote><p>zz01的6月和7月分别减1，2后，都变成了5月</p><p>zz03的6月和8月分别减1，2后，变成了5月和6月</p><p>zz04的2月和3月分别减1，2后，都变成了1月</p></blockquote><p>因为row_number()优秀的“天然连续”，所以作差这一步的思想，是<strong>抹平</strong>某一个序列与自然数列的“差距”，例如：</p><div class="highlight-wrap" data-rel="Clojure"><figure class="iseeu highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs clojure">(<span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span><span class="hljs-number">5</span><span class="hljs-punctuation">,</span><span class="hljs-number">7</span><span class="hljs-punctuation">,</span><span class="hljs-number">8</span><span class="hljs-punctuation">,</span><span class="hljs-number">9</span>)<br><br>(对应位置作差)<br><br>(<span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span><span class="hljs-number">4</span><span class="hljs-punctuation">,</span><span class="hljs-number">5</span><span class="hljs-punctuation">,</span><span class="hljs-number">6</span><span class="hljs-punctuation">,</span><span class="hljs-number">7</span>)<br></code></pre></td></tr></table></figure></div><p>连续的部分有：</p><p>(1,2,3)  &#x3D;&gt; (0,0,0)</p><p>(7,8,9)  &#x3D;&gt; (2,2,2)</p><p>非连续的部分：</p><p>(3,5) &#x3D;&gt; (0,1)</p><p>(5,7) &#x3D;&gt; (1,2)</p><p>所以，<strong>日期减去rn后，如果delta相同，就表明连续，且有几个相同的，就连续几次</strong></p><p>Step 3——</p><p>把刚刚Step 2的结果作为内嵌视图，使用一次普通聚合，把zzh作者号选出来，数一下delta有几个，这里还可以显示出开始投稿日期，因为数的是delta为2的有几个，因此trunc掉delta的日、时、分、秒部分，dateadd月份加1，再data_format转为’YYYY-MM’形式</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> zzh 作者号,<br>date_format(dateadd(<span class="hljs-string">&#x27;mm&#x27;</span>,trunc(delta,<span class="hljs-string">&#x27;month&#x27;</span>),<span class="hljs-number">1</span>),<span class="hljs-string">&#x27;%Y-%m&#x27;</span>) 开始投稿日期,<br><span class="hljs-built_in">COUNT</span>(<span class="hljs-operator">*</span>) 连续投稿次数<br><span class="hljs-keyword">FROM</span> (<br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span>,<br>dateadd(<span class="hljs-string">&#x27;month&#x27;</span>,tgrq,<span class="hljs-operator">-</span>rn) delta<br><span class="hljs-keyword">FROM</span> (<br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span>,<br><span class="hljs-built_in">ROW_NUMBER</span>() <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> zzh,<span class="hljs-keyword">YEAR</span>(TGRQ) <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> TGRQ) rn<br><span class="hljs-keyword">FROM</span> TGB<br>)<br>)<span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> ZZH,trunc(delta,<span class="hljs-string">&#x27;month&#x27;</span>)<br><span class="hljs-keyword">HAVING</span> <span class="hljs-built_in">COUNT</span>(<span class="hljs-operator">*</span>)<span class="hljs-operator">=</span><span class="hljs-number">2</span>;<br></code></pre></td></tr></table></figure></div><p><img src="https://cdn.specialhua.top/picgo/image-20231102171604058.png" srcset="/img/loading.gif" lazyload alt="image-20231102171604058"></p><p>为什么最后一步不开窗？数delta也可以用count，但总体会套4层代码，且最外层只是用来做where筛选，不太好看而已，代码如下：</p><p>这样也能做，只是最大程度保住了原表的样子（group by因聚合会丢弃很多列信息），但同时也能看到该作者连续投稿月份最早投的是哪个文章，通过与否（意义不是很大）</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span><br><span class="hljs-keyword">FROM</span>(<br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span>,<br><span class="hljs-built_in">COUNT</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> ZZH,date_format(delta,<span class="hljs-string">&#x27;%Y%m&#x27;</span>)) cnt<br><span class="hljs-keyword">FROM</span> (<br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span>,<br>dateadd(<span class="hljs-string">&#x27;month&#x27;</span>,tgrq,<span class="hljs-operator">-</span>rn) delta<br><span class="hljs-keyword">FROM</span> (<br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span>,<br><span class="hljs-built_in">ROW_NUMBER</span>() <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> zzh,<span class="hljs-keyword">YEAR</span>(TGRQ) <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> TGRQ) rn<br><span class="hljs-keyword">FROM</span> TGB<br>)<br>)<br>)<span class="hljs-keyword">WHERE</span> cnt<span class="hljs-operator">=</span><span class="hljs-number">2</span> <span class="hljs-keyword">AND</span> rn<span class="hljs-operator">=</span><span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure></div><p><img src="https://cdn.specialhua.top/picgo/image-20231102173820356.png" srcset="/img/loading.gif" lazyload alt="image-20231102173820356"></p><h4 id="2-订单表题目"><a href="#2-订单表题目" class="headerlink" title="2.订单表题目"></a>2.订单表题目</h4><p>建DDB（订单表）语句：</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> DDB(<br>ddh <span class="hljs-type">char</span>(<span class="hljs-number">4</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> ,      <br>zyh <span class="hljs-type">char</span>(<span class="hljs-number">3</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> ,      <br>khh <span class="hljs-type">char</span>(<span class="hljs-number">4</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> ,      <br>qdrq <span class="hljs-type">date</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> ,        <br>je <span class="hljs-type">decimal</span>(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>)       <br>);<br></code></pre></td></tr></table></figure></div><p>导入数据：</p><p>这里因为做题的时候给的是excel，且数据较多，这里如没有数据，请自行下载该excel并导入你的数据库：</p><table><thead><tr><th>文件名</th><th>链接</th><th>提取码</th></tr></thead><tbody><tr><td>ddb.xlsx</td><td><a href="https://pan.baidu.com/s/1HzdiUc8YV8Eu7ZvaRmc3kw">https://pan.baidu.com/s/1HzdiUc8YV8Eu7ZvaRmc3kw</a></td><td>6666</td></tr></tbody></table><p>问：<strong>订单表中的订单号应该是连续编号，找出订单表中的订单号是否有重号？重号是什么？</strong></p><p>重号问题，使用开窗函数来做的话，最先想到的是用dense_rank()，因为这个排序函数会让两个相等的值获得一样的排名，观察这个语句在发生重号处的结果：</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> ddh,<br>    <span class="hljs-built_in">DENSE_RANK</span>() <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> ddh::<span class="hljs-type">INT</span>) rn<br><span class="hljs-keyword">FROM</span> DDB<br></code></pre></td></tr></table></figure></div><p><img src="https://cdn.specialhua.top/picgo/image-20231121184320025.png" srcset="/img/loading.gif" lazyload alt="image-20231121184320025"></p><p>可以看到，只需要把第二列排序结果里出现两次及以上的筛选出来，就得到了发生重号的地方</p><p>直接贴上完整的查重语句：</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> DDH 订单号,<br><span class="hljs-built_in">COUNT</span>(<span class="hljs-operator">*</span>) 重复次数<br><span class="hljs-keyword">FROM</span> (<br><span class="hljs-keyword">SELECT</span> ddh,<br><span class="hljs-built_in">DENSE_RANK</span>() <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> ddh::<span class="hljs-type">INT</span>) rn<br><span class="hljs-keyword">FROM</span> DDB<br>)<br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> DDH<br><span class="hljs-keyword">HAVING</span> <span class="hljs-built_in">COUNT</span>(<span class="hljs-operator">*</span>)<span class="hljs-operator">&gt;=</span><span class="hljs-number">2</span>;<br></code></pre></td></tr></table></figure></div><p><img src="https://cdn.specialhua.top/picgo/image-20230921183634898.png" srcset="/img/loading.gif" lazyload alt="image-20230921183634898"></p><p>可以想见，本题里最多只出现了2次重号，如果使用自连接，确实只需要<code>join</code>一次即可，但如果重号发生很多，使用开窗的这种方式不管重了多少次都可以检测出来。本题也可以用row_number()，但是语句会比dense_rank()复杂，语句贴在下面</p><p>这里最外层用到了lead偏移，思考一下，只偏移一行，能否找出所有重号的行？如果这题里重号的不止2个，而是3个，4个。。，答案是可以，因为作差后，只要重复，那么重号的那部分的下一行，差值都比他小，所以where条件后面一定可以筛出来。最后的结果每个重号有一行，可以推知，该号只重了一次，如果重两次的话，筛选结果里，该号会有两行</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> (<br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span>,<br><span class="hljs-built_in">lead</span>(new_ddh) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> ddh::<span class="hljs-type">INT</span>) lag_new_ddh<br><span class="hljs-keyword">FROM</span> (<br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span>,<br>DDH::<span class="hljs-type">INT</span><span class="hljs-operator">-</span>rn new_ddh<br><span class="hljs-keyword">FROM</span> (<br><span class="hljs-keyword">SELECT</span> ddh,<br><span class="hljs-built_in">ROW_NUMBER</span>() <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> ddh::<span class="hljs-type">INT</span>) rn<br><span class="hljs-keyword">FROM</span> DDB<br>)<br>)<br>)<span class="hljs-keyword">WHERE</span> new_ddh<span class="hljs-operator">&gt;</span>lag_new_ddh;<br></code></pre></td></tr></table></figure></div><p>问：<strong>订单表中的订单号应该是连续编号，看看订单表中订单号是否存在断号，断号是什么？</strong></p><p>先来思考一下，现在我们已经可以用row_number()生成一个自然序列了，如果用这个自然序列<strong>左连接</strong>订单号，那么存在断号的地方，其肯定会有NULL值，然后再把NULL值筛选出来，这个思路可行么？</p><p>语句如下：</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> rn,new_ddh<br><span class="hljs-keyword">FROM</span> (<br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span><br><span class="hljs-keyword">FROM</span> (<br><span class="hljs-keyword">SELECT</span> DDH,<br><span class="hljs-built_in">ROW_NUMBER</span>() <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> ddh::<span class="hljs-type">INT</span>) rn<br><span class="hljs-keyword">FROM</span> DDB) a<br><span class="hljs-keyword">LEFT</span> <span class="hljs-keyword">JOIN</span> <br>(<span class="hljs-keyword">SELECT</span> DDH new_ddh <span class="hljs-keyword">FROM</span> DDB) b <br><span class="hljs-keyword">ON</span> a.rn<span class="hljs-operator">=</span>new_ddh<br>)<span class="hljs-keyword">WHERE</span> new_ddh <span class="hljs-keyword">IS</span> <span class="hljs-keyword">NULL</span>;<br></code></pre></td></tr></table></figure></div><p>前面的部分看起来一切OK，但——订单号本来就存在重号、断号的情况，使用row_number()的话，行号必然会小于最大订单号，也就是说会筛漏掉一部分。</p><p>开窗函数中的row_number()是根据原表中有多少行来生成的，所以这里用这种方法的话，我们得自己考虑生成一个自然数列，而且这个数列的最大值只需要等于最大订单号即可，所以这里使用了level和connect by语法：</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span><br><span class="hljs-keyword">FROM</span> (<br><span class="hljs-keyword">SELECT</span> LEVEL num <br><span class="hljs-keyword">FROM</span> dual<br><span class="hljs-keyword">CONNECT</span> <span class="hljs-keyword">BY</span> LEVEL<span class="hljs-operator">&lt;=</span>(<span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">max</span>(ddh::<span class="hljs-type">INT</span>) <span class="hljs-keyword">FROM</span> DDB)) a<br><span class="hljs-keyword">LEFT</span> <span class="hljs-keyword">JOIN</span> <br>(<span class="hljs-keyword">SELECT</span> DDH::<span class="hljs-type">INT</span> <span class="hljs-keyword">FROM</span> DDB) b<br><span class="hljs-keyword">ON</span> a.num<span class="hljs-operator">=</span>b.ddh<br><span class="hljs-keyword">WHERE</span> ddh <span class="hljs-keyword">IS</span> <span class="hljs-keyword">NULL</span><br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> num;<br></code></pre></td></tr></table></figure></div><hr><p>对于连续来说，更常用的还是row_number()结合作差，这个题应该怎么解？</p><p>不好的地方：筛选结果为断号的下一个号，只知道断了几个号，但好在思路更通用一些</p><p>这个表的意思：44之前发生了断号，且断了5个号——&gt;应该为39.40,41,42,43</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span>,<br>delta<span class="hljs-operator">-</span>lag_delta cnt_empty<br><span class="hljs-keyword">FROM</span> (<br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span>,<br><span class="hljs-built_in">lag</span>(delta) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> ddh::<span class="hljs-type">INT</span>) lag_delta<br><span class="hljs-keyword">FROM</span> (<br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span>,<br>DDH<span class="hljs-operator">-</span>rn delta<br><span class="hljs-keyword">FROM</span> (<br><span class="hljs-keyword">SELECT</span> DDH,<br><span class="hljs-built_in">ROW_NUMBER</span>() <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> DDH::<span class="hljs-type">INT</span>) rn<br><span class="hljs-keyword">FROM</span> DDB<br>)<br>)<br>)<br><span class="hljs-keyword">WHERE</span> delta<span class="hljs-operator">&gt;</span>lag_delta <span class="hljs-keyword">OR</span> lag_delta <span class="hljs-keyword">IS</span> <span class="hljs-keyword">NULL</span>;<br></code></pre></td></tr></table></figure></div><p><img src="https://cdn.specialhua.top/picgo/image-20231121224102041.png" srcset="/img/loading.gif" lazyload alt="image-20231121224102041"></p><h4 id="3-来个习题吧"><a href="#3-来个习题吧" class="headerlink" title="3.来个习题吧"></a>3.来个习题吧</h4><p>tb_sale_amount为商品数量表，</p><p>good_category——商品类型</p><p>sale_date——销售日期</p><p>amount——销售数量</p><p><strong>问：求占据前90%销售额的商品类型</strong></p><p>输出结果：</p><table><thead><tr><th>good_category</th></tr></thead><tbody><tr><td>1006</td></tr><tr><td>1005</td></tr><tr><td>1003</td></tr></tbody></table><p>表结构：</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> tb_sale_amount(<br>    good_category <span class="hljs-type">int</span>,<br>    sale_date <span class="hljs-type">date</span>,<br>    amount <span class="hljs-type">int</span>,<br>    <span class="hljs-keyword">primary</span> key(good_category, sale_date)<br>);<br></code></pre></td></tr></table></figure></div><p>插入数据：</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> tb_sale_amount<br>(good_category, sale_date, amount) <span class="hljs-keyword">values</span><br>(<span class="hljs-number">1003</span>, <span class="hljs-string">&#x27;2022-01-10&#x27;</span>, <span class="hljs-number">264</span>),<br>(<span class="hljs-number">1001</span>, <span class="hljs-string">&#x27;2022-06-01&#x27;</span>, <span class="hljs-number">21</span>),<br>(<span class="hljs-number">1005</span>, <span class="hljs-string">&#x27;2022-06-01&#x27;</span>, <span class="hljs-number">73</span>),<br>(<span class="hljs-number">1002</span>, <span class="hljs-string">&#x27;2022-06-27&#x27;</span>, <span class="hljs-number">44</span>),<br>(<span class="hljs-number">1006</span>, <span class="hljs-string">&#x27;2022-06-27&#x27;</span>, <span class="hljs-number">405</span>),<br>(<span class="hljs-number">1003</span>, <span class="hljs-string">&#x27;2022-09-10&#x27;</span>, <span class="hljs-number">16</span>),<br>(<span class="hljs-number">1005</span>, <span class="hljs-string">&#x27;2022-09-13&#x27;</span>, <span class="hljs-number">72</span>),<br>(<span class="hljs-number">1004</span>, <span class="hljs-string">&#x27;2022-10-01&#x27;</span>, <span class="hljs-number">29</span>),<br>(<span class="hljs-number">1005</span>, <span class="hljs-string">&#x27;2022-10-03&#x27;</span>, <span class="hljs-number">332</span>),<br>(<span class="hljs-number">1001</span>, <span class="hljs-string">&#x27;2022-10-29&#x27;</span>, <span class="hljs-number">10</span>),<br>(<span class="hljs-number">1006</span>, <span class="hljs-string">&#x27;2022-10-29&#x27;</span>, <span class="hljs-number">137</span>),<br>(<span class="hljs-number">1002</span>, <span class="hljs-string">&#x27;2022-12-02&#x27;</span>, <span class="hljs-number">23</span>),<br>(<span class="hljs-number">1007</span>, <span class="hljs-string">&#x27;2022-12-02&#x27;</span>, <span class="hljs-number">19</span>),<br>(<span class="hljs-number">1003</span>, <span class="hljs-string">&#x27;2022-12-02&#x27;</span>, <span class="hljs-number">30</span>),<br>(<span class="hljs-number">1008</span>, <span class="hljs-string">&#x27;2022-12-03&#x27;</span>, <span class="hljs-number">3</span>),<br>(<span class="hljs-number">1009</span>, <span class="hljs-string">&#x27;2022-12-04&#x27;</span>, <span class="hljs-number">1</span>),<br>(<span class="hljs-number">1010</span>, <span class="hljs-string">&#x27;2022-12-05&#x27;</span>, <span class="hljs-number">9</span>),<br>(<span class="hljs-number">1003</span>, <span class="hljs-string">&#x27;2022-12-30&#x27;</span>, <span class="hljs-number">121</span>);<br></code></pre></td></tr></table></figure></div><hr><p>答案</p><p>– step1. 计算每种商品的总销售额，并降序排序</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span><br>    good_category,<br>    <span class="hljs-built_in">sum</span>(amount) <span class="hljs-keyword">as</span> good_amount<br><span class="hljs-keyword">from</span> tb_sale_amount<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> good_category<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> good_amount <span class="hljs-keyword">desc</span>;<br></code></pre></td></tr></table></figure></div><p>– step2. 求全部商品的总销售额，为了step3求各种商品的占比，需要先求和。注意：求总和时，窗口值既不排序也不进行分组</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span><br>    <span class="hljs-operator">*</span>,<br>    <span class="hljs-built_in">sum</span>(good_amount) <span class="hljs-keyword">over</span> () <span class="hljs-keyword">as</span> all_amount<br><span class="hljs-keyword">from</span><br>    (<span class="hljs-keyword">select</span><br>        good_category,<br>        <span class="hljs-built_in">sum</span>(amount) <span class="hljs-keyword">as</span> good_amount<br>    <span class="hljs-keyword">from</span> tb_sale_amount<br>    <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> good_category<br>    <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> good_amount <span class="hljs-keyword">desc</span><br>    ) t1;<br></code></pre></td></tr></table></figure></div><p>– step3. 求占比</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span><br>    <span class="hljs-operator">*</span>,<br>    good_amount <span class="hljs-operator">*</span> <span class="hljs-number">1.0</span> <span class="hljs-operator">/</span> all_amount <span class="hljs-keyword">as</span> ratio<br><span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span><br>          <span class="hljs-operator">*</span>,<br>          <span class="hljs-built_in">sum</span>(good_amount) <span class="hljs-keyword">over</span> () <span class="hljs-keyword">as</span> all_amount<br>      <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span><br>                good_category,<br>                <span class="hljs-built_in">sum</span>(amount) <span class="hljs-keyword">as</span> good_amount<br>            <span class="hljs-keyword">from</span> tb_sale_amount<br>            <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> good_category<br>            <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> good_amount <span class="hljs-keyword">desc</span><br>            ) <span class="hljs-keyword">as</span> t1<br>      ) t2;<br></code></pre></td></tr></table></figure></div><p>– step4. 求累计占比，注意：求累计值时，一定要进行排序</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span><br>    <span class="hljs-operator">*</span>,<br>    <span class="hljs-built_in">sum</span>(ratio) <span class="hljs-keyword">over</span> (<span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> ratio <span class="hljs-keyword">desc</span>) <span class="hljs-keyword">as</span> acc_ratio<br><span class="hljs-keyword">from</span>(<br>    <span class="hljs-keyword">select</span><br>        <span class="hljs-operator">*</span>,<br>        good_amount <span class="hljs-operator">*</span> <span class="hljs-number">1.0</span> <span class="hljs-operator">/</span> all_amount <span class="hljs-keyword">as</span> ratio<br>    <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span><br>              <span class="hljs-operator">*</span>,<br>              <span class="hljs-built_in">sum</span>(good_amount) <span class="hljs-keyword">over</span> () <span class="hljs-keyword">as</span> all_amount<br>            <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span><br>                    good_category,<br>                    <span class="hljs-built_in">sum</span>(amount) <span class="hljs-keyword">as</span> good_amount<br>                <span class="hljs-keyword">from</span> tb_sale_amount<br>                <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> good_category<br>                <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> good_amount <span class="hljs-keyword">desc</span><br>            ) <span class="hljs-keyword">as</span> t1<br>        ) t2<br>    ) t3;<br></code></pre></td></tr></table></figure></div><p>– step5. 求前一行的累计占比</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span><br>    <span class="hljs-operator">*</span>,<br>    <span class="hljs-built_in">lag</span>(acc_ratio) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> ratio <span class="hljs-keyword">desc</span>) <span class="hljs-keyword">as</span> pre_acc_ratio<br><span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span><br>         <span class="hljs-operator">*</span>,<br>       <span class="hljs-built_in">sum</span>(ratio) <span class="hljs-keyword">over</span> (<span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> ratio <span class="hljs-keyword">desc</span>) <span class="hljs-keyword">as</span> acc_ratio<br>    <span class="hljs-keyword">from</span>(<br>        <span class="hljs-keyword">select</span><br>            <span class="hljs-operator">*</span>,<br>            good_amount <span class="hljs-operator">*</span> <span class="hljs-number">1.0</span> <span class="hljs-operator">/</span> all_amount <span class="hljs-keyword">as</span> ratio<br>        <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span><br>                  <span class="hljs-operator">*</span>,<br>                  <span class="hljs-built_in">sum</span>(good_amount) <span class="hljs-keyword">over</span> () <span class="hljs-keyword">as</span> all_amount<br>              <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span><br>                        good_category,<br>                        <span class="hljs-built_in">sum</span>(amount) <span class="hljs-keyword">as</span> good_amount<br>                    <span class="hljs-keyword">from</span> tb_sale_amount<br>                    <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> good_category<br>                    <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> good_amount <span class="hljs-keyword">desc</span><br>                ) t1<br>            ) t2<br>        ) t3<br>    ) t4;<br></code></pre></td></tr></table></figure></div><p>– step6. 过滤</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span><br><span class="hljs-keyword">from</span> (<br>    <span class="hljs-keyword">select</span><br>    <span class="hljs-operator">*</span>,<br>    <span class="hljs-built_in">lag</span>(acc_ratio) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> ratio <span class="hljs-keyword">desc</span>) <span class="hljs-keyword">as</span> pre_acc_ratio<br><span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span><br>         <span class="hljs-operator">*</span>,<br>       <span class="hljs-built_in">sum</span>(ratio) <span class="hljs-keyword">over</span> (<span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> ratio <span class="hljs-keyword">desc</span>) <span class="hljs-keyword">as</span> acc_ratio<br>     <span class="hljs-keyword">from</span>(<br>        <span class="hljs-keyword">select</span><br>            <span class="hljs-operator">*</span>,<br>            good_amount <span class="hljs-operator">*</span> <span class="hljs-number">1.0</span> <span class="hljs-operator">/</span> all_amount <span class="hljs-keyword">as</span> ratio<br>        <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span><br>                  <span class="hljs-operator">*</span>,<br>                  <span class="hljs-built_in">sum</span>(good_amount) <span class="hljs-keyword">over</span> () <span class="hljs-keyword">as</span> all_amount<br>              <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span><br>                        good_category,<br>                        <span class="hljs-built_in">sum</span>(amount) <span class="hljs-keyword">as</span> good_amount<br>                    <span class="hljs-keyword">from</span> tb_sale_amount<br>                    <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> good_category<br>                    <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> good_amount <span class="hljs-keyword">desc</span><br>                )  t1<br>              ) t2<br>        ) t3<br>    ) t4<br>) t5<br><span class="hljs-keyword">where</span> pre_acc_ratio <span class="hljs-keyword">IS</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">or</span> pre_acc_ratio <span class="hljs-operator">&lt;</span> <span class="hljs-number">0.90</span>;<br></code></pre></td></tr></table></figure></div><h3 id="关于伪列"><a href="#关于伪列" class="headerlink" title="关于伪列"></a>关于伪列</h3><p>教材上有一个案例，其用到的是rownum</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span>,<br>rownum<br><span class="hljs-keyword">from</span> ddb<br><span class="hljs-keyword">where</span> rownum<span class="hljs-operator">&lt;=</span><span class="hljs-number">10</span><br></code></pre></td></tr></table></figure></div><p>这个语句似乎很好理解，把表里前10行数据拿到了，但为什么下面这个语句拿不到除了第1行以外的数据呢？</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span>,<br>rownum<br><span class="hljs-keyword">from</span> ddb<br><span class="hljs-keyword">where</span> rownum<span class="hljs-operator">&gt;</span><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure></div><p>rownum的生成是在where之前，可以理解为：数据库把表结果筛好，拿出来，在放到你的眼前时，给每一行加了一个行号</p><p>所以上面第一个语句能出结果的原因，是当数据库把第一条记录拿到的时候，给了一个rownum——1，再来看条件：&lt;&#x3D;10，满足？yes——输出</p><p>以此类推，拿到第二条记录，rownum——  2  ——  &lt;&#x3D;10？——输出。。。一直到第10行</p><p>第二个语句：</p><p>第一条记录，rownum——  1  ——  &gt;1？——不输出</p><p>第二条记录，rownum——  1（注意这里为什么还是给它1）  ——  &gt;1？——不输出</p><h3 id="其他还可用作练习的题"><a href="#其他还可用作练习的题" class="headerlink" title="其他还可用作练习的题"></a>其他还可用作练习的题</h3><p>以下一些是可以使用开窗函数来解决的、之前做过的题，这里受限于篇幅不再详列数据，可根据题目去找一下原题在哪，看开窗的方法能否帮到你，理论上来说，那些需要使用group by的题目，开窗都可以用，只是实现路径不同</p><p>问：加油站编号的首位代表加油站所在的区域，每个区域的加油站都有加油记录。基于加油表查询哪些加油卡在全部区域都有加油记录，输出卡号。(阶段测验2 补充几个问题.docx)</p><p>问：基于加油卡表查询每天办理的加油卡的卡号是否正常，即卡号的后4位从0001开始，不重复且连续。输出日期和状态（卡号正常、不正常）   (阶段测验2 补充几个问题.docx)</p><p>问：统计出哪些单位同一年连续3个月都有订购教材，输出单位信息。（阶段练习3.docx）</p><p>问：统计出哪些单位连续3个月都没有订购教材，输出单位信息。(阶段练习3.docx）</p><p>。。。</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>1.求解连续问题，开窗函数优势在于：不论连续多少次，都可以解决</p><p>2.聚合类开窗，sum,min,max,avg,count等等大部分时候语法<strong>不如</strong>普通聚合简洁</p><p>3.由于往往需要根据上一次开窗的结果进行筛选、作差等等，开窗一般需要多层嵌套，代码形式上看起来会比普通连接查询复杂，不必刻意追求代码复杂性来炫技</p><p>4.开窗更像是一种excel思维，结果比group by 等可以保留更多列</p><p>5.开窗函数在解决连续问题上有一定优势，聚合类大部分时候比group by复杂，如果已经能熟练运用连接、group by等，可以把本篇文章讲的内容当作参考</p><p>6.写了那么多，其实就只有一点内容，也就是核心作差的那一步，只是为了讲清楚开窗函数，才理了很多概念内容，搬了很多语句，有点为了造出个轮子，把车身车体搬出来造一遍的意思</p><p>7.不足之处，请多指正</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;学习数据库的过程中，练习题目的时候我们经常会遇到如下等问题：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;查询连续三个月都投稿的作者姓名？——期刊表练习题&lt;/p&gt;
&lt;p&gt;查询同年连续三个月都有违法记录的当事人信息？——交通执法练习题&lt;/p&gt;
&lt;p&gt;用户登录表中连续登录了三次及以</summary>
      
    
    
    
    <category term="技术" scheme="https://inkcodes.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="学习" scheme="https://inkcodes.com/categories/%E6%8A%80%E6%9C%AF/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="开窗函数" scheme="https://inkcodes.com/tags/%E5%BC%80%E7%AA%97%E5%87%BD%E6%95%B0/"/>
    
    <category term="数据库" scheme="https://inkcodes.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="sql" scheme="https://inkcodes.com/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>sql学习笔记——开窗去重计数</title>
    <link href="https://inkcodes.com/2023/10/11/sql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E5%BC%80%E7%AA%97%E5%8E%BB%E9%87%8D%E8%AE%A1%E6%95%B0/"/>
    <id>https://inkcodes.com/2023/10/11/sql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E5%BC%80%E7%AA%97%E5%8E%BB%E9%87%8D%E8%AE%A1%E6%95%B0/</id>
    <published>2023-10-10T16:11:19.000Z</published>
    <updated>2024-11-13T16:11:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近在做题时碰到很多次最终的结果要计算“平均值”的情况。而这种平均值的分子往往是分组后各自有“几行”，分母往往是“组内有几个”（要去重）的问题</p><p>组内求和、计数很简单，我做题时很喜欢开窗出来看一下分组求和的结果，思维习惯使然，我总是不想在最开始就把题目抽象到去group by哪几列，我喜欢站在大局上去观察这个表，很可能我还需要去观察其他列的情况，一开始就用group by抽象掉太没意思了。</p><p>那么问题来了，如何解决count(distinct uid)只能用在普通聚合、无法运用在开窗函数的情况？</p><p>场景是这样的：</p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><img src="https://cdn.specialhua.top/picgo/image-20231011223511130.png" srcset="/img/loading.gif" lazyload alt="image-20231011223511130"></p><p>有一张用户登录情况表（TB_USER_LOG）如上图，建表语句如下（神通数据库中时间戳为timestamp，sql、mysql中应为datetime，如需要，自行修改）：</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> tb_user_log (<br>    id <span class="hljs-type">INT</span> <span class="hljs-keyword">PRIMARY</span> KEY AUTO_INCREMENT,<br>    uid <span class="hljs-type">INT</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>    artical_id <span class="hljs-type">INT</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>    in_time <span class="hljs-type">TIMESTAMP</span>,<br>    out_time <span class="hljs-type">TIMESTAMP</span>,<br>    sign_in TINYINT <span class="hljs-keyword">DEFAULT</span> <span class="hljs-number">0</span><br>);<br></code></pre></td></tr></table></figure></div><p>测试数据：</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> tb_user_log(uid, artical_id, in_time, out_time, sign_in) <span class="hljs-keyword">VALUES</span><br>  (<span class="hljs-number">101</span>, <span class="hljs-number">9001</span>, <span class="hljs-string">&#x27;2021-11-01 10:00:00&#x27;</span>, <span class="hljs-string">&#x27;2021-11-01 10:00:31&#x27;</span>, <span class="hljs-number">0</span>),<br>  (<span class="hljs-number">102</span>, <span class="hljs-number">9001</span>, <span class="hljs-string">&#x27;2021-11-01 10:00:00&#x27;</span>, <span class="hljs-string">&#x27;2021-11-01 10:00:24&#x27;</span>, <span class="hljs-number">0</span>),<br>  (<span class="hljs-number">102</span>, <span class="hljs-number">9002</span>, <span class="hljs-string">&#x27;2021-11-01 11:00:00&#x27;</span>, <span class="hljs-string">&#x27;2021-11-01 11:00:11&#x27;</span>, <span class="hljs-number">0</span>),<br>  (<span class="hljs-number">101</span>, <span class="hljs-number">9001</span>, <span class="hljs-string">&#x27;2021-11-02 10:00:00&#x27;</span>, <span class="hljs-string">&#x27;2021-11-02 10:00:50&#x27;</span>, <span class="hljs-number">0</span>),<br>  (<span class="hljs-number">102</span>, <span class="hljs-number">9002</span>, <span class="hljs-string">&#x27;2021-11-02 11:00:01&#x27;</span>, <span class="hljs-string">&#x27;2021-11-02 11:00:24&#x27;</span>, <span class="hljs-number">0</span>);<br></code></pre></td></tr></table></figure></div><p>表结构：uid-用户ID, artical_id-文章ID, in_time-进入时间, out_time-离开时间, sign_in-是否签到</p><p>业务逻辑：<strong>artical_id-文章ID</strong>代表用户浏览的文章的ID，<strong>artical_id-文章ID</strong>为<strong>0</strong>表示用户在非文章内容页（比如App内的列表页、活动页等）。</p><h3 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h3><p>统计2021年11月每天的人均浏览文章时长（秒数），结果保留1位小数，并按时长由短到长排序。</p><p>输出结果如图：</p><p><img src="https://cdn.specialhua.top/picgo/image-20231011224024100.png" srcset="/img/loading.gif" lazyload alt="image-20231011224024100"></p><h3 id="普通常规思路"><a href="#普通常规思路" class="headerlink" title="普通常规思路"></a>普通常规思路</h3><p>最后结果是两列，dt及avg_viiew_len_sec</p><p>那么group by 部分肯定dt咯，前面去做聚合就行了。</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> date_format(IN_TIME,<span class="hljs-string">&#x27;%Y-%m-%d&#x27;</span>) dt,<br>ROUND(<span class="hljs-built_in">SUM</span>(datediff(<span class="hljs-string">&#x27;ss&#x27;</span>,IN_TIME,OUT_TIME))<span class="hljs-operator">/</span><span class="hljs-built_in">COUNT</span>(<span class="hljs-keyword">DISTINCT</span> UID),<span class="hljs-number">1</span>) <span class="hljs-keyword">as</span> avg_view_len_sec<br><span class="hljs-keyword">FROM</span> TB_USER_LOG<br><span class="hljs-keyword">WHERE</span> date_format(OUT_TIME,<span class="hljs-string">&#x27;%Y%m&#x27;</span>)<span class="hljs-operator">=</span><span class="hljs-string">&#x27;202111&#x27;</span> <span class="hljs-keyword">AND</span> ARTICAL_ID <span class="hljs-operator">&lt;&gt;</span><span class="hljs-number">0</span><br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> dt<br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> avg_view_len_sec <span class="hljs-keyword">DESC</span>;<br></code></pre></td></tr></table></figure></div><h3 id="如果我就是要用开窗做呢？"><a href="#如果我就是要用开窗做呢？" class="headerlink" title="如果我就是要用开窗做呢？"></a>如果我就是要用开窗做呢？</h3><p>首先很容易想到的语句是这个：不管三七二十一先把那些可能用的上的列选上，sum来求一下时间差的和，语句和图分别为：</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> ID,<br>UID,<br>ARTICAL_ID,<br>date_format(IN_TIME,<span class="hljs-string">&#x27;%Y-%m-%d&#x27;</span>) dt,<br><span class="hljs-built_in">SUM</span>(datediff(<span class="hljs-string">&#x27;ss&#x27;</span>,IN_TIME,OUT_TIME)) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> date_format(IN_TIME,<span class="hljs-string">&#x27;%Y-%m-%d&#x27;</span>)) sum_vt<br><span class="hljs-keyword">FROM</span> TB_USER_LOG;<br></code></pre></td></tr></table></figure></div><p><img src="https://cdn.specialhua.top/picgo/image-20231011230549856.png" srcset="/img/loading.gif" lazyload alt="image-20231011230549856"></p><p>那么下一步就很容易想到，接着上count啊，把uid里同一天的数出来有几个就好了，所以写成这样，当然是要报错的，distinct在窗口函数中不被支持：</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> ID,<br>UID,<br>ARTICAL_ID,<br>date_format(IN_TIME,<span class="hljs-string">&#x27;%Y-%m-%d&#x27;</span>) dt,<br><span class="hljs-built_in">SUM</span>(datediff(<span class="hljs-string">&#x27;ss&#x27;</span>,IN_TIME,OUT_TIME)) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> date_format(IN_TIME,<span class="hljs-string">&#x27;%Y-%m-%d&#x27;</span>)) sum_vt,<br><span class="hljs-built_in">COUNT</span>(<span class="hljs-keyword">DISTINCT</span> UID) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> date_format(IN_TIME,<span class="hljs-string">&#x27;%Y-%m-%d&#x27;</span>)) cnt<br><span class="hljs-keyword">FROM</span> TB_USER_LOG;<br></code></pre></td></tr></table></figure></div><p><img src="https://cdn.specialhua.top/picgo/image-20231011230900405.png" srcset="/img/loading.gif" lazyload alt="image-20231011230900405"></p><h3 id="理解dense-rank"><a href="#理解dense-rank" class="headerlink" title="理解dense_rank()"></a>理解dense_rank()</h3><p>对于计算机来说，你要它去计数，它至少要分别得出两样东西，一是“这个东西是啥？”——字符串？int?二是“它跟其他的一样么？”——“A”与“B”是一个东西么？<strong>于是它与排序的关系是密不可分的</strong>，如果我们使用<code>dense_rank()</code>来对uid进行排序呢？别忘了，字符串也能排序，底层的ASCII编码极大的帮助了我们，A-Z,a-z,0-9顺序和我们的int也是极契合的。</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> ID,<br>UID,<br>ARTICAL_ID,<br>date_format(IN_TIME,<span class="hljs-string">&#x27;%Y-%m-%d&#x27;</span>) dt,<br><span class="hljs-built_in">DENSE_RANK</span>() <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> UID) rn,<br><span class="hljs-built_in">SUM</span>(datediff(<span class="hljs-string">&#x27;ss&#x27;</span>,IN_TIME,OUT_TIME)) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> date_format(IN_TIME,<span class="hljs-string">&#x27;%Y-%m-%d&#x27;</span>)) sum_vt<br><span class="hljs-keyword">FROM</span> TB_USER_LOG;<br></code></pre></td></tr></table></figure></div><p>看，rn这列，UID为102的在同一天rn都为2，这样无论他有多少重复的uid都能”count”了</p><p><img src="https://cdn.specialhua.top/picgo/image-20231011231911064.png" srcset="/img/loading.gif" lazyload alt="image-20231011231911064"></p><p>所以，你也想到了，**<code>dense_rank() over()</code>结合<code>max() over()</code>应该能解决我们的问题了**，来看一下最后的代码（没有选前面的id,uid,artical_id等）</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">DISTINCT</span> dt,<br>ROUND(sum_vt<span class="hljs-operator">/</span><span class="hljs-built_in">MAX</span>(rn) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> dt),<span class="hljs-number">1</span>) avg_view_len_sec<br><span class="hljs-keyword">FROM</span> (<br><span class="hljs-keyword">SELECT</span> date_format(IN_TIME,<span class="hljs-string">&#x27;%Y-%m-%d&#x27;</span>) dt,<br><span class="hljs-built_in">DENSE_RANK</span>() <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> UID) rn,<br><span class="hljs-built_in">SUM</span>(datediff(<span class="hljs-string">&#x27;ss&#x27;</span>,IN_TIME,OUT_TIME)) <span class="hljs-keyword">OVER</span>(<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> date_format(IN_TIME,<span class="hljs-string">&#x27;%Y-%m-%d&#x27;</span>)) sum_vt<br><span class="hljs-keyword">FROM</span> TB_USER_LOG<br><span class="hljs-keyword">WHERE</span> date_format(OUT_TIME,<span class="hljs-string">&#x27;%Y%m&#x27;</span>)<span class="hljs-operator">=</span><span class="hljs-string">&#x27;202111&#x27;</span> <span class="hljs-keyword">AND</span> ARTICAL_ID <span class="hljs-operator">&lt;&gt;</span><span class="hljs-number">0</span><br>)<br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> avg_view_len_sec <span class="hljs-keyword">DESC</span>;<br></code></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近在做题时碰到很多次最终的结果要计算“平均值”的情况。而这种平均值的分子往往是分组后各自有“几行”，分母往往是“组内有几个”（要去重）的问题&lt;/p&gt;
&lt;p&gt;组内求和、计数很简单，我做题时很喜欢开窗出来看一下分组求和的结果，思维习惯使然，我总是不想在最开始就把题目抽象到去g</summary>
      
    
    
    
    <category term="技术" scheme="https://inkcodes.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="开窗函数" scheme="https://inkcodes.com/tags/%E5%BC%80%E7%AA%97%E5%87%BD%E6%95%B0/"/>
    
    <category term="数据库" scheme="https://inkcodes.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="sql" scheme="https://inkcodes.com/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>sql学习笔记——递归函数、正则表达式的结合</title>
    <link href="https://inkcodes.com/2023/10/10/sql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E9%80%92%E5%BD%92%E5%87%BD%E6%95%B0%E3%80%81%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E7%BB%93%E5%90%88/"/>
    <id>https://inkcodes.com/2023/10/10/sql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E9%80%92%E5%BD%92%E5%87%BD%E6%95%B0%E3%80%81%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E7%BB%93%E5%90%88/</id>
    <published>2023-10-09T16:11:28.000Z</published>
    <updated>2024-11-13T16:11:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近在学习数据库的过程中，遇到了需要使用递归来解决的问题，但因为使用的是神通数据库，它似乎搬 的是oracle的一些函数和方法，于是突发奇想直接搜oracle的相关教程，看神通能否执行，结果真的可以，就当一个积累吧，万一以后用到。</p><h3 id="样表还是经典的emp表"><a href="#样表还是经典的emp表" class="headerlink" title="样表还是经典的emp表"></a>样表还是经典的emp表</h3><p><img src="https://cdn.specialhua.top/picgo/image-20231008221337873.png" srcset="/img/loading.gif" lazyload alt="image-20231008221337873"></p><p>如图，emp表结构为上</p><p>empno为员工编号，mgr为这名员工的主管，仅根据这两列就可以涉及到递归的用法</p><p>问：如何查出ename为”king”，职位为“president”的员工（即老板）下属的员工情况，及管理层级情况呢？</p><p>直接上语句：</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> EMPNO,<br>ENAME,<br>JOB,<br>MGR,<br>LEVEL,<br>SYS_CONNECT_BY_PATH(ENAME,<span class="hljs-string">&#x27;-&gt;&#x27;</span>) road<br><span class="hljs-keyword">FROM</span> EMP<br><span class="hljs-keyword">START</span> <span class="hljs-keyword">WITH</span> empno<span class="hljs-operator">=</span><span class="hljs-number">7839</span><br><span class="hljs-keyword">CONNECT</span> <span class="hljs-keyword">BY</span> PRIOR EMPNO <span class="hljs-operator">=</span> MGR;<br></code></pre></td></tr></table></figure></div><p>查询结果如下：</p><p><img src="https://cdn.specialhua.top/picgo/image-20231008223212579.png" srcset="/img/loading.gif" lazyload alt="image-20231008223212579"></p><h3 id="start-with-与-connect-by"><a href="#start-with-与-connect-by" class="headerlink" title="start with 与 connect by"></a>start with 与 connect by</h3><p>oracle的这种递归方式结构上很明了清晰，<code>start with</code>标识了递归的开始，比如这里老板的员工id为7839，因此就指定从这个id开始</p><p>connect by 后面跟递归的两个方向，本例中，一个是员工编号empno，一个是主管编号mgr：</p><p>可以这样理解：先使用<code>=</code>把他们相连，即：<code>empno = mgr</code>这是树结构寻径的基本条件</p><p>还有一个<code>prior</code>它用以表示寻径的方向，若为上面sql语句中的<code>PRIOR EMPNO = MGR</code>，即靠在empno这边，即向下寻径，若要向上寻径，则应放在mgr那边，写成这样：<code>EMPNO = PRIOR MGR</code></p><h3 id="level-和SYS-CONNECT-BY-PATH"><a href="#level-和SYS-CONNECT-BY-PATH" class="headerlink" title="level 和SYS_CONNECT_BY_PATH"></a>level 和SYS_CONNECT_BY_PATH</h3><p>这俩为可选的“参数”，在递归的时候很好用，level用于生成一个表示该项处于树结构的第几层的伪列，SYS_CONNECT_BY_PATH（列名，连接符）用以生成一条路径，直观表示寻径的过程</p><h3 id="结合正则表达式"><a href="#结合正则表达式" class="headerlink" title="结合正则表达式"></a>结合正则表达式</h3><p>把上一个查询作为子表，可以结合<code>regexp_substr</code>使用正则表达式来对上面的路径进行分列</p><p>语句：</p><div class="highlight-wrap" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span>,<br>regexp_substr(road,<span class="hljs-string">&#x27;[^-&gt;]+&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>) 大领导,<br>regexp_substr(road,<span class="hljs-string">&#x27;[^-&gt;]+&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>) 二领导,<br>regexp_substr(road,<span class="hljs-string">&#x27;[^-&gt;]+&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>) 三领导,<br>regexp_substr(road,<span class="hljs-string">&#x27;[^-&gt;]+&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">4</span>) 本人<br><span class="hljs-keyword">FROM</span>(<br>        <span class="hljs-keyword">SELECT</span> EMPNO,<br>            ENAME,<br>            JOB,<br>            MGR,<br>            LEVEL,<br>            SYS_CONNECT_BY_PATH(ENAME,<span class="hljs-string">&#x27;-&gt;&#x27;</span>) road<br>            <span class="hljs-keyword">FROM</span> EMP<br>            <span class="hljs-keyword">START</span> <span class="hljs-keyword">WITH</span> empno<span class="hljs-operator">=</span><span class="hljs-number">7839</span><br>            <span class="hljs-keyword">CONNECT</span> <span class="hljs-keyword">BY</span> PRIOR EMPNO <span class="hljs-operator">=</span> MGR<br>);<br></code></pre></td></tr></table></figure></div><p>按’-&gt;’去分列，可实现在一行内查查询出领导：</p><p><img src="https://cdn.specialhua.top/picgo/image-20231008230823018.png" srcset="/img/loading.gif" lazyload alt="image-20231008230823018"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近在学习数据库的过程中，遇到了需要使用递归来解决的问题，但因为使用的是神通数据库，它似乎搬 的是oracle的一些函数和方法，于是突发奇想直接搜oracle的相关教程，看神通能否执行，结果真的可以，就当一个积累吧，万一以后用到。&lt;/p&gt;
&lt;h3 id=&quot;样表还是经典的em</summary>
      
    
    
    
    <category term="技术" scheme="https://inkcodes.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="开窗函数" scheme="https://inkcodes.com/tags/%E5%BC%80%E7%AA%97%E5%87%BD%E6%95%B0/"/>
    
    <category term="数据库" scheme="https://inkcodes.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="sql" scheme="https://inkcodes.com/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>自用多年的TG群组、频道、bot分享（第一期）</title>
    <link href="https://inkcodes.com/2022/07/26/%E8%87%AA%E7%94%A8%E5%A4%9A%E5%B9%B4%E7%9A%84TG%E7%BE%A4%E7%BB%84%E3%80%81%E9%A2%91%E9%81%93%E3%80%81bot%E5%88%86%E4%BA%AB%EF%BC%88%E7%AC%AC%E4%B8%80%E6%9C%9F%EF%BC%89/"/>
    <id>https://inkcodes.com/2022/07/26/%E8%87%AA%E7%94%A8%E5%A4%9A%E5%B9%B4%E7%9A%84TG%E7%BE%A4%E7%BB%84%E3%80%81%E9%A2%91%E9%81%93%E3%80%81bot%E5%88%86%E4%BA%AB%EF%BC%88%E7%AC%AC%E4%B8%80%E6%9C%9F%EF%BC%89/</id>
    <published>2022-07-25T16:11:02.000Z</published>
    <updated>2024-11-13T16:11:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>先尝试分享一部分吧，希望有那么一个能让你感兴趣</p><h3 id="1-频道类"><a href="#1-频道类" class="headerlink" title="1.频道类"></a>1.频道类</h3><h4 id="1-1-Typecho交流群"><a href="#1-1-Typecho交流群" class="headerlink" title="1.1 Typecho交流群"></a>1.1 Typecho交流群</h4><p><a href="https://t.me/typecho_cn">Typecho交流群</a></p><p><a href="https://t.me/sharetypecho">Typecho资源分享频道</a></p><p>群组及频道一并放在这里了，偶尔会分享关于Typecho博客的相关资源，例如插件、开源主题等</p><p><img src="https://cdn.specialhua.top/blog/2022-07-26-114446.png-pic" srcset="/img/loading.gif" lazyload alt="Xnapper-2022-07-26-19.44.42"></p><h4 id="1-2-Odyssey"><a href="#1-2-Odyssey" class="headerlink" title="1.2 Odyssey+"></a>1.2 Odyssey+</h4><p><a href="https://t.me/odysseyplus">Odyssey+</a></p><p>一个以影视资源分享为主的频道，一直在更新，包含影视的点评，预告片都有~同时有Emby的公益服（可惜我一直没有权限获得账号，大哭）</p><p><img src="https://cdn.specialhua.top/blog/2022-07-26-120603.png-pic" srcset="/img/loading.gif" lazyload alt="Xnapper-2022-07-26-20.05.58"></p><h4 id="1-3-Solidot"><a href="#1-3-Solidot" class="headerlink" title="1.3 Solidot"></a>1.3 Solidot</h4><p><a href="https://t.me/solidot">Solidot</a></p><p>官网：<a href="https://www.solidot.org/">奇客Solidot</a>的官方bot。Solidot.org(北京第二十六维信息技术有限公司) 创建于2005年4月份，是学习国外的 Slashdot.org 而建立的中文科技信息交流平台和开源新闻平台。Solidot 是伴随着国内外 Blog 的兴起，Web 2.0 概念的提出而创建的新型科技新闻交流网站。Solidot 自建站以来受到了各方的关注，用户访问持续上升，用户订阅量大约37万，已逐步形成了自己的用户群，访问者素质总体上比较高，基本为IT人士、技术人士、开源人士以及大学在校学生等。（以上内容取自Solidot官网介绍）</p><p>该频道推送的时政、新闻、科技信息很有趣，是我主流的获取新知识的地方啦！</p><p><img src="https://cdn.specialhua.top/blog/2022-07-26-121659.png-pic" srcset="/img/loading.gif" lazyload alt="Xnapper-2022-07-26-20.16.54"></p><h4 id="1-4-擅长搜索的高木同学"><a href="#1-4-擅长搜索的高木同学" class="headerlink" title="1.4 擅长搜索的高木同学"></a>1.4 擅长搜索的高木同学</h4><p><a href="https://t.me/gaomutongxue">擅长搜索的高木同学</a></p><p>一位大二（2022）的大学生一直在默默分享软件资源的频道，多以Android软件、win软件居多，我关注他的时候作者还在上高中，惊了，我在读高中的时候在干嘛？。。。</p><p>从一开始不喜欢苏州思杰马克丁开始关注频道，他的更新频率有时候都超过了老马，哈哈哈哈</p><p>以下为该频道版权声明内容：</p><blockquote><p>由于苏州思杰马克丁软件有限公司等代理商对破解网站的持续打压，又有多个网站被迫关停（前年关停了许多，去年又关停了一些，今年还有关停），请各位站长加强防范。目前本人只会在telegram发布资源。本频道在此承诺，<strong>发布的一切资源均不会收取费用。</strong>本人<strong>不接受捐赠</strong>，如确实有财力可以点击<a href="http://www.redcross.org.cn/html/hszjz/index.html">此链接</a>捐赠（链接是中国红十字会的）。</p><p><strong>本频道不接任何广告</strong>，底端广告为 Telegram 官方投放广告，频道主无法关闭，与频道主无关。</p></blockquote><p><img src="https://cdn.specialhua.top/blog/2022-07-26-122437.png-pic" srcset="/img/loading.gif" lazyload alt="Xnapper-2022-07-26-20.24.33"></p><h4 id="1-5-Newlearnerの自留地"><a href="#1-5-Newlearnerの自留地" class="headerlink" title="1.5 Newlearnerの自留地"></a>1.5 Newlearnerの自留地</h4><p><a href="https://t.me/NewlearnerChannel">Newlearnerの自留地</a></p><p>该频道接受投稿，经常会分享IT科技等信息，重要的是经常推荐一些特别好用的APP，mac及ios居多，都是些小众、设计较好的app</p><p><img src="https://cdn.specialhua.top/blog/2022-07-26-115539.png-pic" srcset="/img/loading.gif" lazyload alt="Xnapper-2022-07-26-19.55.37"></p><p><img src="https://cdn.specialhua.top/blog/2022-07-26-115612.png-pic" srcset="/img/loading.gif" lazyload alt="Xnapper-2022-07-26-19.56.10"></p><h4 id="1-6-PagerMaid-Modify-Plugins"><a href="#1-6-PagerMaid-Modify-Plugins" class="headerlink" title="1.6 PagerMaid-Modify Plugins"></a>1.6 PagerMaid-Modify Plugins</h4><p><a href="https://t.me/PagerMaid_Modify">PagerMaid-Modify Update</a></p><p><a href="https://t.me/Pagermaid_Modify_Plugins">PagerMaid-Modify Plugins</a></p><p>一个Tg人行自走bot的更新通知群组。这个项目可以在Tg上把自己变成一个bot，能够关键词回复，每日鸡汤，顶级对线等等，很有意思，这是专门推送更新日志的频道</p><p><img src="https://cdn.specialhua.top/blog/2022-07-26-121101.png-pic" srcset="/img/loading.gif" lazyload alt="Xnapper-2022-07-26-20.10.57"></p><p><img src="https://cdn.specialhua.top/blog/2022-07-26-124320.png-pic" srcset="/img/loading.gif" lazyload alt="Xnapper-2022-07-26-20.43.10"></p><h4 id="1-7-写真馆"><a href="#1-7-写真馆" class="headerlink" title="1.7 写真馆"></a>1.7 写真馆</h4><p><a href="https://t.me/xzguan">写真馆</a></p><p>“高品质写真不定时放送”——呃，老司机自己看吧~只能说有点颜色。主要是没事养养眼&#x3D; - &#x3D;哈哈哈</p><p><img src="https://cdn.specialhua.top/blog/2022-07-26-123936.png-pic" srcset="/img/loading.gif" lazyload alt="Xnapper-2022-07-26-20.39.29"></p><h4 id="1-8-YearProgress"><a href="#1-8-YearProgress" class="headerlink" title="1.8 YearProgress"></a>1.8 YearProgress</h4><p><a href="https://t.me/YearProgress">YearProgress</a></p><p>能够以进度条的方式，每年每过去1%以消息推送的方式告诉你，本年已经过去的进度。</p><p><img src="https://cdn.specialhua.top/blog/2022-07-26-124149.png-pic" srcset="/img/loading.gif" lazyload alt="Xnapper-2022-07-26-20.41.45"></p><h4 id="1-9--Apple-Nuts"><a href="#1-9--Apple-Nuts" class="headerlink" title="1.9  Apple Nuts"></a>1.9  Apple Nuts</h4><p><a href="https://t.me/AppleNuts"> Apple Nuts</a></p><p>@Hackl0us 个人维护的 Apple 频道，只发表自己(频道主)的观点和见解。</p><p>经常推送Apple各种设备的软件更新情况，第一时间掌握你手里设备的最新版本，及更新内容</p><p><img src="https://cdn.specialhua.top/blog/2022-07-26-124607.png-pic" srcset="/img/loading.gif" lazyload alt="Xnapper-2022-07-26-20.46.03"></p><h4 id="1-10-Adobe-Mac-各版本下载"><a href="#1-10-Adobe-Mac-各版本下载" class="headerlink" title="1.10 Adobe Mac 各版本下载"></a>1.10 Adobe Mac 各版本下载</h4><p><a href="https://t.me/adobemac">Adobe Mac 各版本下载</a></p><p>阿多比全家桶的mac版本，特别方便。</p><p><img src="https://cdn.specialhua.top/blog/2022-07-26-124902.png-pic" srcset="/img/loading.gif" lazyload alt="Xnapper-2022-07-26-20.48.58"></p><h4 id="1-11-社G库人工高级查询"><a href="#1-11-社G库人工高级查询" class="headerlink" title="1.11 社G库人工高级查询"></a>1.11 社G库人工高级查询</h4><p><a href="https://t.me/SGK_CD">社G库人工高级查询 - FreeSGKBOT</a></p><p>Tg太多人为此打广告了，我试过付费查询，确实对方应该是用内鬼查出来的。数据准确性还可以。</p><p>多的不能再说了</p><p><img src="https://cdn.specialhua.top/blog/2022-07-26-125320.png-pic" srcset="/img/loading.gif" lazyload alt="Xnapper-2022-07-26-20.53.16"></p><h4 id="1-12-iPhone-Telegram-Themes"><a href="#1-12-iPhone-Telegram-Themes" class="headerlink" title="1.12 iPhone Telegram Themes"></a>1.12 iPhone Telegram Themes</h4><p><a href="https://t.me/IOSTelegramThemes">iPhone Telegram Themes</a></p><p>顾名思义，分享专属IPhone的Tg主题</p><p><img src="https://cdn.specialhua.top/blog/2022-07-26-125641.png-pic" srcset="/img/loading.gif" lazyload alt="Xnapper-2022-07-26-20.56.35"></p><h3 id="2-Bot类"><a href="#2-Bot类" class="headerlink" title="2 Bot类"></a>2 Bot类</h3><h4 id="2-1-和风天气小棉袄"><a href="#2-1-和风天气小棉袄" class="headerlink" title="2.1 和风天气小棉袄"></a>2.1 和风天气小棉袄</h4><p><a href="https://t.me/he_weather_bot">和风天气小棉袄</a></p><p><img src="https://cdn.specialhua.top/blog/2022-07-26-115117.png-pic" srcset="/img/loading.gif" lazyload alt="Xnapper-2022-07-26-19.50.04"></p><p>这个天气bot是我最喜欢的，一些天气预警信息能够到达乡镇级，很贴心</p><h4 id="2-2-Gmail-bot"><a href="#2-2-Gmail-bot" class="headerlink" title="2.2 Gmail bot"></a>2.2 Gmail bot</h4><p><a href="https://t.me/GmailBot">Gmail bot</a></p><p>能够关联到你的Google邮箱，并在接收到邮件的时候把邮件主要内容推送给你。</p><p>我的博客还有一篇详细介绍如何把Typecho博客评论推送到Gmail，再通过此bot把消息推送到Tg的文章，移步：<a href="https://specialhua.top/20220319/cid=92.html">博客评论推送+Telegram+Gmail提醒</a></p><p>当然，也可以纯当作邮件提醒的一个Bot使用。</p><p><img src="https://cdn.specialhua.top/blog/2022-07-26-120207.png-pic" srcset="/img/loading.gif" lazyload alt="Xnapper-2022-07-26-20.01.12"></p><h4 id="3-3-EFB-bot"><a href="#3-3-EFB-bot" class="headerlink" title="3.3 EFB bot"></a>3.3 EFB bot</h4><p>关于微信消息——Tg消息互通的内容不再过多介绍，详见我博客的文章<a href="https://specialhua.top/20210402/cid=71.html">Tg收发微信——EFB2（官方安装方法）</a></p><h4 id="3-4-Let’s-Music"><a href="#3-4-Let’s-Music" class="headerlink" title="3.4 Let’s Music"></a>3.4 Let’s Music</h4><p><a href="https://t.me/VmomoVBot">Let’s Music</a></p><p>音乐搜索+在线听+下载bot。网易及其他资源都有</p><p><img src="https://cdn.specialhua.top/blog/2022-07-26-125904.png-pic" srcset="/img/loading.gif" lazyload alt="Xnapper-2022-07-26-20.59.00"></p><h3 id="3-群组类"><a href="#3-群组类" class="headerlink" title="3 群组类"></a>3 群组类</h3><h4 id="3-1-天若有情天亦老"><a href="#3-1-天若有情天亦老" class="headerlink" title="3.1 天若有情天亦老"></a>3.1 天若有情天亦老</h4><p><a href="https://t.me/nblizhi">天若有情天亦老</a></p><p>南京李B的一个群组，最初来自Github李B资源分享。现在群组主要包含一些李B的歌曲资源，还有在这里你可以讨论他&#x3D;- &#x3D;</p><p><img src="https://cdn.specialhua.top/blog/2022-07-26-122916.png-pic" srcset="/img/loading.gif" lazyload alt="Xnapper-2022-07-26-20.29.13"></p><h4 id="3-2-Incrementalism-渐进主义者"><a href="#3-2-Incrementalism-渐进主义者" class="headerlink" title="3.2 Incrementalism 渐进主义者"></a>3.2 Incrementalism 渐进主义者</h4><p><a href="https://t.me/anki_keeper">Incrementalism 渐进主义者</a></p><p>渐近学习主义的频道及群组（群组在本频道介绍部分），使用Anki，Sm18的讨论组</p><p>这真是大佬云集的地方，我喜欢这种学习方法！</p><p><img src="https://cdn.specialhua.top/blog/2022-07-26-130440.png-pic" srcset="/img/loading.gif" lazyload alt="Xnapper-2022-07-26-21.04.29"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;先尝试分享一部分吧，希望有那么一个能让你感兴趣&lt;/p&gt;
&lt;h3 id=&quot;1-频道类&quot;&gt;&lt;a href=&quot;#1-频道类&quot; class=&quot;headerlink&quot; title=&quot;1.频道类&quot;&gt;&lt;/a&gt;1.频道类&lt;/h3&gt;&lt;h4 id=&quot;1-1-Typecho交流群&quot;&gt;&lt;a hre</summary>
      
    
    
    
    <category term="技术" scheme="https://inkcodes.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="bot" scheme="https://inkcodes.com/tags/bot/"/>
    
    <category term="TG" scheme="https://inkcodes.com/tags/TG/"/>
    
  </entry>
  
  <entry>
    <title>黑夜——Cross fire！！！高中时代的精神粮食吧~</title>
    <link href="https://inkcodes.com/2021/08/08/%E9%BB%91%E5%A4%9C%E2%80%94%E2%80%94Cross%20fire%EF%BC%81%EF%BC%81%EF%BC%81%E9%AB%98%E4%B8%AD%E6%97%B6%E4%BB%A3%E7%9A%84%E7%B2%BE%E7%A5%9E%E7%B2%AE%E9%A3%9F%E5%90%A7~/"/>
    <id>https://inkcodes.com/2021/08/08/%E9%BB%91%E5%A4%9C%E2%80%94%E2%80%94Cross%20fire%EF%BC%81%EF%BC%81%EF%BC%81%E9%AB%98%E4%B8%AD%E6%97%B6%E4%BB%A3%E7%9A%84%E7%B2%BE%E7%A5%9E%E7%B2%AE%E9%A3%9F%E5%90%A7~/</id>
    <published>2021-08-07T16:11:34.000Z</published>
    <updated>2024-11-13T16:11:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>这篇文章送给自己，也送我刚刚步入高中的妹妹施玥，希望你有所收获。</p><blockquote><p>这篇文章，是由作者<a href="http://754648011.qzone.qq.com/">黑夜-恒之教育</a>写的，当年他在 QQ 空间更新他的文章，记得 2010 到 2011 年，我还在上初中的时候，大家都在玩 QQ，他的文章在空间就得到了数万（大概？）的转发，很多人在高考吧，或者一些论坛都会看到他的文章。可能刚开始大家都只是收藏、转发了一下，而我把他的好友给加上了，一直到高中，都在看他的学习方法。莫名感叹，今天是 2021 年 8 月 8 日，刚好距离他这篇文章 11 年了。</p></blockquote><blockquote><p>想把这篇文章放到博客上的原因，一是他的文章确实鼓舞了我整个高中的学习，以此激励自己不断前行下去，二是其中讲到的学习方法，我认为精辟之处仍然可以参考，他的思维很大胆，很自由，可以说是从内心底激发那种想要赢的感觉，现在看到那些反对老师教条教学方式，还有当年自己的所做所为，确实，一个无法学会自由学习的人是没办法在高考这样的选拔性考试潮流中生存下来的。三是 qq 空间里的文章由于排版等原因，简直无法读下去，希望能让自己的小弟小妹们看到，或着给某个曾经受黑哥鼓舞的朋友，再次找到这篇文章，借此寻找到自己的方法。百度搜索到的大部分此文也都成为百度文章、道客巴巴的收费文。</p></blockquote><blockquote><p>利用 MD 语法，使文章结构更清楚了一些，文末我会把自己<del>精校</del>的文档放到分享链接里，供各位下载。也希望当时买了书，或者留存了电子档的《破冰之路》的朋友能给留言，或者通过 tg，或者通过邮件给我提供一下文章，争取把《破冰之路》也重新整理上来。</p></blockquote><p>以下是原文，原文链接为：<a href="https://user.qzone.qq.com/754648011/blog/1281329977">CrossFire!!! </a></p><hr><p>声明：</p><p>如果你不是一个能坚持的人，如果你不是一个充满成功欲的人，如果你是一 个甘愿平庸的人，如果你是一个怎么都振作不起来的人，如果你是一个很厌恶学习的人，那后面的内容不必看了，什么方法都救不了你（所以后面的内容我假设你不是这样的人）。</p><p>切记切记，一颗慵懒的大脑，一个懒散的生活习惯是绝对不可能做出让别人惊叹的成果！</p><p>与其机械的拼时间战，不如在短暂的时间内，让自己大脑高速运转起来，精神振奋起来，目标明确起来，好胜心点燃起来，让之前的挫败感不再，让高三的沉闷不再，让高考的压力不再，让之前课业的负担不再，让我们的梦在六月翱翔！</p><p>流星，因为短暂而美丽，划过黑寂的夜空，释放出那一闪而逝的光芒，虽然微弱，但却没有人能无视它的存在。人生如同流星，充满了精彩与传奇，如同一支美丽的传说，究竟是否会象流星那样短暂，别人决定不了，上天也决定不了，只有自己来掌握。如果愿意，流星也可以变成永恒。</p><p>————谢文东</p><p>人生当如流星，让自己成为考场上的一束流星吧！</p><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>那个帖子开始，虽然我一直没说明，但我真正用意是引导大家进入一种自由学习的状态，比如开头说的“藐视老师、打破权威”以及各种各样的老师会比较反对的技巧（有些很灵活的老师绝不会反对），其实都是为了打破很大一部分同学原来的思维定势，当然，肯定会引来很多质疑。</p><p>学习、一定要跟着老师走？</p><p>作业、一定要做或者全做？</p><p>课、一定要听？</p><p>其实、当你真正理解什么是自由的学习，这些问题你便有了自己的回答。</p><p>目前为止（注意、是目前为止），你学习是为了什么？高考！</p><p>山东虽然实行素质教育、但在录取时，却仍然只以分数为唯一标准，确实让人心寒。素质教育尚且如此，其他仍然实行应试教育的省份呢？我一些大学同学，高三学校晚上加班到 十一点的也有很多，可见高考真是害人不浅。</p><p>不过，说实话，很多同学学习都是在做无用功，成绩不见长进，努力却不见收获慢慢也就失去奋斗的动力。。。这篇文章、并不具体提出怎样的学习方法，而是偏重于学习方法的原理，以及对以前我说的争议性较大并且很多同学没有正确理解的方法做出解释，授之以鱼不如授之以渔啊！</p><p>任何一件事的成功，需要的是什么？方法仅仅是一方面，再好的方法，没有自身素质的 支撑，绝难成功。自身素质其中决定因素便是灵活的思维（相对于定势的思维而不是指聪不聪明，大家智商都一样、除非是弱智，但是显然、弱智是不会来这里）以及长久的成功的愿望。</p><p>之前，我以为，大多能理解我说的意思，但是后来发现明显大多不能理解我的意思，这当然于我的表述有关，但是、要用多少字才能让大部分同学理解我的意思呢？？而且有些东西确实难以言传、比如“什么是自由的学习”、诚言我也只能用一些例子以期待大家能自己体 会到我想要表达的意思。<br>这篇文章、我尽量用一些原理让大家理解更多的原理，从而最终明白什么是自由的学习。</p><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><h4 id="一、考纲！"><a href="#一、考纲！" class="headerlink" title="一、考纲！"></a>一、考纲！</h4><p>把考纲放在第一个讲足以说明它的重要性，夸张的打个比方，如果考纲对数列不做要求了、 那如果你还继续攻数列的话、岂不是做无用功？</p><p>当时很多人质疑、说还剩几天就高考了，这方法又有何用？</p><p>我说，这十天、如果是我、我能提高一百分。就算明天上午高考、那我还有今天一上午、 下午、晚上的时间来准备考试、足以<del>（矣）</del>！</p><p>以我期末考为例子来说明怎么突击，说明考纲的核心地位。大学里有些科目有些人纯粹是靠临时突击来应对的。平时因为要学专业外或者由于一些活动等等的原因、我不少科目（比如高数、物理）平时没学过多少。不过一般考试前都有一天左右的空闲时间！这一天、足以让一个会学习的人而且会考试的人完美应对一场大学期末考！（我不是在教 大家学坏哈。。。我只是用这个例子来阐述考纲的重要性。。。）  当然、前提是这本书起码得会三分之一吧？如果一页都没看过书、一窍不通的话、难度就 太大了，那一天不够~。</p><h5 id="上午。"><a href="#上午。" class="headerlink" title="上午。"></a>上午。</h5><p>首先、用各种关系弄到几份这科目前几年的期末考试题（相当于高考考纲、或者本省高考题！）  然后看课本目录、对比着考题把考点勾出来，然后再翻看另一张考题、继续勾考点，直到把卷子都弄完（一般这卷子很难弄、也就两三张）。这样下来，便很清楚的知道了要考什么。  然后用三个小时左右的时间集中看考点对应的内容，这三个小时达不到对所有考点熟烂于心，只能是对所有考点（一般也就二十多个）有个大致的认识。看完之后、便知道了哪里难、哪里易。</p><p>然后用一个小时的时间、去做相关考点对应的课后习题，难的多做、简单的考点少做。打个比方、如果十个考点的话、做个 15 道题目就够了，难的两道、简单的一道。  这一小时结束后、可以说你会对考试内容、难度、重点等核心要素有了个比较清晰的认识。这时候也该吃饭了、叫外卖、等外卖、吃饭、午睡（其实是闭目养神、大脑依然在思考、毕竟时间有限嘛）加起来大 概一个半小时吧，这段时间把之前整理的各个考点对应的核心公式多瞄几眼、同时联想做的课后习题里面与之相对应的题目。</p><h5 id="下午两点。"><a href="#下午两点。" class="headerlink" title="下午两点。"></a>下午两点。</h5><p>通过上午的看考点、做课后习题、记忆公式，便有了应对这场考试的基本能力，但、真正的考题是什么样、难度如何心里还没底（毕竟刚开始看考卷只是为了知道考什么、毕竟几个小时前还没多少知识基础呢、怎么能看出题目的深浅呢？），所以下午就要利用好手里的卷子了！</p><p>大学一般科目正常考试时间是 2 小时、但明显没那么充足的时间来完美的模拟考试了， 所以用一个半小时的时间做第一套卷子，这时候的水平，能解出三分之二左右的考题，剩下的难题、放弃（这是突击、不是平时训练），然后用半小时的时间核对答案、把未解出的题弄透彻。</p><h5 id="下午四点。"><a href="#下午四点。" class="headerlink" title="下午四点。"></a>下午四点。</h5><p>通过做考题、对考试的认识进一步加深，对考试有了个整体的感知，这时候是时候根据自己对这一科目考题的猜测、理解再回顾课本了，强化自己的不足，集中攻克一些难点。这一 遍看书要有轻重、有选择，而且要很细致，对于必考的或者很可能出压轴题的考点开始尝试着做难度较大的习题。弄完之后、该吃饭了，继续外卖…同时继续熟悉公式。</p><h5 id="晚上七点。"><a href="#晚上七点。" class="headerlink" title="晚上七点。"></a>晚上七点。</h5><p>拿出第二张卷子，真正的模拟考试！ 这个时候、最重要的就是<strong>全局观、全局观、全局观、全局观</strong>！也就是我之前反复强调的不管时间多么短、你务必要用任何方法在考试前有了成竹在胸的感觉！</p><p>这种感觉可以来源于你完成了自己的既定任务（甚至你只完成了我所说的第二步、也可以说是一种程度的完成了任务、因为你大概了解了有什么知识、会考什么，而不是像开始时那 样什么都不知道。 明白我这个意思吗？这种感觉、考试前的最后时刻、必须找到！），也可以来源于最后一次模拟考试的成功，也可以来源于对知识的总体把握等等。</p><h5 id="晚上九点半。"><a href="#晚上九点半。" class="headerlink" title="晚上九点半。"></a>晚上九点半。</h5><p>回归课本、考纲，将所有考点简略的在脑中一一闪现，有助于找到“那种感觉”。  然后、第二天、信心满满的去考试就行了。</p><p>我的高数（上、下）、物理（上、下）、线性代数等等的科目、无一不是用上述方法突击， 结果没有一门低于 90 的，高数（上）和线性代数都是满分~。  用上面那么多字来将我突击的例子、其实就是为了讲考纲。通过我的例子、你能体会到考纲的核心地位吗？正是有了前几年期末试题（相当于高考考纲）的指导，我的复习才能做到轻重适当，有条不紊。  如果没有考纲、那备战高考便失去了方向、失去了对考点轻重的把握。  对于考纲里面“了解”、“会用”、“掌握”等等的要求等级，你各应该下多大的功夫、研究 透彻到什么地步，自己心里必须有个谱。对于考纲的讲述、就到这里，如果还是没理解…..那我没辙了。</p><h4 id="二、再论基础知识"><a href="#二、再论基础知识" class="headerlink" title="二、再论基础知识"></a>二、再论基础知识</h4><h5 id="基础知识有多重要？"><a href="#基础知识有多重要？" class="headerlink" title="基础知识有多重要？"></a>基础知识有多重要？</h5><p>先介绍一下我大概的学习历程。</p><p>高一、荒废。（高一同样荒废的童鞋们要看到希望哈、高二不能再废了！）</p><p>高二上、觉醒（当时成绩勉强班里前十、580-600 左右的分），也开始了寻找一些学习方 法，搜了半天总结出来也只有俩字“基础”！然后拉一个朋友陪我一起把桌子拉到教室的最后面的角落里、不听课、不做作业，学习方面唯一做的就是把书特认真的从头看起，不断的在目录和内容之间转换，对课本的核心内容、难点研究的很透彻。对于基础考点，采取小雨攻势；对于综合难点，进行狂轰乱炸，各个击破。只要是考点、只要是不顺手的，就硬着头皮做到十分顺手的地步。</p><p>当时的执着程度、可以说是到了一个极致，放弃了中间的月考，因为当时心里很清楚， 还有一些东西没弄好。也就是说、我前面所说的“那种感觉”还没找到。其实我从几个星期前便决定放弃这次的月考，目标直指下个月的全校通考！</p><blockquote><p>PS：当时这么固执是因为我无路可退，当时做出了承诺、对于一个在班里前十都站不住脚的小菜来说、状元可以说是痴心妄想，所以我没有选择的余地，如果不背水一战、 拿出极大的决心来改变学习方法、改变学习态度的话，我学习会依然平庸下去。要想脱颖而出、就要有独树一帜的勇气和魄力！但是、我不建议大家效仿！切记！除非你也没有退路了。</p></blockquote><p>大家还在月考的时候、我却在老师办公室里独自啃着还未完全掌握的难点…</p><h5 id="一个月后的全校通考。"><a href="#一个月后的全校通考。" class="headerlink" title="一个月后的全校通考。"></a>一个月后的全校通考。</h5><p>考试过程中、感觉到前所未有的舒畅！  整个数学、物理、化学、生物这些理科科目没有一门有一丝的不顺手的地方！  那种做题过程中的安心、踏实，以及喜悦是以前从未有过！  最终、人生第一次在班里考第一！高中学习生涯的转折！当时的成绩从久久不能突破的 580 多分直接突破到 640+。</p><p>很难想象、当时的压力多大。把桌子拉到角落、放弃月考，等等的一连串别人无法理解的行为，就连爸妈都不支持我。当时只能把苦藏心里、化为动力，用结果证明给他们看！可以说、这两个月的对基础知识的努力，为我以后成绩继续上升打实了基础，而且把基础知识砸的很实。</p><h5 id="当时的水平："><a href="#当时的水平：" class="headerlink" title="当时的水平："></a>当时的水平：</h5><ol><li>看目录脑中能想起书里的具体内容、并且对重点过程能理解其原理、能独立推导（这 算是基础知识勉强过关的一个标准吧）</li><li>能解决平常见到的大部分题目，但步骤、卷面、速度等等的还未达到能考全校前几名所需的标准</li><li>开始接触高考题，开始接触奥赛（但对奥赛一片迷茫）</li><li>语文、英语较差，都稳定在 100 左右</li><li>刚开始实施帖子里面所说的“小本子”撇单词、短语</li><li>刚开始实施午睡时冥想一些数学公式、化学基础、物理模型等等的方法</li></ol><p>从这些大家可以看出来一个比较完善的方法的雏形了吧？   这些都是在那次通考过后总结自己不足时候想到的解决办法，但都是刚开始实施。</p><p>学习历程暂停、回归正题（我为什么讲我的历程呢？而且把每个阶段我的水平、所用方法等等的解释那么清楚呢？从我的历程找到自信、找到自身不足、找到适合自己的学习方法 吧！）</p><h5 id="何为基础！？"><a href="#何为基础！？" class="headerlink" title="何为基础！？"></a>何为基础！？</h5><p><strong>灵活灵活再灵活</strong>的去理解什么是基础知识、！ 你可以理解为、基础知识就是你觉得你应该会、但做起来就是不顺手的知识，就是高考必考但你却很反感（本质上是你很害怕）的题目，就是你心里觉得会但一实践起来却感觉技穷的知识。</p><p>看出来没，都是自己的软肋！</p><p>现在要做的、就是攻击自己的软肋，把不顺手的硬着头皮弄顺手，反感的（害怕的）咬着牙弄的透透彻彻，感觉会但一实践却不会的就将实践进行到底！</p><p>让自己变强的唯一方法就是让自己没有弱点！</p><p>举一个最简单的例子，对于理科生、减数分裂都特熟悉，但是，你能不看书的把减数分裂每个阶段的图像特征（包括染色体特征、纺锤体特征、核膜特征、纺锤丝特征等等的）都信手拈来的画出来吗？（是画出来！画！而不是空想！去实践！）  如果感觉很别扭的话、你基础知识还差得远。  基础知识到此为止、希望大家能理解了。</p><h4 id="三、考试强化！"><a href="#三、考试强化！" class="headerlink" title="三、考试强化！"></a>三、考试强化！</h4><p>上面说那么多，都是为了考试服务，这也是最后一节。  有了考纲的指导方向，有了硬实的基础知识做后盾（我默认你前两节都做的很好了），剩 下的就是去征服考试了，到了见真章、让别人见证你努力的成果的时候了，跃跃欲试吧？</p><p>为一朝光辉，十年寒窗苦读！</p><p>关于考试，大家会有种种的问题，比如分数大起大落、止步不前等等的，关于这些帖子 里面说了很多，不再赘述。</p><p>这一节里，我会继续用实例来讲解，并且会对我帖子里面说的一个我自认为极其重要的方法做出解释，争取让大家领会到那种方法的奥妙和原理。  上一节说过，从 580 到 640 的突破，这节讲我从 640 到 670 的突破！</p><blockquote><p>PS：看这篇文章的童鞋里面应该有不少在及格线徘徊的吧。？这种童鞋呢，你们就更要好好领会我上面两节所说的“突击考试”、“基础知识”了。你们可能有时候听课都有障碍吧？ 那样的话，倒不如不听。既然听不懂，听了就是浪费自己时间，反倒不如看书自学，硬着头皮坚持着砸实基础知识，你会成功的。（我默认你能坚持，相信你可以坚持！）</p></blockquote><p>其实到了 640 的分数，大家考试的时候一般就会有那种很顺手、做不出的题目不多的感觉了，因为这个时候八九成的基础知识已经掌握的很熟练了，偶尔有些弱点存在。 但明明一场考试感觉（比如理综、数学）所有题（除了压轴题吧。。）都会做，但成绩出来却总是老样子，数学 130+（甚至更少），理综 230+（满分按 300 算），偶尔这门考好了， 那一门却扯后腿，总分还是那么多，一直不能突破并且稳定，对吧？ 其实大家都知道原因，数学压轴题（或者个别难题）做不出来、会做的却在步骤方面小错不断，物理要不是看错条件要不就是少考虑了摩擦力、加速度方向改变，化学忘记或者错记化学方程（条件、沉淀号、气体符号、离子符号）、物质性质等，生物答题语言不准确、 不科学、不专业，或者知识掌握不透彻等。 这大错不犯、小错不断的毛病…不能总归结于考试失误或者发挥失常吧~？</p><p>如果你认为只是马虎、发挥失常、失误，那你基本不可能能突破并且稳定（指的是每次、 每次！）在高分段。  而且，这种毛病和想法尤为突出的往往是些挺聪明的学生，这样的学生可以说每个班都有，成绩往往是前十名或者前五名，但却一直不能稳定在校里、市里、省里前几名。如果不能改变“我很聪明，不怎么学就能学好，平时没考好只是失误，高考一定能考好” 这种想法，那你只能期待你高考人品爆发了。</p><h5 id="这个阶段的突破点在哪？"><a href="#这个阶段的突破点在哪？" class="headerlink" title="这个阶段的突破点在哪？"></a>这个阶段的突破点在哪？</h5><p>第一、英语<br>第二、数学压轴题<br>第三、理综、数学细节问题</p><p>继续用我的学习历程来说明怎么突破。（现在高二已经快要结束了）</p><h5 id="当时的水平"><a href="#当时的水平" class="headerlink" title="当时的水平"></a>当时的水平</h5><p>1.英语用那个本子记单词、词组坚持了几个多月了，词汇量足够对付高考</p><ol start="2"><li>数学奥赛突破</li><li>理综、数学开始大规模做整套高考题、模拟题（当时我们理综还没整合成一张卷呢、 三科分开考的，但凡事要提前准备嘛）</li><li>英语开始魔鬼训练</li><li>开始意识到考纲的核心地位，好不容易弄到了考纲，参照着考纲复核自己知识点无漏洞，一些难点都已经被之前各个攻克</li><li>语文、英语还是薄弱，理综时间不够用，数学成绩总是不尽人意</li></ol><h5 id="先说英语。"><a href="#先说英语。" class="headerlink" title="先说英语。"></a>先说英语。</h5><p>之前英语一直很稳定，都是 100-110~</p><p>英语想要突破，有两个前提。</p><p>1.词汇、词组跟得上</p><p>2.第一卷对得起观众~</p><p>当时我用的是天星的《45 套》，每天做 1-2 套（只做第一卷除了听力之外的部分）。 开始时候错的很惨~ 《45 套》在教辅里面属于难度较大的卷子，里面单选陷阱多，完形、阅读难度大，而且问题设置的专朝你要害。</p><p>最开始的时候，给每一个模块定了一个时间上限，比如单选 10 分钟，完形 15 分钟等等的（这个时间是我随便说的，不具参考价值）。我建议大家开始的时候也这样规定了时间， 有利于后期英语整体对时间的把握。<br>当时第一卷大概要做一小时（当时太嫩啊，可是我可下了狠心了！~），但是每做完一张卷子，我都会用<strong>几倍</strong>的时间去认真的反思、总结、研究这张卷子，到了后期做的多了时，还会拿出其他卷子放在一起对比，总结高考规律、考点、陷阱等等。</p><p>大家可能会问，一张英语卷子，研究什么？值得用那么多时间？其实，一张优秀的卷子，包罗万千，暗藏玄机与出题人的心血。先说学校里最重视的一部分——单选（这点学校真是太误人子弟、太浪费学生时间了！ 如果老师会教学的话，到了一定时期，几天就可以将那些磨磨叽叽讲三年的东西弄完，效果还更好，可学校里一味的<strong>重复</strong>（注意这两个字！）发语法教案、单选几百题等等的垃圾东西， 完全侵占了学生的时间，结果做了三年，做了上万单选，也没见出什么效果，真是可气！为什么刚才我强调“重复”这两个字呢？因为学校第一次发那种语法教案的时候（高二），我珍藏，但是到高三又开始发，这便罢了，可一直不停的发，还有单选几百题配套，就那点语法、就那点考点，却用了高三绝大部分时间去讲，讲来讲去就讲那么点东西，反而冷落了最最重要的阅读理解。我相信不止我们学校这样，大部分学校应该都是这样教英语的，悲哀！ 更悲哀的是学校发了教案、单选几百题，同学们还傻不拉唧的去做，我想问，有用吗？这样你会获得自我安慰、获得老师的表扬，可是，你英语突破了吗？单选能做到全对吗？就算能稳定全对了，明明可以用少十多倍的时间达到同样的效果，你却跟着学校的白痴政策一起那样，值得吗？）</p><p>上面括号里说那么多，实在是因为那个太关键了太关键了，学校为了单选、为了语法付出了太多太多，得到的太少太少，下面看我所说，这部分我会重点说。</p><p>单选，属于对于词汇、语法的考察，词汇部分不多说，但对于语法部分，你做的这套卷子里面总有模棱两可、不确定或者不知道属于那个考点的题目吧？  一道题目，四个选项，可能包含了四种易考（注意这两个字）的语法（为什么我不建议大家抱着语法书啃呢?因为那太太太笨了~学习要讲究一针见血，一本又厚又枯燥的语法书， 绝对会让你对英语望而生畏，还浪费了时间，赔了夫人又折兵，更关键的是，高考涉及到语 法的只是单选、完形里面的部分题目，而且涉及到的语法每年变化又很小（注意这句话！）， 考来考去就那么多语法考点，这种情况下你去啃厚厚的语法书，岂不是有点愚公移山的意味 了？所以，我觉得学习“高考英语语法（咳咳、注意这几个字哈）”十多套卷子足矣，本来就是很简单的事，何必大费周章呢？时间可宝贵，有更重要的事情去做，可不能浪费在无用功上。）</p><p>既然这样，这四种语法你掌握了么？其他的单选题目你明白了么？</p><p>没明白的话，有两种选择，一是立马去翻之前收藏的语法教案（刚才我说的珍藏的一份）， 从那里面把这个语法考点弄透彻，二是先不管、去做其他模拟卷子的单选，然后把这几张卷 子拿出来对比（肯定有卷子里有这个考点的题），然后这几道题对比着自己分析，自己总会给出个假设吧？然后去问老师自己假设的对不对。</p><p>我推荐第二种，这样由于是自己总结的，所以印象深刻，掌握的会更透彻，也会增加自己的信心，对语法也不那么排斥了，因为通过自己的努力征服了它了！我一般都是用第二种。  等你做个十多套卷子，你一张张翻开看他们的单选，你会发现，这十多张卷子里面的单选相似题目起码得有 70%，剩下的 30% 也是一些情景交际、词汇、词组等等的，也就是说语法方面就那么几道题。</p><p>我们可以这么说，会了那么几道题，你便会了学校里教了你三年的东西，也可以说学校教了你三年英语，其实也就教了你那几道题（稍微夸张了点，但八九不离十），也可以说， 高考英语语法也就是几道题而已，仅此而已。</p><p>会了那几道题，你便会了那些所谓的“单选几百题、单选专题训练”等等的东西。  这样一说，英语是不是一下子没那么庞大了？学习方向是不是明确了?信心是不是增强了？是不是觉得学校的做法很可气很幼稚了？</p><p>完形不说。（到后期，我单选一般五分钟以内就搞定了<del>还记得我高考的时候，每道单选都是一扫而过，在我看来，那都是“原题”，一共才用了三分钟多点</del>对答案之前就知道肯定全对。如果上述我说的你做的很好，能坚持，你也能达到这地步。不说完形、不是因为完形不重要，恰相反，完形我用的时间比其他大多数同学用的时间估计都要长，因为完形和阅读想要做全对，可不是单选那么简单了。）</p><p>下面说重中之重，阅读！  我帖子一开始就说了，我学英语的时间很少，而且那很少的时间内，可以说绝大多数都是在学阅读（而学校教学的重心却放在单选、可笑可悲），帖子里面有的内容我不重复，下面开始对大家疑问较多的地方做解释。</p><blockquote><p>问题一：  阅读如何当成完形、单选来做？</p></blockquote><p>我说过，一篇好的阅读，我至少做三遍。第三遍以后就把他当成单选、完形做了（也可以说把这篇阅读当成课文了）。  很多时候，阅读里面一句看似很普通的话，你一眼读过去立马明白了它的意思，而且觉得理所当然似的，可是，如果去掉其中的一个词，给你几个意思相近的词让你去选择，你那会感觉那么理所当然吗？估计你都不确定该选哪个了吧？  那开始为什么觉得理所当然呢？  大家可能想到了，语感！  这就是语感！那种读过去理所当然的感觉就是语感！  有的人读得多了，那种“理所当然”的感觉重现的多了（当然，一般自己也意识不到， 除非在看到我说的这段话之前你就想到过我说的这些），语感也就强了。<br>这还没完，一篇阅读的开发价值远不止于此，仅加强了一下语感岂能满足？  再细细的读这句话，挨个单词的读，你会发现，这句话里面竟然包含着一个经常考的词组、单词，甚至有可能今天刚学或者什么时候刚看到的一个单词在这个句子里面出现了，这不相当于又复习了一遍单词、词组么？  接着读这句话，你会发现这句话竟然用了一种经常考的句式结构，而且包含了同位语从句、时态等等的语法，这不相当于又巩固了一遍语法么？而且对句子结构的剖析能力也增强 了。  把这么多句话串起来读，通读这篇文章，你阅读水平、阅读速度不都提高了么？</p><p>上面的那么多，都只是开胃菜而已，最重要的价值，还没开发呢。  上面涉及的，依然还是词汇、语法的范畴，只不过多了个阅读水平，更重要的是逻辑判断、心理分析！</p><p>这才是研究阅读的重头戏！一场逻辑的游戏。</p><p>大家平常都有这种情况吧？做阅读的时候，四个选项轻易排除了两个，剩下两个感觉有点像，而且貌似都没错，犹豫来犹豫去的，咬咬牙选了一个，最后核对答案发现果然选错了 ~</p><p>经常出现这种情况吧？O(∩_∩)o</p><p>其实这正是阅读最让人头疼的地方，有些题总有两个选项拿不准，而那样的题往往都蒙错~   我说的研究阅读，最多的时间是去研究这两个所谓的“模糊选项”。</p><p>个人认为，考好英语所需要的逻辑能力要比数学高，做英语完形、阅读的时候，要将自己的感情色彩去掉，像个只剩下逻辑思考的机器人才行，不然的话，总容易钻牛角尖，总容易错。   英语的阅读世界，逻辑是唯一通用的语言，文章里面说什么就是什么，没有“我以为”等等的主管<del>（观）</del>概念。</p><p>模糊选项该研究什么？现在我默认为你已经去除了浮躁、去除了个人感情色彩。</p><p>首先，研究语气。凡是话，都会有语气轻重的区别，看看这两个选项哪个语气重，哪个语气却有种风轻云淡、事不关己的感觉（这种往往是正确的），对于语气很重的，要小心了， 很可能是不符题意的。  研究包含关系。非常仔细的去读这两句话，很有可能其中一句话包含了另一句话，也就是说，假设 A 正确，但 B 包含于 A（就是 B 是 A 的子集），所以 B 更正确，因此 A 不可能正确。明白？这一招百试不爽，每次都用，和语气分析法结合着用那可是很爽的<del>告别犹豫！  研究侧重点。经常会有两个意思很相近而且都没有违背文章本意的干扰选项，这个时候语气说的都很含蓄（很专业</del>一看就像是好人那种。。。大家生物答题就要学会这种“含蓄”、 “朦胧”，不信的话你去研究高考生物解答题的答案，那话说的当真是风轻云淡，又有种蜻蜓点水的感觉，换句话说就是答的无关痛痒，恰到好处，显得很成熟老练~），而且也没有包含关系，那就要研究他们的侧重点了。凡是话，都有个针对的方向，这种情况下，这两句话的针对方向肯定是大差不差、但又多少有点偏差。很难读出差别吗？</p><p>其实不难，因为这时候的你已经只剩下逻辑判断了，一点点的差别你都分辨的出来，取其中最贴近文章本意或者该问题的选项即为答案。</p><p>当然，将这几种分析方法用的融会贯通、信手拈来靠的是平时的磨练与钻研。</p><p>至此，一篇好的阅读才算是开发完了。</p><p>试问，你做过多少篇阅读了，然而，又有多少收获？  我觉得，这样做一篇阅读，胜过做百篇！</p><p>效率、成果都是这样练出来的！</p><p>完形呢？会了阅读的分析，当完形（往往也是排除了两个）出现模糊选项的时候，也是去分析吧。<br>切记，英语很理智，英语比数学更不需要模糊，英语需要确定！   把一张英语卷子里面所有的不确定都钻研为确定，那第一卷满分离你便不遥远了。   以上这些不是一下子领悟的，也是经过了一个很长的阶段一点点明悟的。但当完全明悟的时候，英语想考差都难了，高三英语再难再怎么，也没下过 130，最高的一次甚至 146~</p><p>但是，说实话当时我很不愿意做英语，因为做一套英语太累了，我宁可做三套数学也不愿做一套英语，每一次做完形、阅读，那都是绞尽脑汁，极尽思维，就是为了让自己做 的比标准答案还标准！每次做完英语真的都感觉脑细胞死一堆呀~</p><blockquote><p>问题二（也是我备受喷的一个。。。）：   英语作文五分钟写完，而且分数不低于 25？</p></blockquote><p>摸着良心说，我说的是真的！而且有这种能力的人，只我们班就有两三个。在这几个人看来，高考英语作文如果真较了真的去写，那真是。。。   五分钟内写完、能做到？</p><p>试问，整个高三我背了三大段万能段落 + 十多句经典模版句子，每次考试都用，不管什么题目，多多少少都能夹杂不少万能句子，用到我都无语的地步了，这种情况下，120 多个 词的作文超过五分钟那才叫奇怪。  至于分数不低于 25.。首先，我苦练过卷面（注意，是卷面而不是字体！连卷面不等于练字体！我怎么练卷面的？很多同学哪个字帖在那练呀练。。。我呢？我之前说过重复做数学、 理综套卷对吧？解答题需要书写吧？像理综、文宗这样的需要书写速度吧？就是在一遍遍的重复做套卷中把书写速度、卷面整洁度、步骤完整度给锤炼出来了，你算算，一举几得？）， 再者，我背的句子都是精挑细选的（平常老师整天逼着大家背作文、背课文。。真是浪费时 间~不需要多，三篇经典万能作文，足以应付高考英语作文。），这种情况下，分数能低吗？</p><blockquote><p>问题三：用小本子记单词每天要记多少单词，每天看几次等等的。</p></blockquote><p>说实话，这问题问的太生硬了，自由的学习、自由的学习！  没有限制！没有限制！  想看了，就瞄几眼，每天可以时刻都去瞄，也可以偶尔瞄几次，顺你心意去做，觉得怎么适合你就怎么做。关键在于，坚持！坚持！  这个方法类似于什么？类似于群秒的魔法，见效慢，但一旦见效，就是一片怪物的倒下， 就是一堆单词的彻底记住，而不是今天记住过几天就忘了，是刻在你脑子里了！  英语到此全部结束。</p><h5 id="下面说数学、理综。"><a href="#下面说数学、理综。" class="headerlink" title="下面说数学、理综。"></a>下面说数学、理综。</h5><p>经过英语的一番洗礼与蜕变，总分起码又提高了 20-30 分吧~？分数估计也能稳定在 670 了。剩下的怎么提高？</p><p>数学压轴题，这个由于我学过半年奥赛（可惜当时我大病了一场，没能去奥赛考试。。）， 再加上经常总结做题规律，所以一般我能做出来。  这个不强求，毕竟有些压轴题确实太难了，甚至到了可能全省没一个做出来的地步，所以这个我不多说，大家量力而行，能拿多少分就拿多少分。（也说不定那年会比较简单哦~）</p><p>剩下的，最后一个重点。</p><p>细节！</p><p>计算错误？步骤不完整？速度跟不上？方法不熟练？卷面不满意？</p><p>那就，炼！</p><p>我说过，重复做套卷。这个方法对我的作用极其大，将我从 670 突破到 690+（唯一的遗 憾还是语文上不去。。。）。  但是，这个方法产生的疑问很多，喷的也很多。总结一下，问题大概有这些：  做了那么多遍，答案一眼就看出来，再做还有用吗；  一个高三就做这么几套卷子太少了吧？  我高一（二），很多知识都没学，那些套卷根本没法做，这方法对我没用吧？  平常没那么多时间去做套卷啊。   做过一遍后卷子上都有痕迹了，再做一看就知道答案了（这问题问的。。。）</p><p>其实，问题根源在于，问这些问题的童鞋不懂什么叫自由的学习、自由的学习。。。   选择题一眼看出答案，那好，你能一眼看过去，这道选择题的思路能清晰的在脑中浮现吗？能的话，这道题可以不做了，不能的话，认真再做。</p><p>重点在于解答题啊…</p><p>选择题只是在脑中重现思路即可了，真正需要在一张干净的纸上（而不是在原卷子上、 不然你怎么炼卷面、步骤？自己一定要动脑想想用这种方法的目的是什么，原因是什么。） 认真重做一遍的是解答题！   平时没那么多时间做套卷？   一节课的时间有没？用一节课的时间把之前做过的一套卷子的解答题认真做完，总能做到？毕竟是之前做过的卷子。</p><p>这样下来，你一星期能做到少卷子的解答题，能训练多少？很多很多吧？    嫌做的少？那就多找几张卷子交叉着做。。。    知识没学、没法做套卷？    那好，自己从作业里面抽几道好题，拼凑成一张套卷做不行吗？非要做成套高考题？    其实，这一个个真不是什么问题。。。    说了这么多，不知道大家体会到什么是自由的学习了么？<br>我尽量用自己单薄的语言来贴近那层意思。</p><p>自由的学习就像自主餐厅一样，自己搭配食物，而不是学校某些餐厅那样给所有学生定制的套餐。</p><p>自己需要什么，就学什么，感觉那里该学，就学什么。这种情况下，不在乎老师布置的任务，不在乎学校的种种限制，只要是你觉得是最有利于你学习的，就去做，哪怕违背了老师的意愿。</p><p>我们要知道，总有一种方法对你来说是最高效的。</p><p>什么是最高效的？最短的时间，获得的收获最多。</p><p>如果老师要求你做的方法恰好（注意这两个字）是最高效的，那就听老师的；但如果不是，那就不听老师的。（体会到没？）   开始可能会挨批评~可等你大成之后。。年级主任都来找你给学校同学讲授学习方法。   到这里，所有重点内容基本该讲的都讲了，唯一的遗憾就是没讲秒杀，这个待大家自 己去探索吧。   都说高考是千军万马争过独木桥，但总有一些人懂得另辟蹊径，自己再造一条属于自己 的小桥或者轻舟，绕过千军万马，最后取得了成功。</p><p>说真的，若想脱颖而出，就要有另辟蹊径的勇气，否则就会淹没在千军万马之中。   敢不敢改变，有没有决心和魄力，是你必须要考虑的问题。   莫道今年春将尽，明年春色倍还人！   起点低不怕，怕的是你没有冲击顶峰的勇气！   王侯将相宁有种乎？别人能考第一自己就不能？   相信自己！   命运掌握在你自己的手里，不要让它蹉跎而过！   煽情的话我就不多说啦，来个直接的，祝大家金榜题名！</p><p>有点俗，哈哈 O(∩_∩)o 。。                                                                                                                 2010.8.8</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这篇文章送给自己，也送我刚刚步入高中的妹妹施玥，希望你有所收获。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这篇文章，是由作者&lt;a href=&quot;http://754648011.qzone.qq.com/&quot;&gt;黑夜-恒之教育&lt;/a&gt;写的，当年他在 QQ 空间更新他的文章，记得 </summary>
      
    
    
    
    <category term="学习" scheme="https://inkcodes.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="思考" scheme="https://inkcodes.com/tags/%E6%80%9D%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>所思——黄国平论文《致谢》为什么感人至深？</title>
    <link href="https://inkcodes.com/2021/06/15/%E6%89%80%E6%80%9D%E2%80%94%E2%80%94%E9%BB%84%E5%9B%BD%E5%B9%B3%E8%AE%BA%E6%96%87%E3%80%8A%E8%87%B4%E8%B0%A2%E3%80%8B%E4%B8%BA%E4%BB%80%E4%B9%88%E6%84%9F%E4%BA%BA%E8%87%B3%E6%B7%B1%EF%BC%9F/"/>
    <id>https://inkcodes.com/2021/06/15/%E6%89%80%E6%80%9D%E2%80%94%E2%80%94%E9%BB%84%E5%9B%BD%E5%B9%B3%E8%AE%BA%E6%96%87%E3%80%8A%E8%87%B4%E8%B0%A2%E3%80%8B%E4%B8%BA%E4%BB%80%E4%B9%88%E6%84%9F%E4%BA%BA%E8%87%B3%E6%B7%B1%EF%BC%9F/</id>
    <published>2021-06-15T04:11:50.000Z</published>
    <updated>2024-11-18T04:11:58.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>致谢</strong><br>&emsp;&emsp;——作者：黄国平<br>&emsp;&emsp;我走了很远的路，吃了很多的苦，才将这份博士学位论文送到你的面前。二十二载求学路，一路风雨泥泞，许多不容易。如梦一场，仿佛昨天一家人才团聚过。<br>&emsp;&emsp;出生在一个小山坳里，母亲在我十二岁时离家。父亲在家的日子不多，即便在我病得不能自己去医院的时候，也仅是留下勉强够治病的钱后又走了。我十七岁时，他因交通事故离世后，我哭得稀里糊涂，因为再得重病时没有谁来管我了。同年，和我住在一起的婆婆病故，真的无能为力。她照顾我十七年，下葬时却仅是一副薄薄的棺材。另一个家庭成员是老狗小花，为父亲和婆婆守过坟，后因我进城上高中而命不知何时何处所终。如兄长般的计算机启蒙老师邱浩没能看到我的大学录取通知书，对我照顾有加的师母也在不惑之前匆匆离开人世。每次回去看他们，这一座座坟茔都提示着生命的每一分钟都弥足珍贵。<br>&emsp;&emsp;人情冷暖，生离死别，固然让人痛苦与无奈，而贫穷则可能让人失去希望。家徒四壁，在煤油灯下写作业或者读书都是晚上最开心的事。如果下雨，保留节目就是用竹笋売塞瓦缝防漏雨。高中之前的主要经济来源是夜里抓黄鰭、周末钓鱼、养小猪崽和出租水牛。那些年里，方圆十公里的水田和小河都被我用脚测量过无数次。被狗和蛇追，半夜落水，因蓄电瓶进水而摸黑逃回家中；学费没交，黄鳍却被父亲偷卖了，然后买了肉和酒，都是难以避免的事。<br>&emsp;&emsp;人后的苦尚且还能克服，人前的尊严却无比脆弱。上课的时候，因拖欠学费而经常被老师叫出教室约谈。雨天湿漉着上课，屁股后面说不定还是泥。夏天光着脚走在滚烫的路上。冬天穿着破旧衣服打着寒颤穿过那条长长的过道领作业本。这些都可能成为压垮骆驼的最后一根稻草。如果不是考试后常能从主席台领奖金，顺便能贴一墙奖状满足最后的虚荣心，我可能早已放弃。<br>&emsp;&emsp;身处命运的漩涡，耗尽心力去争取那些可能本就是稀松平常的东西，每次转折都显得那么的身不由己。幸运的是，命运到底还有一丝怜惜。进入高中后，学校免了全部学杂费，胡叔叔一家帮助解决了生活费。进入大学后，计算机终于成了我一生的事业与希望，胃溃疡和胃出血也终与我作别。<br>&emsp;&emsp;从家出发坐大巴需要两个半小时才能到县城，一直盼着走出大山。从炬光乡小学、大寅镇中学、仪陇县中学、绵阳市南山中学，到重庆的西南大学，再到中科院自动化所，我也记不清有多少次因为现实的压力而觉得自己快扛不下去了。这一路，信念很简单，把书念下去，然后走出去，不枉活一世，世事难料，未来注定还会面对更为复杂的局面。但因为有了这些点点滴滴，我已经有勇气和耐心面对任何困难和挑战。理想不伟大，只愿年过半百，归来仍是少年，希望还有机会重新认识这个世界，不辜负这一生吃过的苦。最后如果还能做出点让别人生活更美好的事，那这辈子就赚了。</p></blockquote><p>&emsp;&emsp;黄国平的生活是苦难的。可你读他的文字却又觉得，在他平静、缓慢的叙述里，似乎你能看到——也许有过自卑和不甘，却又是一个“响鼓不用重锤”的人，人生走的每一步，都越来越明白方向的人，有过垂头丧气的时候，却也能感恩身边的人，重新迈出步伐。<br>&emsp;&emsp;黄国平说自己一路走的艰辛，故人长眠、阴阳相隔最能体现，年少时母亲离家，父亲能在重病时给自己送来治病的钱就走，其中冷暖黄国平没说，但每一位读者都可以想象这位父亲的形象：妻子没留一句话就走了，爷俩的生活都要由他顶着，心中苦闷给不了孩子优越的条件，只能尽到一个父亲的职责，勉强把孩子拉扯大就够了，至于嘘寒问暖可能是这个男人余下的一辈子都讲不出口的话，后文得知，捕来的黄鳝被父亲偷了拿去买酒，任何人都无法站在一个道德的高度去指责这位父亲——坚辛维持生计、砸锅卖铁供孩子上学读书，出人头地走向辉煌的故事并不总是发生，可黄国平、或者我们读者并不会因此觉得这位父亲没有感情，相反这就是生活，带着一种类似悲悯的眼光去看事情，一个非绝对理性人都需要发泄，需要倾诉的对象。年少丧父，一句“哭的稀里糊涂”带过，不再多言，黄国平将这些难以忘怀的往事轻轻一藏，这就是为什么读他这篇文章会觉得平静的原因，大悲大喜都隐于辞藻之间，只有无数个夜晚满含热泪，而后清晨爬到山顶去看日出，才会让一个人如此淡然。从心底讲他是敬重父亲的，即便这样一个男人有诸多缺点，不是高大宏伟的“模范父亲”形象，但在他的回忆里也是一个“英雄”，至少是个可敬的“枭雄”。婆婆那薄薄的棺材、启蒙老师的希冀、师母的关心、老狗小花，这些故人故事如今也只能在模糊的记忆里回望他们。</p><p>&emsp;&emsp;这一段，黄国平是这样结的尾：</p><blockquote><p>一座座坟茔都提示着生命的每一分钟都弥足珍贵</p></blockquote><p>&emsp;&emsp;文章读至此处，回忆戛然而止，突然想为黄国平竖个大拇指，大大地点个赞。廖廖数语让他自己，也让读者看到了希望，他没有就此伤感下去，每一个生命的离开都不应该沉沦悲伤，对于生者，每一个当下，秒针喀嗒走过那一瞬间才是可以把握的。下一整段黄国平在说苦，但他也在积极地找生活的甜。请看：</p><p>&emsp;&emsp;尽管生活如此不易，他仍在想“最开心的事”——煤油灯下读书的日子，狂风暴雨里为自己找的“保留节目”——竹笋売塞瓦缝防漏雨，还有那些“难以避免的事”——被狗追、抓黄鳝、养小猪崽、淌过水田与小河。诙谐幽默的语言不禁让人会心一笑，生活给你的剧本就是如此，老天只给了你煤油灯的道具，而不是聚光灯、只给了你屋漏偏缝连夜雨的舞台，而不是日光阳台、只给了你摸着石头过河的“长征”故事，而不是偏安一隅作演讲。演不演的好全在你如何把握剧本，多愁善感是一种演法，演出个柔弱心细的林黛玉；卧薪尝胆是一种演法，演出个破吴还乡的越王勾践；苦中作乐是一种演法，演出个仰天长笑的酒仙李白；悲喜不惊是一种演法，演出个闲庭信步的石三伢子。有的人究其一生都在寻找自己适合的剧本，而有的人早就走在赶考的路上。这个时代给你扔了一个剧本，就应该拍拍上面的灰，一笔一划认真作答才能交出令自己满意的答卷，国家如此，民族如此，宇宙里的一粒沙子也同样如此。</p><p>&emsp;&emsp;当然，生活不是孤立地与自己对话，修身还得齐家、平天下。人前尊严从来不是别人给的，黄国平无论以哪种心态面对生活的剧本，或淡然、或拼搏，总要面对湿漉漉的现实、面对他人的流言恶语。勤奋努力、拿下奖金、感恩他人便是他回应世界最好的方式，可以说，一个尽乎决绝的人才能面对苦难，在这里，我说的决绝是指严于律己、宽以待人，这是黄国平充实自己的“道”，穷人的孩子不一定是自卑内向的，也可能是自信独立的；多读书多看报、少玩手机多睡觉是黄国平提炼自己“术”，穷人的孩子也只有读书才能走出大山去，而当今的社会环境和风气，也真的能做到：知识改变命运。我经常思考，只有<strong>向上向善</strong>才是出路，人们不会总是对弱者善良，反而更倾向于施压，从校园霸凌到职场竞争，从弱国无外交到针锋相对的贸易战，是说“敲敲大锣歇掉算了”，还是像《亮剑》里的李云龙说“怎么样，想想办法干他一炮”，迥异的态度自然会形成分水岭。所以，奖学金、奖状、成绩成了黄国平借以慰藉“虚荣心”的营养剂，在那个年代，没有这些他也可能隐于市井茶坊中去。</p><p>&emsp;&emsp;这段文字是各种微博，朋友圈摘的最多的：</p><blockquote><p>这一路，信念很简单，把书念下去，然后走出去，不枉活一世，世事难料，未来注定还会面对更为复杂的局面。但因为有了这些点点滴滴，我已经有勇气和耐心面对任何困难和挑战。理想不伟大，只愿年过半百，归来仍是少年，希望还有机会重新认识这个世界，不辜负这一生吃过的苦。最后如果还能做出点让别人生活更美好的事，那这辈子就赚了。</p></blockquote><p>&emsp;&emsp;这段文字之所以写的那么深入人心，与他的经历分不开。没有吃过前面的苦就没有这些朴实感人的文字。大抵有四种：亲人别离、环境艰苦、生活拮据、求学之难，而这些是怎么跟“把书念下去，然后走出去，不枉活一世”联系起来的？——信念，信念在黄国平眼里是简单的，纯粹的，把书念下去就足够了。在人生的每一个阶段把握好当前的目标就足够了，别的东西，诸如物质、社交等等放在一边，信念才会变得简单而有力。</p><p>&emsp;&emsp;只愿年过半百，归来仍是少年。于不惑之年的长辈来说是一种难得，同时我也认为，20 岁之后的每个人生阶段都应该激励自己追逐少年时那种带些稚嫩却又纯粹的勇敢之心。很多人总结前半生，最苦最累的日子就是高考的时光，最开心最自由的就是象牙塔下的悠然自得，而我们，在经历了社会的“毒打”之后，还剩下什么？生而为人，我很抱歉的无奈？</p><p>&emsp;&emsp;前两天，我在 B 站看到这样一个视频：</p><p><a href="https://www.bilibili.com/video/BV1oQ4y1d7yT">小学生对线“网抑云”，分分钟秒杀，既扎心又暖心！</a></p><p>&emsp;&emsp;有网友到小学生的校门口进行随机采访，将生而为人，我很_____作为填空让学生答题，而学生们的回答真的让我感到欣慰和惊喜，因为他们填的都是“我很开心，我很自豪“，”我把梦想卖了，换成了理想“，简单纯粹到让每一个躺平的年轻人、成年人羡慕。而评论区有这样一个回复很有意思，我不去揣测他的想法如何，我更倾向于看到：当代青年人能摈弃躺文化、丧文化和佛系文化，值得一赞，理想永远年轻，生机勃勃。</p><p><img src="https://cdn.specialhua.top/blog/2021-06-15-151513.png#mirages-width=2180&mirages-height=828&mirages-cdn-type=1" srcset="/img/loading.gif" lazyload alt="截屏 2021-06-15 下午 11.14.49"></p><p>&emsp;&emsp;回到黄国平的文章，如果说少年时的懵懂还有缺陷，他是这么想的：那就再往前看一步吧——重新认识这个世界，摈弃多年来的偏见、傲慢、世俗、无知和复杂，去看看别人的生活，去理解那些曾经嗤之以鼻的事物，去脱下伪装审视自己，去多读些书再提升提升自我，去伸出援手帮一帮陌生的人。</p><p>&emsp;&emsp;最重要的。去把目光放到远处的风景、遥远的未来、那一定是有诗的远方，那里一定大有可为</p><p>&emsp;&emsp;——待到山花烂漫时，她在丛中笑</p><p><img src="https://cdn.specialhua.top/blog/2021-06-15-152429.jpg#mirages-width=3130&mirages-height=2075&mirages-cdn-type=1" srcset="/img/loading.gif" lazyload alt="kadri-karmo-ImzlPKenZu4-unsplash"></p><p><img src="https://cdn.specialhua.top/blog/2021-06-15-152445.jpg#mirages-width=3931&mirages-height=2936&mirages-cdn-type=1" srcset="/img/loading.gif" lazyload alt="himanshu-singh-gurjar-iSi02D_Qx_w-unsplash"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;致谢&lt;/strong&gt;&lt;br&gt;&amp;emsp;&amp;emsp;——作者：黄国平&lt;br&gt;&amp;emsp;&amp;emsp;我走了很远的路，吃了很多的苦，才将这份博士学位论文送到你的面前。二十二载求学路，一路风雨泥泞，许多不容易。如梦一场，仿佛昨天一家人</summary>
      
    
    
    
    <category term="生活" scheme="https://inkcodes.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    <category term="所思" scheme="https://inkcodes.com/categories/%E7%94%9F%E6%B4%BB/%E6%89%80%E6%80%9D/"/>
    
    
    <category term="随想" scheme="https://inkcodes.com/tags/%E9%9A%8F%E6%83%B3/"/>
    
    <category term="思考" scheme="https://inkcodes.com/tags/%E6%80%9D%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>Tg收发微信——EFB2（官方安装方法）</title>
    <link href="https://inkcodes.com/2021/04/02/Tg%E6%94%B6%E5%8F%91%E5%BE%AE%E4%BF%A1%E2%80%94%E2%80%94EFB2%EF%BC%88%E5%AE%98%E6%96%B9%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%EF%BC%89/"/>
    <id>https://inkcodes.com/2021/04/02/Tg%E6%94%B6%E5%8F%91%E5%BE%AE%E4%BF%A1%E2%80%94%E2%80%94EFB2%EF%BC%88%E5%AE%98%E6%96%B9%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%EF%BC%89/</id>
    <published>2021-04-01T16:11:07.000Z</published>
    <updated>2024-11-13T16:11:37.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一些话"><a href="#一些话" class="headerlink" title="一些话"></a>一些话</h3><p>终究还是要感谢开发、维护的作者、贡献者：<br>Eana Hufwe<br><img src="https://cdn.specialhua.top/blog/2022-03-16-respect.jpeg-pic" srcset="/img/loading.gif" lazyload alt="respect!!!"></p><p><strong>很高兴自己的文章能够上 Google 搜索的前几名~请留意本文末的“最后编辑时间”，如无意外，截至编辑日时 EFB 项目依然能稳定运行。我会时不时更新一些内容，以便教程能够更清晰、更详细。如果有朋友联系我遇到了什么问题，是如何解决的，我尽量会更新到 <code>6.3 一些我遇到的问题、报错</code> 的内容里，以便后来者能够参考。</strong></p><p>我习惯于先写作用，优缺点，再写相关教程，方便你快速地了解，并决定到底搭不搭建。<br>另外，我讨厌微信，<strong>小而美</strong>，<strong>拉近人与人的距离</strong>，——这些，跟它都毫不搭边，我们太多人被裹挟着使用了它，如果有一天微信不再是应用市场“必装软件”，那该多好啊。。。我所需要的，不过是想念某个朋友的时候，能跟他聊上两句就够了，我不需要那么多的工作群、朋友群、炫耀&#x2F;广告圈。。。</p><p>我常说，我们都是 Wechat OS 的逃离者，很怀念那个只能一条打几十字的短信年代，它给了我们很多思考的时间、措辞的时间、想念的时间。<br>——而这些，我们终究是没法再踏进历史的河流了。</p><h3 id="1-关于以前写的一篇"><a href="#1-关于以前写的一篇" class="headerlink" title="1.关于以前写的一篇"></a>1.关于以前写的一篇</h3><p>上一篇文章：<a href="https://specialhua.top/20190910/cid=8.html">利用 Telegram 收发微信——EFB2.0</a> 中使用的是 Docker 方法安装，其实也没有多么的方便，而且由于今晚帮一位哥们安装，走 docker 安了一遍到最后报错如下</p><p><img src="https://cdn.specialhua.top/picgo/%E8%80%81%E6%96%B9%E6%B3%95%E6%8A%A5%E9%94%99.png#mirages-width=619&mirages-height=103&mirages-cdn-type=1" srcset="/img/loading.gif" lazyload alt="老方法报错"></p><p>前面一堆报错，最后关键是：</p><blockquote><p>“catbaron.sticker2img”is not foung</p></blockquote><p>搜索后，解决方案也有，戳这：<a href="%5BGitHub%20-%20catbaron0/efb-sticker2img-middleware:%20Convert%20stickers%20to%20image%5D(https://github.com/catbaron0/efb-sticker2img-middleware)">Sticker2Img: A middleware for EFB</a>，但是前一篇采用 docker 方式安装后，再进行上面 github 里的操作仍然不行。于是干脆直接找相关官方文档来看，毕竟也好长时间没折腾了。其实整个过程意外的简单，而且后续更新升级也容易。</p><p>一些简介性内容就直接搬以前的了。优点和缺点我会讲的更详细一些。</p><h3 id="2-简介"><a href="#2-简介" class="headerlink" title="2.简介"></a>2.简介</h3><p>简单来说，收发原理是：<br><strong>Tg 端消息——Telegram bot —— EFB ——微信网页版 ≈ 微信——微信消息</strong><br>TG 与微信之间并无联系，但使用了 <em>EFB 项目（2.1）</em>，<em>TG Bot（2.2）</em>，<em>微信网页版（2.3）</em>，即可实现互通</p><p>有关更详细的工作原理，请查看 <a href="https://ehforwarderbot.readthedocs.io/zh_CN/latest/guide/walkthrough.html" title="原理">EFB 工作原理</a>。</p><h4 id="2-1-EH-Forwarder-Bot（EFB）"><a href="#2-1-EH-Forwarder-Bot（EFB）" class="headerlink" title="2.1 EH Forwarder Bot（EFB）"></a>2.1 EH Forwarder Bot（EFB）</h4><p>EH Forwarder Bot（EFB） 是一个可扩展的开源聊天平台隧道 Bot 框架，目前支持在 Telegram 上收发微信、QQ、Facebook Message 信息，支持文字、语音、图片、视频、表情互通，虽有一些功能限制但可用性良好。</p><h4 id="2-2-TG-Bot"><a href="#2-2-TG-Bot" class="headerlink" title="2.2 TG Bot"></a>2.2 TG Bot</h4><p>你可以把 Telegram bot 理解为 QQ 群中某些机器人，在群聊中他能实现入群审核、自动回复等，只不过我们要自己创建机器人，并赋予它一些配合 EFB 使用的指令，就可以使用啦（很简单，不信你往下看）。<br>我们要做的就是创建 Bot，并把他绑定到 Telegram 自建的各种群组中，比如以对方名称（私人）、以微信群名、以公众号名建立的群组，EFB 负责不停的把这些消息通过 Telegram 群组 id 和微信对话作一一绑定，并收发信息展现在 Telegram 群组中。</p><h4 id="2-3-微信网页版"><a href="#2-3-微信网页版" class="headerlink" title="2.3 微信网页版"></a>2.3 微信网页版</h4><p>由于手机 APP 及 PC 桌面版的大量使用，现在已经很少有人使用网页版了<br>本项目需要调用微信网页版。</p><p>[tip type&#x3D;”error” title&#x3D;”警告如下！警告如下！警告如下！（重要的事说三遍！）”]</p><p>微信会对使用第三方客户端登录微信网页版的用户实行封禁，就是无法再使用网页版登录网页版微信！根据经验微信账号较老的用户封禁率似乎不高。</p><p>[&#x2F;tip]</p><p>PS：我的微信号大概是 2013 年创建的，目前使用 EFB 近四年无封禁</p><hr><p>使用或考虑购买 VPS 以前，首先尝试登录<a href="https://wx.qq.com/">微信网页版</a>，扫码看是否会出现以下提示：</p><p><img src="https://cdn.specialhua.top/picgo/20210401230727.png#mirages-width=2143&mirages-height=364&mirages-cdn-type=1" srcset="/img/loading.gif" lazyload alt="网页封禁"></p><p>否则 ，当你买好 VPS，弄了半天，到最后终于扫码成功时出现以下提示，直接 GG（这也是我帮老哥鼓捣，自己最后折腾了好几次基础环境后，封禁提示才看到）</p><p><img src="https://cdn.specialhua.top/picgo/20210401231143.png#mirages-width=907&mirages-height=301&mirages-cdn-type=1" srcset="/img/loading.gif" lazyload alt="最后封禁"></p><hr><p>因此，网页版微信不同于 windows、mac、android 平板，如网页版被封禁，请默默关掉本页，并说一句：<strong>张小龙，sm 玩意儿</strong></p><h5 id="2021-12-26-解封方法"><a href="#2021-12-26-解封方法" class="headerlink" title="2021-12-26 解封方法"></a>2021-12-26 解封方法</h5><p><del>此方法预计将急速失效</del>。（此方法自 2022 年初就已失效，贴在这里看以后会不会生效吧）<br>微信网页版解封方法：<br>先用新上线的网页版文件传输助手 <a href="https://filehelper.weixin.qq.com/">https://filehelper.weixin.qq.com/</a> 随便传个文件。<br>再去登录 <a href="https://wx.qq.com/">https://wx.qq.com/</a> 就会发现微信网页版可以正常登录了。<br>亲测有效，之前登不上微信网页版要抓住这次机会。</p><p>消息来源：<br><a href="https://hostloc.com/thread-946732-1-2.html">https://hostloc.com/thread-946732-1-2.html</a></p><hr><h3 id="3-EFB-能实现的功能、优点、缺点"><a href="#3-EFB-能实现的功能、优点、缺点" class="headerlink" title="3.EFB 能实现的功能、优点、缺点"></a>3.EFB 能实现的功能、优点、缺点</h3><p>综合考虑微信的功能，对比 EFB 项目，其功能及优缺点如下：</p><h4 id="3-1-基础功能"><a href="#3-1-基础功能" class="headerlink" title="3.1 基础功能"></a>3.1 基础功能</h4><p>1.<strong>文字消息的收发</strong><br>2.<strong>图片的收发</strong><br>3.<strong>视频的读取（从 tg 发视频，对方收到的是文件）</strong><br>4.<strong>语音的接收（从 tg 发语音，对方收到的是文件）</strong><br>5.<strong>传送文件（大于 200M 文件未尝试过）</strong></p><h4 id="3-2-优点"><a href="#3-2-优点" class="headerlink" title="3.2 优点"></a>3.2 优点</h4><p>1.<strong>消息云同步，文字，语音，图片，视频，发送的链接，文件都可以永久保存在 tg 云端，这个，可是好的太多！太多！！太多！！！了，以微信的尿性，不占用你 10 个 G 内存说不过去。任何时候你都可以去翻翻某个群、某个好友以前给你发过的东西。（前女友&#x2F;男友在哪天几点几分伤你心都可以拿出来算旧账@(你懂的)）</strong></p><p>同时，相关信息是被标签所分类的。</p><p><strong>对于查找文件——超级方便，即便你没在微信客户端保存，都会被记录</strong></p><p><strong>对于微信 OS 动不动就图片已失效——完美复刻，再也不怕领导发给你的图片式工作安排丢了 ，高清大图你值得拥有。</strong></p><p><strong>对于历史链接——提供预览，再也不用面对看不懂的域名，摸不着头脑。</strong></p><p><strong>对于 GIFs——搞笑表情包是谁发的，立马就能定位。</strong></p><p><img src="https://cdn.specialhua.top/blog/2022-03-17-20210401233912.png-pic#pic_left" srcset="/img/loading.gif" lazyload alt="消息云端"></p><p>2.<strong>消息几乎无延迟，对比 Gcmformojo<del>（一款曾经代替微信&#x2F;qq OS 的应用，已成历史）</del>，tg 发消息很快，没有卡顿，就像你正常聊天一样，也几乎没有消息发送失败的情况（除非网络抽风，服务器被打&#x2F;被墙）。</strong></p><p>3.<strong>耗电，明显优于微信毒瘤。tg 自带 Gcm&#x2F;IOS 同样支持消息推送，如果你需要，可以不留 tg 后台，由 Gcm&#x2F;IOS push 拉起通知。</strong></p><p>4.<strong>无需强制要求挂梯，以往 Gcmformojo 有的地区需要挂飞机才能收发，而 tg 自带一个代理功能，正常使用 TG 即可通过其内嵌代理收发微信。</strong></p><p>5.<strong>TG 支持的消息功能，将会“镜像”的同步于微信，比如延迟、定时发送消息的功能。</strong></p><p><img src="https://cdn.specialhua.top/blog/2022-03-17-20210401232305.png-pic" srcset="/img/loading.gif" lazyload alt="定时发送"></p><p>6.<strong>tg 表情包支持，另外注意不要发送涉黄、政治敏感的表情包，避免被微信屏蔽或封禁</strong></p><p><img src="https://cdn.specialhua.top/blog/2022-03-17-20210401232442.png-pic" srcset="/img/loading.gif" lazyload alt="贴纸"></p><p>7.<strong>公众号信息也能推送，而且 TG 自带应用内浏览器，也能方便的查看公众号推送的文章。支持批量绑定公众号至某一个群组，并设为静音，支持单设某一个或几个公众号的群组进行单独推送。</strong></p><p>8.<strong>多客户端支持，tg 支持很多客户端，如 mac os、ios、andorid、windows、linux，你完全可以用于取代微信各种版本。而且，tg 轻量且速度快。</strong></p><p>9.<strong>分组功能，比如工作群可以全部收到 TG 的文件夹功能下，通过不同选项标签直接展示所有工作群消息。</strong></p><p>10.<strong>聚合聊天，emmm @(勉强)如果你经常水在各种 tg 群、Tg 频道、新闻、科普、资源等等，要转发个什么东西给微信的好朋友看，随手即可转达。</strong></p><p>11.<strong>消息静音设置，这可太方便了，某些特别吵的群，直接不通知，而某些群，需要午休的时候为了避免打扰到自己， 可以选择 tg 的“暂时屏蔽通知”功能，比微信简单粗暴的通知或不通知好太多了。</strong></p><p><img src="https://cdn.specialhua.top/blog/2022-03-17-20210401233959.png-pic" srcset="/img/loading.gif" lazyload alt="自定义通知"></p><p>12.<strong>硬核物理多开。微信的多开更多的仅限于移动端 +pc 端，或者你用自签名的方式在一台设备上多开 N 个微信账号，对于同一个账号，tg 是支持同账号多设备的，这意味着你可以在多个设备上同时登录同一个 tg 账号，然后不同设备都可以向微信端发送消息。双持，三持，N 持的兄弟就很舒服了。举个例子，你主设备是 ios，同时装 tg 和微信。微信用来刷刷朋友圈，备用机是一台安卓，只装一个 tg，偶尔拿着外出也能收发微信。</strong></p><p>13.<strong>相关中间件支持，例如在 Telegram 上实现语音转文字、Telegram 历史消息搜索、表情包插件等。</strong></p><p>14.<strong>“买一送一”的 Bug 功能——防撤回，以及撤回自己的消息（同样受限于 2min），呃，你的领导深夜喝醉在大群里给老婆发的文字、语音、照片啥的，呃。。。你可以顺手转发到自己的收藏里。。。</strong></p><p>15.<strong>Bug 级“微信”换皮，新春限定？VVIP？NO…你只是逃离了微信 OS 而已。使用 4 年下来，被问的最多的便是“你这什么骚版本的微信？怎么跟我的不一样”，你要说装 B 吧，也是，更多的， TG 支持太多的外观，挺赏心悦目的。</strong></p><h4 id="3-3-缺点"><a href="#3-3-缺点" class="headerlink" title="3.3 缺点"></a>3.3 缺点</h4><p>1.语音通话、视频通话不支持，原因比较简单，微信利用自身 APP 实现，当然不能放到 TG 上实现，但是 TG 会发送一段文字，如：</p><blockquote><p>微信团队: (不支持)<br>[Unsupported message, please check your phone.]</p></blockquote><p>接收到这样的信息请及时打开手机微信查看是否有通话消息，有时还是会遗漏语音通话消息的。</p><p>2.默认所有消息会通过你创建的 TG bot 发送给你，也就是你的好友 A,B,C 的消息都通过一个聊天窗口发送给你，刚开始会比较乱，但是通过 TG 的群组功能，可实现消息分流，但需要你手动创建群组 A，群组 B，群组 C 来分流消息。</p><p>3.对方发来的定位信息能显示具体的地址和地图简略信息，但因为我国地图算法的加密，google 显示的当然不准确。</p><p>4.朋友圈、视频号、游戏——不支持，这年头，正经人谁看广告圈，谁在朋友圈发布自己的负能量，刚好减少自己浪费时间的时光~反倒是优点。</p><p>5.企业微信消息，如果你不把该群迁移到企业微信中，正常推送，没有区别。相反，如果你在企业微信里迁移过该群，则消息不再推送到 Tg。两者兼用的朋友，反倒是优点。</p><hr><h3 id="4-准备工作"><a href="#4-准备工作" class="headerlink" title="4.准备工作"></a>4.准备工作</h3><p>1.一台能访问国外网站的 VPS 服务器，即要连通 Telegram（我目前在用 UFOVPS，稳定，<del>香港双向 cn2 GIA</del>(2021-8-20 在用他家的 香港 BGP，最近他家的 CN2 一直被打)目前支持 国内支付渠道，如果有需要的可以用：**<a href="https://www.ufovps.com/aff.php?aff=435">我的推广链注册</a>**）（它是为了吸引用户，通过分享注册链的方式，如果你用我的链注册并充值 10 元以上，使用 30 天不退款，我会有一定佣金。算是对我的支持吧~）</p><p>2.Android 手机搭建需要 Juice ssh 这款软件，如何利用 juicessh 连接服务器在 <code> 小白搭建心得(2017Gcmformojo).pdf</code> 文档靠前部分（使用公钥连接，目前 android 相关 ssh 软件应很多，这里仅供参考）</p><table><thead><tr><th>名称</th><th>下载地址</th><th>密码</th></tr></thead><tbody><tr><td>小白心得.pdf</td><td><a href="https://pan.specialhua.top/s/aXc8">https://pan.specialhua.top/s/aXc8</a><br /><a href="https://pan.baidu.com/s/1E2BvTKdGej0lSlkEwNHO_g">https://pan.baidu.com/s/1E2BvTKdGej0lSlkEwNHO_g</a></td><td>6666<br />sm1p</td></tr><tr><td>juicessh.apk</td><td><a href="https://pan.specialhua.top/s/LWUq">https://pan.specialhua.top/s/LWUq</a><br /><a href="https://pan.baidu.com/s/1bCGWe6">https://pan.baidu.com/s/1bCGWe6</a></td><td>6666<br />xhg2</td></tr></tbody></table><p>3.IOS 搭建，app store 搜索 Termius，免费就够用。</p><p>4.windows 搭建需要 xshell 或 putty 等，请自行上网搜索。</p><p>5.Telegram，主体软件。Android play store 或 apkpure 或 IOS app store（非国区账号）</p><p>6.系统使用 Ubuntu 20.04 x64</p><h3 id="5-主体教程"><a href="#5-主体教程" class="headerlink" title="5.主体教程"></a>5.主体教程</h3><p><strong>对于在 ssh 客户端中执行的 linux 代码，有些我会用形如 <code>sudo su</code> 这样的格式来表达（夹穿插在文字叙述部分），而为了保证美观，大部分代码（在换行后，或者说独立于文字叙述的）我会使用下面第一种“引用”样式。</strong><br><strong>而需要在 nano、vim 等编辑界面编辑的内容，我会使用下面第二种“代码框”样式来示范需要填写的内容。</strong></p><blockquote><p><code>hello word!</code><br><code>这里并没有1，2，3，4的行号，是一句一句执行的代码</code></p></blockquote><div class="highlight-wrap" data-rel="Applescript"><figure class="iseeu highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs applescript">hello <span class="hljs-built_in">word</span>!<br>这里有<span class="hljs-number">1</span>，<span class="hljs-number">2</span>，<span class="hljs-number">3</span>，<span class="hljs-number">4</span>的行号<br></code></pre></td></tr></table></figure></div><p>参考的文档：</p><p><a href="https://ehforwarderbot.readthedocs.io/en/latest/">官方文档</a></p><p><a href="https://blog.shzxm.com/2020/12/31/efb/">ehForwarderBot 遇到的那些坑</a>，作者的<a href="https://blog.shzxm.com/">博客</a>，感谢这位大佬，很详细了，<strong>安装过程几乎都是搬运的他的，在他的原文里还指出了大量官方插件等文档。</strong></p><hr><h4 id="5-1-配置-TG-机器人阶段"><a href="#5-1-配置-TG-机器人阶段" class="headerlink" title="5.1 配置 TG 机器人阶段"></a>5.1 配置 TG 机器人阶段</h4><h5 id="5-1-1-获取-Bot-Token"><a href="#5-1-1-获取-Bot-Token" class="headerlink" title="5.1.1 获取 Bot Token"></a>5.1.1 获取 Bot Token</h5><p>1.在 Telegram 里, 对 @botfather 说话: &#x2F;newbot<br>2.按照要求给 Bot 取名<br>3.获取 Bot Token 安全原因: Token 必须保密（这串 token 要记好，<strong>待会要用</strong>）<br>4.允许 Bot 读取非指令信息，对 @botfather 说话: &#x2F;setprivacy, 选择 disable<br>5.允许将 Bot 添加进群组，对 @botfather 说话: &#x2F;setjoingroups, 选择 enable<br>6.允许 Bot 提供指令列表，对 @botfather 说话: &#x2F;setcommands, 输入以下内容</p><div class="highlight-wrap" data-rel="Erlang"><figure class="iseeu highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs erlang">help - 显示命令列表.<br>link - 将远程会话绑定到 Telegram 群组<br>chat - 生成会话头<br>recog - 回复语音消息以进行识别<br>info - 显示当前 Telegram 聊天的信息.<br>unlink_all - 将所有远程会话从 Telegram 群组解绑.<br>update_info - 更新群组名称和头像<br>extra - 获取更多功能<br></code></pre></td></tr></table></figure></div><p>(复制以上内容一次性发给 botfather)</p><h5 id="5-1-2-获取-Telegram-账户-ID"><a href="#5-1-2-获取-Telegram-账户-ID" class="headerlink" title="5.1.2 获取 Telegram 账户 ID"></a>5.1.2 获取 Telegram 账户 ID</h5><p>再和另外一个机器人 @get_id_bot 对话（也是搜索得到这个机器人），点击 start 即可获得你的 Telegram ID，一串数字（Chat ID）。</p><p>至此，Telegram 的配置完成，我们得到两个重要东西：<strong>token、Telegram ID</strong>（<strong>待会要用</strong>）</p><p>形如：</p><blockquote><p>token——123456789:ABCDEFG1ABCDEFG1ABCDEFG1</p><p>Telegram ID——987654321</p></blockquote><h4 id="5-2VPS-搭建"><a href="#5-2VPS-搭建" class="headerlink" title="5.2VPS 搭建"></a>5.2VPS 搭建</h4><h5 id="5-2-1-依赖环境安装"><a href="#5-2-1-依赖环境安装" class="headerlink" title="5.2.1 依赖环境安装"></a>5.2.1 依赖环境安装</h5><blockquote><p><code>sudo su</code><br><code>apt full-upgrade -y</code><br><code>apt install python3 python3-pip python3-setuptools python3-yaml ffmpeg  libcairo2-dev  libcairo2 nano -y</code><br><code>python3 -m pip install --upgrade pip</code><br><code>python3 -m pip install --upgrade Pillow</code></p></blockquote><h5 id="5-2-2-安装-efb-主体"><a href="#5-2-2-安装-efb-主体" class="headerlink" title="5.2.2 安装 efb 主体"></a>5.2.2 安装 efb 主体</h5><blockquote><p><code>pip3 install ehforwarderbot</code><br><code>pip3 install efb-telegram-master </code><br><code>pip3 install efb-wechat-slave</code><br><code>pip3 install --upgrade Pillow</code></p></blockquote><h5 id="5-2-3-贴纸插件"><a href="#5-2-3-贴纸插件" class="headerlink" title="5.2.3 贴纸插件"></a>5.2.3 贴纸插件</h5><p>确保你安装成功 libcairo2，把 tg 的贴纸发送到微信</p><blockquote><p><code>pip3 install &quot;efb-telegram-master[tgs]&quot;</code></p></blockquote><h4 id="5-3-配置文件"><a href="#5-3-配置文件" class="headerlink" title="5.3 配置文件"></a>5.3 配置文件</h4><p><code>mkdir</code> 是新建文件夹语法，nano 保存退出是<kbd>ctrl</kbd>+<kbd>x</kbd></p><p>根目录下：</p><blockquote><p><code>mkdir -p /root/.ehforwarderbot/profiles/default/</code></p></blockquote><blockquote><p><code>mkdir -p /root/.ehforwarderbot/profiles/default/blueset.telegram</code></p></blockquote><h5 id="5-3-1-配置-default-config-yaml"><a href="#5-3-1-配置-default-config-yaml" class="headerlink" title="5.3.1 配置 default&#x2F;config.yaml"></a>5.3.1 配置 default&#x2F;config.yaml</h5><p>上面第一行代码，创建了 <code>~default/</code> 目录，还是在根目录下，使用 nano 编辑并粘贴以下内容：</p><blockquote><p><code>nano /root/.ehforwarderbot/profiles/default/config.yaml</code></p></blockquote><div class="highlight-wrap" data-rel="Nestedtext"><figure class="iseeu highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">master_channel</span><span class="hljs-punctuation">:</span> <span class="hljs-string">blueset.telegram</span><br><span class="hljs-attribute">slave_channels</span><span class="hljs-punctuation">:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">blueset.wechat</span><br><span class="hljs-attribute">flags</span><span class="hljs-punctuation">: </span><br>  <span class="hljs-attribute">delete_on_edit</span><span class="hljs-punctuation">:</span> <span class="hljs-string">true</span><br></code></pre></td></tr></table></figure></div><p><strong>（注意格式！有的手机 juichssh 粘贴进去以后并不会分段，或首字母缺失）</strong></p><h5 id="5-3-2-配置-default-blueset-telegram-config-yaml"><a href="#5-3-2-配置-default-blueset-telegram-config-yaml" class="headerlink" title="5.3.2 配置 default&#x2F;blueset.telegram&#x2F;config.yaml"></a>5.3.2 配置 default&#x2F;blueset.telegram&#x2F;config.yaml</h5><p>上面第二行代码，创建了 <code>~blueset.telegram</code> 目录，还是在根目录下使用 nano 编辑、替换自己的 <code>token</code>,<code>telegram id</code> 粘贴以下内容：</p><blockquote><p><code>nano /root/.ehforwarderbot/profiles/default/blueset.telegram/config.yaml</code></p></blockquote><div class="highlight-wrap" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">token:</span> <span class="hljs-string">&quot;&quot;</span> <span class="hljs-comment">#在&quot;&quot;中间 填入你之前找botfather申请的api</span><br><span class="hljs-attr">admins:</span><br><span class="hljs-bullet">-</span> <span class="hljs-number">1234</span> <span class="hljs-comment">#把数字修改为你的个人 telegram id 在上方获取过</span><br><span class="hljs-comment">#- 1279136259 #如果,想要多个账号使用同一个微信,可在这里加入第二个id或者多个id,去掉开头的#</span><br><span class="hljs-attr">flags:</span><br>  <span class="hljs-attr">send_image_as_file:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-comment">#将所有图像消息作为文件发送,以防止主动报文的图像压缩.需要更多的流量,可以开启,改为ture</span><br>  <span class="hljs-attr">animated_stickers:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-comment">#启用对动画贴纸的实验性支持启用对动画贴纸的实验性支持,该依赖已包含在教程依赖</span><br>  <span class="hljs-attr">default_media_prompt:</span> <span class="hljs-string">text</span><br>  <span class="hljs-comment">#图片/视频/文件消息没有标题时的占位符文本.</span><br></code></pre></td></tr></table></figure></div><p>一个样例：</p><div class="highlight-wrap" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">token:</span> <span class="hljs-string">&quot;123456789:ABCDEFG1ABCDEFG1ABCDEFG1&quot;</span> <br><span class="hljs-attr">admins:</span><br><span class="hljs-bullet">-</span> <span class="hljs-number">123456789</span><br><span class="hljs-attr">flags:</span><br>  <span class="hljs-attr">send_image_as_file:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">animated_stickers:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">default_media_prompt:</span> <span class="hljs-string">text</span><br></code></pre></td></tr></table></figure></div><p><strong>（注意格式！有的手机 juichssh 粘贴进去以后并不会分段，注意首字母可能缺失）</strong><br><strong>（<code>send_image_as_file</code> 字段我建议使用 false，不然所有图片文件都将以文件形式呈现，使用 false 的话，除非对方选择以原图发送，否则就是正常的图片）</strong></p><h4 id="5-3-启动"><a href="#5-3-启动" class="headerlink" title="5.3 启动"></a>5.3 启动</h4><p>根目录下：</p><blockquote><p><code>ehforwarderbot</code></p></blockquote><p>此时，扫码要使用手机后置摄像头，截图并在相册里选择二维码的方式会遭遇微信提示不能登录</p><p>如果此时你已成功登录，在你的 xshell 等终端工具关闭以后，EFB 自然掉线，因为没有做进程守护，此时请看下面的 6.3.2 的内容。</p><h3 id="6-使用你的-EFB-机器人"><a href="#6-使用你的-EFB-机器人" class="headerlink" title="6.使用你的 EFB 机器人"></a>6.使用你的 EFB 机器人</h3><h4 id="6-1-简单用起来吧"><a href="#6-1-简单用起来吧" class="headerlink" title="6.1 简单用起来吧"></a>6.1 简单用起来吧</h4><p>此时别关掉你的 ssh 客户端哦，一关掉 efb 进程就被结束了。这部分内容你可以当作成功运行 EFB 后体验一下具体的操作，如果要关掉 ssh 客户端还能继续使用的话，请看 <code>6.2.1 后台</code> 部分。<br>和你之前申请的 bot 对话 发送 <code>/start</code></p><p>其余常用命令：</p><p><code>/chat</code> 为 和谁对话</p><blockquote><p>若是在 Bot 中对方发来消息，在 Telegram 中回复该对话（Android 应为长按该消息，IOS 左滑该消息），可以直接回复给该人。在新版本 EFB 中，回复过该人消息一次，接下来短期内的连续对话，不用每一条都一一“引用”该消息，直接对你的 Bot 对话，所有消息都将发送给该人。</p></blockquote><p><code>/link</code> 为 绑定对话到某个群组</p><blockquote><p>下面使用一个例子来说明（假设你有一名叫李 AB 的好友）</p><ol><li>首先在 Telegram 中创建一个新的群组，就用李 AB 这个名字，然后将你的机器人邀请进来，群组创建完毕。</li><li>回到你的机器人对话中，输入 &#x2F;link 李 A（不必输全名，机器人会检索含有此关键字的所有好友，然后选中李 AB，选择 link，选择你刚刚创建的 梁 AB 这个群组，成功后，以后这个叫李 AB 的好友发来的信息不会在机器人那显示了，而是在这个群组）</li><li>常聊的几个人、工作群、公众号、不常看的公众号单独建 TG 群，使消息分流，其余不常用的，使用机器人窗口接收</li></ol></blockquote><p><code>/rm</code> 为 撤回某条消息，和微信的规则是一样的，2 分钟内都可以。具体使用为回复要撤回的内容并发送 <code>/rm</code><br><code>/extra</code> 主要为掉线重新登录 或者 强制刷新对话列表使用<br><code>/update_info</code> 为当前的群组更新微信信息，在群组中使用，可以更新群聊头像为群组成员，群组名称为微信群聊名称</p><h4 id="6-2-后台、更新"><a href="#6-2-后台、更新" class="headerlink" title="6.2 后台、更新"></a>6.2 后台、更新</h4><h5 id="6-2-1-后台"><a href="#6-2-1-后台" class="headerlink" title="6.2.1 后台"></a>6.2.1 后台</h5><p>进程守护 可以确保 efb 在后台运行</p><blockquote><p><code>cd /etc/systemd/system/</code><br><code>nano efb.service</code></p></blockquote><p>进入编辑界面后 复制粘贴下列代码 <code>ctrl+x</code> 保存退出</p><div class="highlight-wrap" data-rel="Ini"><figure class="iseeu highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Unit]</span><br><span class="hljs-attr">Description</span>=ehforwarderbot<br><span class="hljs-attr">After</span>=network.target<br><br><span class="hljs-section">[Install]</span><br><span class="hljs-attr">WantedBy</span>=multi-user.target<br><br><span class="hljs-section">[Service]</span><br><span class="hljs-attr">Type</span>=simple<br><span class="hljs-attr">WorkingDirectory</span>=/root<br><span class="hljs-attr">ExecStart</span>=/usr/local/bin/ehforwarderbot<br><span class="hljs-attr">Restart</span>=always<br></code></pre></td></tr></table></figure></div><p>接着 输入以下代码启动 efb，并开机自启 efb</p><blockquote><p>1.重新加载进程守护<br><code>systemctl daemon-reload</code><br>2.进程守护 启动 efb<br><code>systemctl start efb.service</code><br>3.打印日志，此时不会直接显示二维码，而需要你打开 https 的链接，进行扫码登录<br><code>journalctl -f -u efb.service</code><br>4.进程守护 开机自启 efb<br><code>systemctl enable efb.service</code></p></blockquote><p>另外的，这里我把常用的 <code>systemctl</code> 命令合集放在这里，方便你随时查看。<br>停止、启动、关闭自启、查看状态、打印后台日志，可以使用以下这些代码（这里为保持美观，我只是使用代码框包裹住了这些命令）</p><blockquote><div class="highlight-wrap" data-rel="Nsis"><figure class="iseeu highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs nsis"><span class="hljs-comment">#进程守护 停止efb</span><br><span class="hljs-params">system</span>ctl stop efb.service<br><span class="hljs-comment">#进程守护 启动efb</span><br><span class="hljs-params">system</span>ctl start efb.service<br><span class="hljs-comment">#进程守护 关闭开机自启efb</span><br><span class="hljs-params">system</span>ctl disable efb.service<br><span class="hljs-comment">#查看当前 efb 状态</span><br><span class="hljs-params">system</span>ctl status efb.service<br><span class="hljs-comment">#实时查看 efb 守护日志</span><br>journalctl -f -u efb.service<br></code></pre></td></tr></table></figure></div></blockquote><h5 id="6-2-2-更新"><a href="#6-2-2-更新" class="headerlink" title="6.2.2 更新"></a>6.2.2 更新</h5><blockquote><p><code>pip3 install --upgrade ehforwarderbot</code><br><code>pip3 install --upgrade efb-telegram-master</code><br><code>pip3 install --upgrade efb-wechat-slave</code></p></blockquote><h4 id="6-3-一些我遇到的问题、报错"><a href="#6-3-一些我遇到的问题、报错" class="headerlink" title="6.3 一些我遇到的问题、报错"></a>6.3 一些我遇到的问题、报错</h4><h5 id="6-3-1-Cannot-uninstall-‘PyYAML’"><a href="#6-3-1-Cannot-uninstall-‘PyYAML’" class="headerlink" title="6.3.1 Cannot uninstall ‘PyYAML’"></a>6.3.1 Cannot uninstall ‘PyYAML’</h5><p>在帮别人安装时，<code>ehforwarderbot</code> 后，出现报错如下：</p><div class="highlight-wrap" data-rel="Awk"><figure class="iseeu highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs awk">root@xxx:~<span class="hljs-comment"># ehforwarderbot</span><br>……省略……<br>Traceback (most recent call last):<br>  File <span class="hljs-string">&quot;/usr/local/bin/ehforwarderbot&quot;</span>, line <span class="hljs-number">8</span>, <span class="hljs-keyword">in</span> &lt;module&gt;<br>    sys.<span class="hljs-keyword">exit</span>(main())<br>  File <span class="hljs-string">&quot;/usr/local/lib/python3.6/dist-packages/ehforwarderbot/__main__.py&quot;</span>, line <span class="hljs-number">330</span>, <span class="hljs-keyword">in</span> main<br>    conf = config.load_config()<br>  File <span class="hljs-string">&quot;/usr/local/lib/python3.6/dist-packages/ehforwarderbot/config.py&quot;</span>, line <span class="hljs-number">61</span>, <span class="hljs-keyword">in</span> load_config<br>    raise ValueError(_(<span class="hljs-string">&quot;\&quot;&#123;&#125;\&quot; is not found.&quot;</span>).format(i))<br>ValueError: <span class="hljs-string">&quot;blueset.wechat&quot;</span> is not found.<br></code></pre></td></tr></table></figure></div><p>最后一句表明主体 <code>efb-wechat-slave</code> 并没有安装好，尝试再次安装</p><div class="highlight-wrap" data-rel="Subunit"><figure class="iseeu highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs subunit">root@xxxxx:~# pip3 install efb-wechat-slave<br>Collecting efb-wechat-slave<br>  Using cached efb_wechat_slave<span class="hljs-string">-2</span>.0.4-py3-none-any.whl (216 kB)<br> 省略``<br>Installing collected packages: PyYaml, itchat, efb-wechat-slave<br>  Attempting uninstall: PyYaml<br>    Found existing installation: PyYAML 3.12<br><span class="hljs-keyword">ERROR: </span>Cannot uninstall &#x27;PyYAML&#x27;. It is a distutils installed project and thus we cannot accurately determine which files belong to it which would lead to only a partial uninstall.<br></code></pre></td></tr></table></figure></div><p>最后一句红字报错，翻译过来就是，错误：无法卸载“ PyYAML”。 这是一个 distutils 安装的项目，因此我们无法准确确定属于该文件的文件，这只会导致部分卸载。<br>pip 10 不再卸载 distutils 软件包。所以降级到 pip 8.1.1，根目录下：</p><blockquote><p><code>sudo -H pip3 install pip==8.1.1</code></p></blockquote><p>再次安装 efb-wechat-slave，安装代码见 5.2.2 部分。</p><h5 id="6-3-2-simplejson-errors-JSONDecodeError"><a href="#6-3-2-simplejson-errors-JSONDecodeError" class="headerlink" title="6.3.2 simplejson.errors.JSONDecodeError"></a>6.3.2 simplejson.errors.JSONDecodeError</h5><p>在 ehforwarderbot 运行之后，表现为 <code>Initializing slave blueset.wechat...</code> 之后，提示如下：</p><div class="highlight-wrap" data-rel="Arduino"><figure class="iseeu highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-number">2021</span><span class="hljs-number">-04</span><span class="hljs-number">-21</span> <span class="hljs-number">02</span>:<span class="hljs-number">25</span>:<span class="hljs-number">24</span>,<span class="hljs-number">378</span> [Level <span class="hljs-number">99</span>]: ehforwarderbot.__main__ (__main__.init; [*main*.py:<span class="hljs-number">129</span>](main.py:<span class="hljs-number">129</span>))<br> Initializing slave blueset.wechat...<br><span class="hljs-built_in">Traceback</span> (most recent call last):<br><span class="hljs-built_in">File</span> <span class="hljs-string">&quot;/usr/local/bin/ehforwarderbot&quot;</span>, line <span class="hljs-number">8</span>, in &lt;<span class="hljs-keyword">module</span>&gt;<br>sys.<span class="hljs-built_in">exit</span>(<span class="hljs-built_in">main</span>())<br><span class="hljs-built_in">File</span> <span class="hljs-string">&quot;/usr/local/lib/python3.8/dist-packages/ehforwarderbot/__main__.py&quot;</span>, line <span class="hljs-number">339</span>, in main<br>。。。省略。。。<br><span class="hljs-built_in">File</span> <span class="hljs-string">&quot;/usr/lib/python3/dist-packages/simplejson/decoder.py&quot;</span>, line <span class="hljs-number">400</span>, in raw_decode<br><span class="hljs-keyword">return</span> self.<span class="hljs-built_in">scan_once</span>(s, idx=_w(s, idx).<span class="hljs-built_in">end</span>())<br>simplejson.errors.JSONDecodeError: Expecting value: line <span class="hljs-number">1</span> column <span class="hljs-number">1</span> (<span class="hljs-type">char</span> <span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure></div><p>解决方案：<br>1.使用电脑打开微信网页版，检查你的 Web 网页登录权限是否健在<br>2.重启 vps，重新登录看是否好转<br>3.尝试删除这个文件：</p><blockquote><p>.ehforwarderbot&#x2F;profiles&#x2F;default&#x2F;blueset.wechat&#x2F;wxpy.pkl<br> <br>具体为：</p></blockquote><blockquote><p><code>rm -f .ehforwarderbot/profiles/default/blueset.wechat/wxpy.pkl</code></p></blockquote><p>4.使用 <code>kill -9</code> 强制关闭 ehforwarderbot 进程<br>2021 年 12 月 23 日，我的朋友、以及在群里的部分人遭遇了掉线，以及如上报错，使用该方法成功登录</p><p>在使用 <code>systemctl start efb.service</code> 指令后，使用 <code>ps -aux</code> 查看当前所有进程的情况</p><p>你会发现 ehforwarderbot 的 PID 一直在变，于是使用简单的 kill 命令无法正常关闭该进程，使用以下命令（多运行几次），将其结束掉</p><blockquote><p><code>ps aux | grep ehforwarderbot | awk &#39;&#123;print $2&#125;&#39;  | xargs kill -9</code></p></blockquote><p>再次使用 <code>ps -aux</code> 查看进程直至 ehforwarderbot 已经被关闭，稍等片刻再尝试登录</p><h5 id="6-3-3-冲突轮询，请确保只有一个实例在运行"><a href="#6-3-3-冲突轮询，请确保只有一个实例在运行" class="headerlink" title="6.3.3 冲突轮询，请确保只有一个实例在运行"></a>6.3.3 冲突轮询，请确保只有一个实例在运行</h5><p>一般是你刚使用 <code>ehforwarderbot</code> 进行登录后，由于你继续使用 <code>systemctl</code> 做进程守护，导致运行了两个实例，只需要确保进程守护已经做好后：<br>1.把 efb 进程停止</p><blockquote><p><code>systemctl stop efb.service</code></p></blockquote><p>2.查看一下 efb 进程是否为 died，而非 running</p><blockquote><p><code>systemctl status efb.service</code></p></blockquote><p>3.使用 <code>systemctl start efb.service</code> 启动 EFB，而不是刚开始搭建完毕时使用的 <code>ehforwarderbot</code>，并用 <code>journalctl -f -u efb.service</code> 来查看后台进程的情况。</p><p>4.如出现二维码 qrcode 的链接，打开或复制到浏览器去扫码登录，如提示正在初始化从端、加载中间件、所有中间件加载完毕等字样，说明已经登录成功了。</p><h5 id="6-3-4-偶尔发现没有消息推送了怎么办？"><a href="#6-3-4-偶尔发现没有消息推送了怎么办？" class="headerlink" title="6.3.4 偶尔发现没有消息推送了怎么办？"></a>6.3.4 偶尔发现没有消息推送了怎么办？</h5><p>虽说 EFB 能保持数月不掉线。<br>但为延长续航，我用空调狗等 APP(Android) 冻结了微信、IOS 不开启消息微信推送，但是手机版微信不能长期不上线，有时候手机关机没电太久，也会导致 EFB 掉线，这时就需要到 VPS 服务器控制端，手动重启服务器，一般就能重连。</p><h3 id="7-EFB-讨论相关"><a href="#7-EFB-讨论相关" class="headerlink" title="7.EFB 讨论相关"></a>7.EFB 讨论相关</h3><p><a href="https://github.com/ehForwarderBot/ehForwarderBot/discussions">Github Discussions (论坛&#x2F;社区)</a> <em>主要</em> 讨论社区</p><p><a href="https://t.me/EFBSupport">Telegram 频道</a>群组入口请从此处进入</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;一些话&quot;&gt;&lt;a href=&quot;#一些话&quot; class=&quot;headerlink&quot; title=&quot;一些话&quot;&gt;&lt;/a&gt;一些话&lt;/h3&gt;&lt;p&gt;终究还是要感谢开发、维护的作者、贡献者：&lt;br&gt;Eana Hufwe&lt;br&gt;&lt;img src=&quot;https://cdn.specia</summary>
      
    
    
    
    <category term="技术" scheme="https://inkcodes.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="wechat" scheme="https://inkcodes.com/tags/wechat/"/>
    
    <category term="EFB" scheme="https://inkcodes.com/tags/EFB/"/>
    
    <category term="bot" scheme="https://inkcodes.com/tags/bot/"/>
    
    <category term="TG" scheme="https://inkcodes.com/tags/TG/"/>
    
  </entry>
  
  <entry>
    <title>时光总是那么快，转眼已是一年</title>
    <link href="https://inkcodes.com/2020/10/05/%E6%97%B6%E5%85%89%E6%80%BB%E6%98%AF%E9%82%A3%E4%B9%88%E5%BF%AB%EF%BC%8C%E8%BD%AC%E7%9C%BC%E5%B7%B2%E6%98%AF%E4%B8%80%E5%B9%B4/"/>
    <id>https://inkcodes.com/2020/10/05/%E6%97%B6%E5%85%89%E6%80%BB%E6%98%AF%E9%82%A3%E4%B9%88%E5%BF%AB%EF%BC%8C%E8%BD%AC%E7%9C%BC%E5%B7%B2%E6%98%AF%E4%B8%80%E5%B9%B4/</id>
    <published>2020-10-04T16:11:11.000Z</published>
    <updated>2024-11-13T16:11:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;每至中秋，我都感悟颇多，这是我有几天的时间与最关心我的亲戚们接触、交流的机会。我的三孃，总是那个忙碌的身影，在凌晨的夜里，在烤烟的清香里，永远都有她最淳朴的样子；我的二孃，在深夜的灯光里，总是以温柔的口吻，与我探讨做人做事的方法。</p><p>&emsp;&emsp;都说每缝佳节倍思亲，而失去，才会让自己主动地去感悟真情，中秋夜，我们吃了饭，便去村子背后的山冈上散步。天气晴的特别好，月光挥洒在田野上，整个村庄静静地躺在温柔如水的月光里——路灯把松针叶照得银灿灿的，微风卷着泥土的清香把路边的野草、灵动的竹叶轻轻拨动。暗夜里的房屋也不在黑暗，烛光、灯光从窗户里微微闪动着。找一片草坪坐下，草尖摩擦着脸颊，虫鸣低语，此刻仿佛一切都不重要了。黏稠的月光轻轻从天上滑落下来——静谧、安详，我喜欢这里，这片土地，这里的一花一木，这里的每一个泥塘，这就是我的家了。它让你莫名有种冲动，即便是在这随便找片玉米地躺下沉沉睡去，你只会觉得浪漫。</p><p>&emsp;&emsp;因为，这里是你沉睡的故乡，有你在的地方，<strong>我便觉得安心</strong>。好像所有难受的日子，只要我在这，都没那么痛苦了。</p><p>&emsp;&emsp;我羡慕别人，能在父亲六十的年纪，挑一个夜晚，爷俩一人一瓶啤酒，守在电视前，为西班牙的某次进球举杯痛饮，能在爸爸的责怪声里，用半月的工资给他买一件名牌大衣“强行”套在他的身上，能在某次回家推开门的瞬间，耳边传来老头子义愤填膺的臭骂：“XXX就是个大汉奸，你看看他做这些事有哪一个是为老百姓着想的？？”，我笑着回他：“你就是个中年愤青~网上传的消息真真假假，每一个你都当真，这个世界哪里会好了？”，接着老头子会旁征博引、据理力争，把一顿午饭变成辩论赛现场。</p><p>&emsp;&emsp;<strong>这些，我都梦到过，不止一次</strong>，真美好呀</p><p>&emsp;&emsp;终究是南柯一梦——</p><p>&emsp;&emsp;思绪疯狂地把我拉回到病床前、救护车上、车来车往的街角、某个二楼的餐桌上、狭隘而空气浑浊的某个小房间里。</p><p>&emsp;&emsp;争吵、责骂、鼓励、夸奖、笑骂，一句句话语从耳边闪过。</p><p>&emsp;&emsp;你挥洒毛笔、怀抱吉他深情演奏时的意气风发，你背上仅有的一床铺盖独自奔向学校时的坚毅步伐，你握紧拳头、捂着褶皱的口袋，没能去参加郊游的难过失落，你抱着穿着开裆裤的我站在大街上时的幸福笑容，你在应酬酒桌上沉默内敛、保持谦虚时的低调风采，你去到农户家里轻松惬意、大口喝酒的耿直爽快，你寻找待在教室不回家吃饭的我时，焦虑万分、那抬起又最终放下手掌，你躺在沙发上，瘦弱的双腿上那松软的肌肉微微颤抖的样子，你只能动动眼睛，浮肿的双手却不断握紧我手心的心酸模样。</p><p>&emsp;&emsp;景、声、画， 他们交叉着一遍遍在我脑海里翻来覆去，我只能默默告诉自己：未来总会前进的， 一定，一定会的。</p><p>&emsp;&emsp;前晚，我三孃一手拿着剪刀修剪着烟叶，一边缓缓对我说“阿翔，反正这里就是你的家，你有时间就过来，什么都不用带，只要你想回来，就给我们打电话。”，中秋夜，二孃一边切着月饼，一边与我谈工作、谈过去，现在和未来，言语所至，尽是关怀，假期结束返工时，二叔一边帮我收拾着东西，一边告诉我要摆正心态，从来不要觉得自己缺失了什么&#96;&#96;&#96;&#96;&#96;&#96;有他们在，我更觉这片土地是有容我一身之处的，我受之滋养，受人关心，我有时与孤独作伴，有时与他们前行，孤独时反思自己，与他们作伴时我倍觉温暖。</p><p>&emsp;&emsp;时光总是那么快，我还有很多事要去做，我更希望自己回忆所至是你留下的做人的道理，去悟，去学，我发现亲自做事比空想更能体会其中乐趣，换位思考我能看到别人的难处，实践会看到自己的短板。这些东西比自我悲伤教人成熟得更快，我想这也是你希望看到的——我会成长的</p><p>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;——2020年10月14日前</p><p><img src="https://cdn.specialhua.top/img/2020-10-05-143641.png" srcset="/img/loading.gif" lazyload alt="配图"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&amp;emsp;&amp;emsp;每至中秋，我都感悟颇多，这是我有几天的时间与最关心我的亲戚们接触、交流的机会。我的三孃，总是那个忙碌的身影，在凌晨的夜里，在烤烟的清香里，永远都有她最淳朴的样子；我的二孃，在深夜的灯光里，总是以温柔的口吻，与我探讨做人做事的方法。&lt;/p&gt;
&lt;p&gt;&amp;e</summary>
      
    
    
    
    <category term="生活" scheme="https://inkcodes.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="随想" scheme="https://inkcodes.com/tags/%E9%9A%8F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>利用Telegram收发微信——EFB2.0</title>
    <link href="https://inkcodes.com/2019/09/10/%E5%88%A9%E7%94%A8Telegram%E6%94%B6%E5%8F%91%E5%BE%AE%E4%BF%A1%E2%80%94%E2%80%94EFB2.0/"/>
    <id>https://inkcodes.com/2019/09/10/%E5%88%A9%E7%94%A8Telegram%E6%94%B6%E5%8F%91%E5%BE%AE%E4%BF%A1%E2%80%94%E2%80%94EFB2.0/</id>
    <published>2019-09-10T03:12:34.000Z</published>
    <updated>2024-12-02T17:12:47.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="更新说明"><a href="#更新说明" class="headerlink" title="更新说明"></a>更新说明</h3><p>本篇采用的是 Docker 进行安装，博客已更新采用官方安装的方式，更加快捷、升级方便。</p><p>传送链接：<a href="https://specialhua.top/20210402/cid=71.html">EFB 官方安装方法</a></p><h3 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h3><p>EH Forwarder Bot（EFB） 是一个可扩展的开源聊天平台隧道 Bot 框架，目前支持在 Telegram 上收发微信、QQ、Facebook Message 信息，支持文字、语音、图片、视频、表情互通，虽有一些功能限制但可用性良好</p><p>简单来说，收发原理是：<br><strong>Telegram bot &gt; EFB &gt; 微信网页版 &gt; 微信</strong><br>TG 与微信之间并无联系，但使用了 <em>TG 机器人</em>，<em>EFB 项目</em>，<em>微信网页版</em>，即可实现互通</p><hr><p>以前使用 Gcmformojo 也是利用微信网页版，但是作者自建第三方 APP，优化较差，总是会出现消息无法发送、消息接受延迟，遗漏消息等问题，还需要挂小飞机才行，所以慢慢放弃使用，转向利用 TG 的 EFB</p><h4 id="1-1-关于-TG-bot"><a href="#1-1-关于-TG-bot" class="headerlink" title="1.1 关于 TG bot"></a>1.1 关于 TG bot</h4><p>Telegram Bot 是基于 Telegram 客户端的第三方程序。用户可以通过向 Bot 发送信息、照片、指令、在线请求等一系列的方式于 Bot 互动。Bot 的所有者通过 Bot 的 API（Application Programming Interface）访问并请求 Telegram Server 的信息。可以将 Bot 理解为一个更加智能的可以接受指令并可以爬取网络信息的微信公众号（或者类比于 UI 设计没那么好的微信小程序）。</p><p>Telegram 可以实现诸多实用的功能，包括但不限于：</p><p>获取个性化的新闻<br>与其它服务结合（收发 Gmail 邮件，获取 Facebook 推送， 接受微信消息， 下载 Youtube 视频）<br>创建在线的商店，发布售卖的物品并进行在线支付<br>创建多人游戏（狼人 Bot，阿瓦隆 Bot）</p><blockquote><p>——来源：知乎  <a href="https://zhuanlan.zhihu.com/yonghao">@程序员之路</a>，<a href="https://zhuanlan.zhihu.com/p/30450761">原文链接戳此</a></p></blockquote><hr><p>你可以把 Telegram bot 理解为 QQ 群中某些机器人，在群聊中他能实现入群审核、自动回复等，在 TG 中也是一样的，通过开发者，bot 能实现的功能丰富多样，我们的 EFB 也是利用 bot 做到多平台间消息同步。<br>使用 bot 并不复杂，由于大量的代码已由作者完善并发布在 <a href="https://github.com/blueset/ehForwarderBot">Github：ehForwarderBot</a>，我们只需在 TG 软件中创建 bot 并记录相关的 API token 等私密信息，再由我们的服务器连接 bot 就可以使用了</p><h4 id="1-2-关于微信网页版"><a href="#1-2-关于微信网页版" class="headerlink" title="1.2 关于微信网页版"></a>1.2 关于微信网页版</h4><p>由于手机 APP 及 PC 桌面版的大量使用，现在已经很少有人使用网页版了<br>本项目需要调用微信网页版，<strong>警告如下！警告如下！警告如下！（重要的事说三遍！）</strong></p><p><strong>微信会对使用第三方客户端登录微信网页版的用户实行封禁，就是无法再使用网页版登录网页版微信！根据经验微信账号较老的用户封禁率似乎不高。</strong></p><p>PS：我的微信号大概是 2013 年创建的，目前使用 EFB 近两年无封禁</p><h3 id="2-能实现的功能及优点"><a href="#2-能实现的功能及优点" class="headerlink" title="2.能实现的功能及优点"></a>2.能实现的功能及优点</h3><p>综合考虑微信的功能，对比 EFB 项目，其功能及优缺点如下：</p><h4 id="2-1-功能"><a href="#2-1-功能" class="headerlink" title="2.1 功能"></a>2.1 功能</h4><p>1.<strong>文字消息的收发</strong><br>2.<strong>图片的收发</strong><br>3.<strong>视频的读取（从 tg 发视频，对方收到的是文件）</strong><br>4.<strong>语音的接收（从 tg 发语音，对方收到的是文件）</strong><br>5.<strong>tg 表情包支持（tg 有很多丰富的静态表情包资源，发到微信客户端上正常显示，但是 TG 里的动态表情微信无法支持）</strong>，另外注意不要发送涉黄、政治敏感的表情包，避免被微信屏蔽或封禁<br>6.<strong>传送文件</strong><br>7.<strong>对方发来的定位信息能显示具体的地址和地图简略信息，但无法打开地图界面</strong><br>8.<strong>公众号信息也能推送，而且 TG 自带应用内浏览器，也能方便的查看公众号推送的文章</strong></p><h4 id="2-2-优点："><a href="#2-2-优点：" class="headerlink" title="2.2 优点："></a>2.2 优点：</h4><p>1.<strong>消息云同步，文字，语音，图片，视频，发送的链接，文件都可以保存在 tg 云端</strong><br>2.<strong>消息几乎无延迟，对比 Gcmformojo，tg 发消息很快，没有卡顿，就像你正常聊 tg 一样，也几乎没有消息发送失败的情况</strong><br>3.<strong>耗电，明显优于微信毒瘤。tg 自带 gcm，如果你需要，可以不留 tg 后台，由 gcm 拉起通知</strong><br>4.<strong>无需挂梯，以往 Gcmformojo 有的地区需要挂飞机才能收发，而 tg 自带一个代理功能，能够正常使用 TG 即可通过其代理收发微信</strong><br>5.<strong>TG 支持的消息功能，将会“镜像”的同步于微信，比如最近 TG 刚更新的延迟、定时发送消息的功能</strong></p><h4 id="2-3-缺点："><a href="#2-3-缺点：" class="headerlink" title="2.3 缺点："></a>2.3 缺点：</h4><p>1.语音通话、视频通话不支持，原因比较简单，微信利用自身 APP 实现，当然不能放到 TG 上实现，但是 TG 会发送一段文字，如：</p><blockquote><p>微信团队: (不支持)<br>[Unsupported message, please check your phone.]</p></blockquote><p>接收到这样的信息请及时打开手机微信查看是否有通话消息，有时还是会遗漏语音通话消息的</p><p>2.默认所有消息会通过你创建的 TG bot 发送给你，也就是你的好友 A,B,C 的消息都通过一个聊天窗口发送给你，刚开始会比较乱，但是通过 TG 的群组功能，可实现消息分流，但需要你手动创建群组 A，群组 B，群组 C 来分流消息</p><hr><p>那么，教程开始：</p><h3 id="3-准备工作"><a href="#3-准备工作" class="headerlink" title="3.准备工作"></a>3.准备工作</h3><p>1.一台能访问国外网站的 VPS 服务器，即要连通 Telegram（我目前在用 Vultr，相对比较便宜了，目前支持 支付宝、微信直接充值，如果有需要的可以用我的推广链注册：<strong><a href="https://www.vultr.com/?ref=7262396">https://www.vultr.com/?ref=7262396</a></strong>）（它是为了吸引用户，通过分享注册链的方式，如果你用我的链注册并充值 10 刀，使用 30 天以上我会收到 10 刀，算是对我的支持吧~）<br>（还有这个注册链：<strong><a href="https://www.vultr.com/?ref=7927355-4F">https://www.vultr.com/?ref=7927355-4F</a></strong>，如果你充值 25 刀，使用 30 天，它会送你 50 刀，我也获得 25 刀）</p><p>2.手机搭建需要 Juice ssh，这款软件，链接: <a href="https://pan.baidu.com/s/1bCGWe6">https://pan.baidu.com/s/1bCGWe6</a> 密码: sm1p<br>（手机端的设置具体参考我另外一篇教程靠前部分：链接: <a href="https://pan.baidu.com/s/1E2BvTKdGej0lSlkEwNHO_g">https://pan.baidu.com/s/1E2BvTKdGej0lSlkEwNHO_g</a> 提取码: xhg2）</p><p>3.windows 搭建需要 xshell，请自行上网搜索</p><p>4.Telegram，主体软件。play 商店或去 apkpure 搜索下载</p><p>5.系统使用 Ubuntu 18.04 x64</p><h3 id="4-主体教程"><a href="#4-主体教程" class="headerlink" title="4.主体教程"></a>4.主体教程</h3><p>采用<a href="https://www.appinn.com/author/qingwa/">小众软件 青小蛙</a>的教程：<br><a href="https://www.appinn.com/efbv2-docker-tutorial/">EFB V2 简明安装教程</a></p><p>由于青小蛙的机器人配置阶段不太完整，综合整理网上配置教程，综合融入到我这篇教程中</p><h4 id="4-1-配置-TG-机器人阶段"><a href="#4-1-配置-TG-机器人阶段" class="headerlink" title="4.1 配置 TG 机器人阶段"></a>4.1 配置 TG 机器人阶段</h4><h5 id="4-1-1-获取-Bot-Token"><a href="#4-1-1-获取-Bot-Token" class="headerlink" title="4.1.1 获取 Bot Token"></a>4.1.1 获取 Bot Token</h5><p>1.在 Telegram 里, 对 @botfather 说话: &#x2F;newbot<br>2.按照要求给 Bot 取名<br>3.获取 Bot Token 安全原因: Token 必须保密（这串 token 要记好，<strong>待会要用</strong>）<br>4.允许 Bot 读取非指令信息，对 @botfather 说话: &#x2F;setprivacy, 选择 disable<br>5.允许将 Bot 添加进群组，对 @botfather 说话: &#x2F;setjoingroups, 选择 enable<br>6.允许 Bot 提供指令列表，对 @botfather 说话: &#x2F;setcommands, 输入以下内容</p><div class="highlight-wrap" data-rel="Erlang"><figure class="iseeu highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs erlang">help - 显示命令列表.<br>link - 将远程会话绑定到 Telegram 群组<br>chat - 生成会话头<br>recog - 回复语音消息以进行识别<br>info - 显示当前 Telegram 聊天的信息.<br>unlink_all - 将所有远程会话从 Telegram 群组解绑.<br>update_info - 更新群组名称和头像<br>extra - 获取更多功能<br></code></pre></td></tr></table></figure></div><p>(复制以上内容一次性发给 botfather)</p><p>见图：</p><h5 id="4-1-2-获取-Telegram-账户-ID"><a href="#4-1-2-获取-Telegram-账户-ID" class="headerlink" title="4.1.2 获取 Telegram 账户 ID"></a>4.1.2 获取 Telegram 账户 ID</h5><p>再和另外一个机器人 @get_id_bot 对话（也是搜索得到这个机器人），点击 start 即可获得你的 Telegram ID，一串数字（Chat ID）。</p><p>至此，Telegram 的配置完成，我们得到两个重要的数字：token、Telegram ID（<strong>待会要用</strong>）</p><h4 id="4-2VPS-搭建阶段"><a href="#4-2VPS-搭建阶段" class="headerlink" title="4.2VPS 搭建阶段"></a>4.2VPS 搭建阶段</h4><p>鉴于每个人的系统环境不同，无论多么详尽的安装教程都会产生各种各样的问题，而这些问题绝大多数都与 EFB 无关，更多的是系统环境配置问题，所以本着多一事不如少一事的原则，这里使用 docker 安装。而 Docker 能够有效避免不同用户系统环境不同导致的问题。</p><p>目前的 Ubuntu 18.04+ 版本更推荐使用 apt 安装，简单快捷：</p><h5 id="4-2-1-基础环境配置"><a href="#4-2-1-基础环境配置" class="headerlink" title="4.2.1 基础环境配置"></a>4.2.1 基础环境配置</h5><div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt update<br>apt install docker.io<br>curl -L <span class="hljs-string">&quot;https://github.com/docker/compose/releases/download/1.24.1/docker-compose-<span class="hljs-subst">$(uname -s)</span>-<span class="hljs-subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose<br><span class="hljs-built_in">chmod</span> +x /usr/local/bin/docker-compose<br></code></pre></td></tr></table></figure></div><p>一行一行复制粘贴，即可完成安装</p><h5 id="4-2-2-配置-EFB-V2"><a href="#4-2-2-配置-EFB-V2" class="headerlink" title="4.2.2 配置 EFB V2"></a>4.2.2 配置 EFB V2</h5><p>首先创建一个文件夹，这里以 efbv2 为例。<br>青小蛙在这里给出了整个 efbv2 文件夹的目录结构，<strong>注意这并不是代码块</strong>：</p><p>├── blueset.telegram<br>│   ├── config.yaml<br>│   └── tgdata.db *<br>├── blueset.wechat *<br>│   ├── wxpy.pkl *<br>│   └── wxpy_puid.pkl *<br>├── config.yaml<br>└── docker-compose.yml **</p><p>标记 * 号为自动生成的路径和文件，可以不用管它，** 可见最后。</p><p>也就是说整个目录里我们需要新建文件进行编辑的只有：<br>文件夹：<br>1.efbv2<br>2.blueset.telegram(1 的子目录)<br>文件：<br>1.config.yaml（efbv2 下）<br>2.config.yaml（blueset.telegram 下）<br>其他在运行 efb 后会自动生成，<code>mkdir</code> 是新建文件夹语法，<code>touch</code> 是新建文件，<code>vim</code> 是编辑文件，编辑文件按 i，保存文件用 ESC 退出编辑模式后:wq</p><hr><p>所以，当你使用 xshell 或 juice ssh 连接到你的 ubuntu 服务器后，在根目录下：</p><div class="highlight-wrap" data-rel="Arduino"><figure class="iseeu highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">mkdir efbv2<br></code></pre></td></tr></table></figure></div><p>这样你就在根目录下创建了一个叫 efbv2 的文件夹<br>接下来，使用</p><div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> efbv2<br></code></pre></td></tr></table></figure></div><p>进入到 efbv2 这个文件夹中</p><div class="highlight-wrap" data-rel="Arduino"><figure class="iseeu highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">touch config.yaml<br></code></pre></td></tr></table></figure></div><p>创建了一个 config.yaml 的文件</p><div class="highlight-wrap" data-rel="Arduino"><figure class="iseeu highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">vim config.yaml<br></code></pre></td></tr></table></figure></div><p>进入编辑器，复制粘贴以下内容：</p><div class="highlight-wrap" data-rel="Ldif"><figure class="iseeu highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-attribute">master_channel</span>: blueset.telegram<br><span class="hljs-attribute">slave_channels</span>:<br><span class="hljs-literal">-</span> blueset.wechat<br><span class="hljs-attribute">middlewares</span>:<br><span class="hljs-literal">-</span> catbaron.sticker2img<br><span class="hljs-literal">-</span> filter.FilterMiddleware<br></code></pre></td></tr></table></figure></div><p>粘贴完毕后，按 ESC 键，输入</p><div class="highlight-wrap" data-rel="Clojure"><figure class="iseeu highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clojure"><span class="hljs-symbol">:wq</span><br></code></pre></td></tr></table></figure></div><p>保存该文件</p><hr><p>接下来我们需要创建 blueset.telegram 文件夹及创建 config.yaml 文件了，同样，在 efbv2 这个文件夹下（目前已经在了）</p><div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> blueset.telegram<br><span class="hljs-built_in">touch</span> blueset.telegram/config.yaml<br></code></pre></td></tr></table></figure></div><p>使用 cd 命令进入 blueset.telegram 文件夹后使用</p><div class="highlight-wrap" data-rel="Arduino"><figure class="iseeu highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">vim config.yaml<br></code></pre></td></tr></table></figure></div><p>复制粘贴并修改以下内容：<br><strong>注意：替换“你的 Telegram User ID”为前面获取到的 Telegram ID，替换“Telegram Bot’s token”为获取到的 token</strong></p><div class="highlight-wrap" data-rel="Crmsh"><figure class="iseeu highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">token: <span class="hljs-string">&quot;Telegram Bot&#x27;s token&quot;</span><br>admins:<br> - 你的 Telegram <span class="hljs-keyword">User</span> <span class="hljs-title">ID</span><br></code></pre></td></tr></table></figure></div><p>示例如下：</p><p>&#96;token: “ABC1234567890XXXXXXXXXXXX”<br>admins:</p><ul><li>123456789&#96;</li></ul><h5 id="4-2-3-运行"><a href="#4-2-3-运行" class="headerlink" title="4.2.3 运行"></a>4.2.3 运行</h5><p>由于缀述怎么进入某个目录太繁琐，使用 cd 命令进入 efbv2 文件夹后</p><div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">touch</span> docker-compose.yml<br></code></pre></td></tr></table></figure></div><p>并用 vim 命令修改该文件内容</p><div class="highlight-wrap" data-rel="Dts"><figure class="iseeu highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">efbv2:</span><br><span class="hljs-symbol">  image:</span> scavin/docker-efbv2:dev<br><span class="hljs-symbol">  container_name:</span> efbv2<br><span class="hljs-symbol">  restart:</span> always<br><span class="hljs-symbol">  volumes:</span><br>    - ./:<span class="hljs-keyword">/root/</span>.ehforwarderbot<span class="hljs-keyword">/profiles/</span>default/ <br></code></pre></td></tr></table></figure></div><p>同样，ESC，并用“:wq”保存文件后，运行：</p><div class="highlight-wrap" data-rel="Ebnf"><figure class="iseeu highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker-compose up -d</span><br></code></pre></td></tr></table></figure></div><p>最后，使用下面的命令查看微信登录二维码：</p><div class="highlight-wrap" data-rel="Nginx"><figure class="iseeu highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">docker</span> logs efbv2<br></code></pre></td></tr></table></figure></div><p>此时，就会出现二维码了<br>（电脑版 xshell 你可以用微信直接扫，如果你用手机 juice ssh，需要缩放界面到很小，二维码才显示得出来，而且你需要截图二维码发到第三方，再用后置摄像头扫，从相册选取会提示版本不够）</p><h4 id="5-使用你的-EFB-机器人"><a href="#5-使用你的-EFB-机器人" class="headerlink" title="5.使用你的 EFB 机器人"></a>5.使用你的 EFB 机器人</h4><h5 id="5-1-如何分流消息？"><a href="#5-1-如何分流消息？" class="headerlink" title="5.1 如何分流消息？"></a>5.1 如何分流消息？</h5><p>efb 项目的原理是这样的：<br><strong>Telegram bot &gt; EFB &gt; 微信网页版 &gt; 微信</strong></p><p>所以你搭建成功后，就像前面说的，所有的微信消息都是通过你的机器人发过来 ，消息一多，就很杂乱。<br>利用 telegram 的群组功能，你可以很方便的分流信息：</p><p>下面使用一个例子来说明（假设你有一名叫梁 AB 的好友）<br>首先在 Telegram 中创建一个新的群组，就用梁 AB 这个名字，然后将你的机器人邀请进来，群组创建完毕。</p><p>回到你的机器人对话中，将梁 AB 的微信好友单独作为 TG 中的聊天对话框，就输入 &#x2F;link 梁 A（不必输全名，机器人会检索含有此关键字的所有好友，然后选择 link，选择你刚刚创建的 梁 AB 这个群组，成功后，以后这个叫梁 AB 的好友发来的信息不会在机器人那显示了，而是在这个群组）</p><p>我把常聊的几个人单独建了 TG 群，使消息分流，其余不常用的，使用机器人窗口接收，公众号及群消息也单独建群。</p><h5 id="5-2-偶尔发现没有消息推送了怎么办？"><a href="#5-2-偶尔发现没有消息推送了怎么办？" class="headerlink" title="5.2 偶尔发现没有消息推送了怎么办？"></a>5.2 偶尔发现没有消息推送了怎么办？</h5><p>虽说 EFB 能保持数月不掉线<br>但为延长续航，我用空调狗等 APP 冻结了微信，但是手机版微信不能长期不上线，有时候手机关机没电太久，也会导致 EFB 掉线，这时就需要到 VPS 服务器控制端，手动重启服务器，一般就能重连<br>以及尝试再次使用<br>docker logs efbv2<br>重启 EFB<br>配合 TG 机器人里的 &#x2F;start 命令启动机器人</p><p>PS：v2 版本我目前只因一次手机关机太久导致掉线</p><h5 id="5-3EFB-项目-TG-群在哪里？"><a href="#5-3EFB-项目-TG-群在哪里？" class="headerlink" title="5.3EFB 项目 TG 群在哪里？"></a>5.3EFB 项目 TG 群在哪里？</h5><p>中文群组搜索：EFB User’s Group 加入</p><h5 id="5-4-TG-代理？"><a href="#5-4-TG-代理？" class="headerlink" title="5.4 TG 代理？"></a>5.4 TG 代理？</h5><p>这里提供两个免费的 TG 群，他们定期发布 tg 代理直连的信息。这样你就不用挂 TI 子才能看微信消息了。<br><a href="https://t.me/socks5list">https://t.me/socks5list</a></p><p><a href="https://t.me/mtproxyisfree">https://t.me/mtproxyisfree</a></p><p>或者寻找一些做 tg 代理推广的群组，机场</p><hr><p>最后，完结。有什么问题欢迎和我交流，我博客主页有相关联系方式，酷安 ID：走吧</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;更新说明&quot;&gt;&lt;a href=&quot;#更新说明&quot; class=&quot;headerlink&quot; title=&quot;更新说明&quot;&gt;&lt;/a&gt;更新说明&lt;/h3&gt;&lt;p&gt;本篇采用的是 Docker 进行安装，博客已更新采用官方安装的方式，更加快捷、升级方便。&lt;/p&gt;
&lt;p&gt;传送链接：&lt;a hr</summary>
      
    
    
    
    <category term="技术" scheme="https://inkcodes.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="EFB" scheme="https://inkcodes.com/tags/EFB/"/>
    
    <category term="bot" scheme="https://inkcodes.com/tags/bot/"/>
    
  </entry>
  
</feed>
